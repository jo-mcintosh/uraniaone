namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.w3.org/1999/xhtml"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2024-10-24T14:11:15Z. . 
# TEI Edition: P5 VersionÂ 4.7.0. Last updated on 16th November 2023, revision e5dd73ed0 
# TEI Edition Location: https://www.tei-c.org/Vault/P5/4.7.0/ 
#

#
tei_macro.abContent = (text | tei_model.paraPart | tei_ab)*
tei_macro.paraContent = (text | tei_model.paraPart)*
tei_macro.limitedContent =
  (text | tei_model.limitedPhrase | tei_model.inter)*
tei_macro.phraseSeq =
  (text
   | tei_model.gLike
   | tei_model.attributable
   | tei_model.phrase
   | tei_model.global)*
tei_macro.phraseSeq.limited =
  (text | tei_model.limitedPhrase | tei_model.global)*
tei_macro.specialPara =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.divPart
   | tei_model.global)*
tei_macro.xtext = (text | tei_model.gLike)*
anyElement_xenoData_1 =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | anyElement_xenoData_1)*
  }
anyElement_egXML_2 =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | anyElement_egXML_2)*
  }
anyElement_content_3 =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | anyElement_content_3)*
  }
  >> sch:pattern [
       id = "d10e88957-constraint"
       "\x{a}" ~
       "         "
       sch:rule [
         context = "tei:content"
         "\x{a}" ~
         "            "
         sch:report [
           test =
             "descendant::*[not(namespace-uri(.) =               ('http://relaxng.org/ns/compatibility/annotations/1.0', 'http://relaxng.org/ns/structure/1.0', 'http://www.tei-c.org/ns/1.0'))]"
           "content descendants must be in the\x{a}" ~
           "              namespaces\x{a}" ~
           "              'http://relaxng.org/ns/compatibility/annotations/1.0', 'http://relaxng.org/ns/structure/1.0', 'http://www.tei-c.org/ns/1.0'"
         ]
         "\x{a}" ~
         "         "
       ]
       "\x{a}" ~
       "      "
     ]
anyElement_constraint_4 =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | anyElement_constraint_4)*
  }
anyElement_datatype_5 =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | anyElement_datatype_5)*
  }
  >> sch:pattern [
       id = "d10e90337-constraint"
       "\x{a}" ~
       "         "
       sch:rule [
         context = "tei:datatype"
         "\x{a}" ~
         "            "
         sch:report [
           test =
             "descendant::*[not(namespace-uri(.) =               ('http://relaxng.org/ns/structure/1.0', 'http://www.tei-c.org/ns/1.0'))]"
           "datatype descendants must be in the\x{a}" ~
           "              namespaces\x{a}" ~
           "              'http://relaxng.org/ns/structure/1.0', 'http://www.tei-c.org/ns/1.0'"
         ]
         "\x{a}" ~
         "         "
       ]
       "\x{a}" ~
       "      "
     ]
tei_att.anchoring.attributes =
  tei_att.anchoring.attribute.anchored,
  tei_att.anchoring.attribute.targetEnd
tei_att.anchoring.attribute.anchored =
  
  ## (anchored) indicates whether the copy text shows the exact place of reference for the note.
  [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?
tei_att.anchoring.attribute.targetEnd =
  
  ## (target end) points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
  attribute targetEnd {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.ascribed.attributes = tei_att.ascribed.attribute.who
tei_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.ascribed.directed.attributes =
  tei_att.ascribed.attributes,
  tei_att.ascribed.directed.attribute.toWhom
tei_att.ascribed.directed.attribute.toWhom =
  
  ## indicates the person, or group of people, to whom a speech act or action is directed.
  attribute toWhom {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.canonical.attributes =
  tei_att.canonical.attribute.key, tei_att.canonical.attribute.ref
tei_att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
tei_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.ranging.attributes =
  tei_att.ranging.attribute.atLeast,
  tei_att.ranging.attribute.atMost,
  tei_att.ranging.attribute.min,
  tei_att.ranging.attribute.max,
  tei_att.ranging.attribute.confidence
tei_att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.confidence =
  [
    a:documentation [
      "specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by "
      ns1:code [ "@min" ]
      " and "
      ns1:code [ "@max" ]
      ", or the proportion of observed values that fall within that range."
    ]
  ]
  attribute confidence { xsd:double }?
tei_att.dimensions.attributes =
  tei_att.ranging.attributes,
  tei_att.dimensions.attribute.unit,
  tei_att.dimensions.attribute.quantity,
  tei_att.dimensions.attribute.extent,
  tei_att.dimensions.attribute.precision,
  tei_att.dimensions.attribute.scope
tei_att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm (centimetres); 2] mm (millimetres); 3] in (inches); 4] line; 5] char (characters)
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "line"
    | 
      ## (characters) characters of text
      "char"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
tei_att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
tei_att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.written.attributes = tei_att.written.attribute.hand
tei_att.written.attribute.hand =
  [
    a:documentation [
      "points to a "
      ns1:code [ "<handNote>" ]
      " element describing the hand considered responsible for the content of the element concerned."
    ]
  ]
  attribute hand {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.damaged.attributes =
  tei_att.dimensions.attributes,
  tei_att.written.attributes,
  tei_att.damaged.attribute.agent,
  tei_att.damaged.attribute.degree,
  tei_att.damaged.attribute.group
tei_att.damaged.attribute.agent =
  
  ## categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
  attribute agent {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.damaged.attribute.degree =
  [
    a:documentation [
      "provides a coded representation of the degree of damage, either as a number between 0 (undamaged) and 1 (very extensively damaged), or as one of the codes high, medium, low, or unknown. The "
      ns1:code [ "<damage>" ]
      " element with the "
      ns1:code [ "@degree" ]
      " attribute should only be used where the text may be read with some confidence; text supplied from other sources should be tagged as "
      ns1:code [ "<supplied>" ]
      "."
    ]
  ]
  attribute degree {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
tei_att.damaged.attribute.group =
  
  ## assigns an arbitrary number to each stretch of damage regarded as forming part of the same physical phenomenon.
  attribute group { xsd:nonNegativeInteger }?
tei_att.breaking.attributes = tei_att.breaking.attribute.break
tei_att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.cReferencing.attributes = tei_att.cReferencing.attribute.cRef
tei_att.cReferencing.attribute.cRef =
  [
    a:documentation [
      "(canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a "
      ns1:code [ "<refsDecl>" ]
      " element in the TEI header"
    ]
  ]
  attribute cRef { xsd:string }?
tei_att.datable.w3c.attributes =
  tei_att.datable.w3c.attribute.when,
  tei_att.datable.w3c.attribute.notBefore,
  tei_att.datable.w3c.attribute.notAfter,
  tei_att.datable.w3c.attribute.from,
  tei_att.datable.w3c.attribute.to
tei_att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id = "myTEI-att.datable.w3c-att-datable-w3c-when-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "myTEI-att.datable.w3c-att-datable-w3c-from-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "myTEI-att.datable.w3c-att-datable-w3c-to-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.datable.attributes =
  tei_att.datable.w3c.attributes, tei_att.datable.attribute.period
tei_att.datable.attribute.period =
  [
    a:documentation [
      "supplies pointers to one or more definitions of named periods of time (typically "
      ns1:code [ "<category>" ]
      "s, "
      ns1:code [ "<date>" ]
      "s or "
      ns1:code [ "<event>" ]
      "s) within which the datable item is understood to have occurred."
    ]
  ]
  attribute period {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attributes =
  tei_att.datcat.attribute.datcat,
  tei_att.datcat.attribute.valueDatcat,
  tei_att.datcat.attribute.targetDatcat
tei_att.datcat.attribute.datcat =
  [
    a:documentation [
      "provides a pointer to a definition of, and/or general information about, (a) an information container (element or attribute) or (b) a value of an information container (element content or attribute value), by referencing an external taxonomy or ontology. If "
      ns1:code [ "@valueDatcat" ]
      " is present in the immediate context, this attribute takes on role (a), while "
      ns1:code [ "@valueDatcat" ]
      " performs role (b)."
    ]
  ]
  attribute datcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attribute.valueDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about a value of an information container (element content or attribute value), by reference to an external taxonomy or ontology. Used especially where a contrast with "
      ns1:code [ "@datcat" ]
      " is needed."
    ]
  ]
  attribute valueDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attribute.targetDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about, information structure of an object referenced or modeled by the containing element, by reference to an external taxonomy or ontology. This attribute has the characteristics of the "
      ns1:code [ "@datcat" ]
      " attribute, except that it addresses not its containing element, but an object that is being referenced or modeled by its containing element."
    ]
  ]
  attribute targetDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.declarable.attributes = tei_att.declarable.attribute.default
tei_att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
tei_att.declaring.attributes = tei_att.declaring.attribute.decls
tei_att.declaring.attribute.decls =
  
  ## (declarations) identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.fragmentable.attributes = tei_att.fragmentable.attribute.part
tei_att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
tei_att.divLike.attributes =
  tei_att.metrical.attributes,
  tei_att.fragmentable.attributes,
  tei_att.divLike.attribute.org,
  tei_att.divLike.attribute.sample
tei_att.divLike.attribute.org =
  
  ## (organization) specifies how the content of the division is organized.
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## no claim is made about the sequence in which the immediate contents of this division are to be processed, or their inter-relationships.
    "composite"
    | 
      ## the immediate contents of this element are regarded as forming a logical unit, to be processed in sequence.
      "uniform"
  }?
tei_att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the original source and if so, from which part.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## division lacks material present at end in source.
    "initial"
    | 
      ## division lacks material at start and end.
      "medial"
    | 
      ## division lacks material at start.
      "final"
    | 
      ## position of sampled material within original unknown.
      "unknown"
    | 
      ## division is not a sample.
      "complete"
  }?
tei_att.docStatus.attributes = tei_att.docStatus.attribute.status
tei_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.global.responsibility.attributes =
  tei_att.global.responsibility.attribute.cert,
  tei_att.global.responsibility.attribute.resp
tei_att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
tei_att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.editLike.attributes =
  tei_att.editLike.attribute.evidence,
  tei_att.editLike.attribute.instant
tei_att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
tei_att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
tei_att.global.rendition.attributes =
  tei_att.global.rendition.attribute.rend,
  tei_att.global.rendition.attribute.style,
  tei_att.global.rendition.attribute.rendition
tei_att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
tei_att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.source.attributes =
  tei_att.global.source.attribute.source
tei_att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id =
    "myTEI-att.global.source-source-only_1_ODD_source-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@source]"
    "\x{a}" ~
    "         "
    sch:let [
      name = "srcs"
      value = "tokenize( normalize-space(@source),' ')"
    ]
    "\x{a}" ~
    "         "
    sch:report [
      test =
        "( self::tei:classRef               | self::tei:dataRef               | self::tei:elementRef               | self::tei:macroRef               | self::tei:moduleRef               | self::tei:schemaSpec )               and               $srcs[2]"
      "\x{a}" ~
      "              When used on a schema description element (like\x{a}" ~
      "              "
      sch:value-of [ select = "name(.)" ]
      "), the @source attribute\x{a}" ~
      "              should have only 1 value. (This one has "
      sch:value-of [ select = "count($srcs)" ]
      ".)\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.global.attributes =
  tei_att.global.rendition.attributes,
  tei_att.global.linking.attributes,
  tei_att.global.analytic.attributes,
  tei_att.global.facs.attributes,
  tei_att.global.change.attributes,
  tei_att.global.responsibility.attributes,
  tei_att.global.source.attributes,
  tei_att.global.attribute.xmlid,
  tei_att.global.attribute.n,
  tei_att.global.attribute.xmllang,
  tei_att.global.attribute.xmlbase,
  tei_att.global.attribute.xmlspace
tei_att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
tei_att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
tei_att.global.attribute.xmllang =
  [
    a:documentation [
      "(language) indicates the language of the element content using a tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
tei_att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
tei_att.handFeatures.attributes =
  tei_att.handFeatures.attribute.scribe,
  tei_att.handFeatures.attribute.scribeRef,
  tei_att.handFeatures.attribute.script,
  tei_att.handFeatures.attribute.scriptRef,
  tei_att.handFeatures.attribute.medium,
  tei_att.handFeatures.attribute.scope
tei_att.handFeatures.attribute.scribe =
  
  ## gives a name or other identifier for the scribe believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
tei_att.handFeatures.attribute.scribeRef =
  [
    a:documentation [
      "points to a full description of the scribe concerned, typically supplied by a "
      ns1:code [ "<person>" ]
      " element elsewhere in the description."
    ]
  ]
  attribute scribeRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name+ }
  }?
tei_att.handFeatures.attribute.scriptRef =
  [
    a:documentation [
      "points to a full description of the script or writing style used by this hand, typically supplied by a "
      ns1:code [ "<scriptNote>" ]
      " element elsewhere in the description."
    ]
  ]
  attribute scriptRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other writing medium, e.g. pencil
  attribute medium {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.handFeatures.attribute.scope =
  
  ## specifies how widely this hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
tei_att.internetMedia.attributes =
  tei_att.internetMedia.attribute.mimeType
tei_att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.media.attributes =
  tei_att.internetMedia.attributes,
  tei_att.media.attribute.width,
  tei_att.media.attribute.height,
  tei_att.media.attribute.scale
tei_att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width
  attribute width {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|ch|rem|vw|vh|vmin|vmax)"
    }
  }?
tei_att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|ch|rem|vw|vh|vmin|vmax)"
    }
  }?
tei_att.media.attribute.scale =
  
  ## Where the media are displayed, indicates a scale factor to be applied when generating the desired display size
  attribute scale {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.resourced.attributes = tei_att.resourced.attribute.url
tei_att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url {
    xsd:anyURI { pattern = "\S+" }
  }
tei_att.interpLike.attributes =
  tei_att.interpLike.attribute.type,
  tei_att.interpLike.attribute.subtype,
  tei_att.interpLike.attribute.inst
tei_att.interpLike.attribute.type =
  
  ## indicates what kind of phenomenon is being noted in the passage.
  ## Sample values include: 1] image; 2] character; 3] theme; 4] allusion
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.interpLike.attribute.subtype =
  
  ## (subtype) provides a sub-categorization of the phenomenon is being noted in the passage, if needed
  attribute subtype {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.interpLike.attribute.inst =
  
  ## (instances) points to instances of the analysis or interpretation represented by the current element.
  attribute inst {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.measurement.attributes =
  tei_att.measurement.attribute.unit,
  tei_att.measurement.attribute.unitRef,
  tei_att.measurement.attribute.quantity,
  tei_att.measurement.attribute.commodity
tei_att.measurement.attribute.unit =
  
  ## (unit) indicates the units used for the measurement, usually using the standard symbol for the desired units.
  ## Suggested values include: 1] m (metre); 2] kg (kilogram); 3] s (second); 4] Hz (hertz); 5] Pa (pascal); 6] Î© (ohm); 7] L (litre); 8] t (tonne); 9] ha (hectare); 10] Ã (Ã¥ngstrÃ¶m); 11] mL (millilitre); 12] cm (centimetre); 13] dB (decibel); 14] kbit (kilobit); 15] Kibit (kibibit); 16] kB (kilobyte); 17] KiB (kibibyte); 18] MB (megabyte); 19] MiB (mebibyte)
  attribute unit {
    
    ## (metre) SI base unit of length
    "m"
    | 
      ## (kilogram) SI base unit of mass
      "kg"
    | 
      ## (second) SI base unit of time
      "s"
    | 
      ## (hertz) SI unit of frequency
      "Hz"
    | 
      ## (pascal) SI unit of pressure or stress
      "Pa"
    | 
      ## (ohm) SI unit of electric resistance
      "Î©"
    | 
      ## (litre) 1 dmÂ³
      "L"
    | 
      ## (tonne) 10Â³ kg
      "t"
    | 
      ## (hectare) 1 hmÂ²
      "ha"
    | 
      ## (Ã¥ngstrÃ¶m) 10â»Â¹â° m
      "Ã"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimetre) 
      "cm"
    | 
      ## (decibel) see remarks, below
      "dB"
    | 
      ## (kilobit) 10Â³ or 1000 bits
      "kbit"
    | 
      ## (kibibit) 2Â¹â° or 1024 bits
      "Kibit"
    | 
      ## (kilobyte) 10Â³ or 1000 bytes
      "kB"
    | 
      ## (kibibyte) 2Â¹â° or 1024 bytes
      "KiB"
    | 
      ## (megabyte) 10â¶ or 1â¯000â¯000 bytes
      "MB"
    | 
      ## (mebibyte) 2Â²â° or 1â¯048â¯576 bytes
      "MiB"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.measurement.attribute.unitRef =
  [
    a:documentation [
      "points to a unique identifier stored in the "
      ns1:code [ "@xml:id" ]
      " of a "
      ns1:code [ "<unitDef>" ]
      " element that defines a unit of measure."
    ]
  ]
  attribute unitRef {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.measurement.attribute.quantity =
  
  ## (quantity) specifies the number of the specified units that comprise the measurement
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.measurement.attribute.commodity =
  
  ## (commodity) indicates the substance that is being measured
  attribute commodity {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
sch:pattern [
  id = "myTEI-att.measurement-att-measurement-unitRef-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@unitRef]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@unit"
      role = "info"
      "The @unit attribute may be unnecessary when @unitRef is present."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.naming.attributes =
  tei_att.canonical.attributes,
  tei_att.naming.attribute.role,
  tei_att.naming.attribute.nymRef
tei_att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.notated.attributes = tei_att.notated.attribute.notation
tei_att.notated.attribute.notation =
  
  ## names the notation used for the content of the element.
  attribute notation {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.placement.attributes = tei_att.placement.attribute.place
tei_att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] top; 2] bottom; 3] margin; 4] opposite; 5] overleaf; 6] above; 7] right; 8] below; 9] left; 10] end; 11] inline; 12] inspace
  attribute place {
    list {
      (
       ## at the top of the page
       "top"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## to the right, e.g. to the right of a vertical line of text, or to the right of a figure
         "right"
       | 
         ## below the line
         "below"
       | 
         ## to the left, e.g. to the left of a vertical line of text, or to the left of a figure
         "left"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
tei_att.typed.attributes =
  tei_att.typed.attribute.type, tei_att.typed.attribute.subtype
tei_att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.typed.attribute.subtype =
  
  ## (subtype) provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
sch:pattern [
  id = "myTEI-att.typed-subtypeTyped-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.pointing.attributes =
  tei_att.pointing.attribute.targetLang,
  tei_att.pointing.attribute.target,
  tei_att.pointing.attribute.evaluate
tei_att.pointing.attribute.targetLang =
  [
    a:documentation [
      "specifies the language of the content to be found at the destination referenced by "
      ns1:code [ "@target" ]
      ", using a language tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id = "myTEI-att.pointing-targetLang-targetLang-constraint-rule-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.pointing.attribute.evaluate =
  
  ## (evaluate) specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
tei_att.pointing.group.attributes =
  tei_att.pointing.attributes,
  tei_att.typed.attributes,
  tei_att.pointing.group.attribute.domains,
  tei_att.pointing.group.attribute.targFunc
tei_att.pointing.group.attribute.domains =
  
  ## optionally specifies the identifiers of the elements within which all elements indicated by the contents of this element lie.
  attribute domains {
    list {
      xsd:anyURI { pattern = "\S+" },
      xsd:anyURI { pattern = "\S+" },
      xsd:anyURI { pattern = "\S+" }*
    }
  }?
tei_att.pointing.group.attribute.targFunc =
  [
    a:documentation [
      "(target function) describes the function of each of the values of the "
      ns1:code [ "@target" ]
      " attribute of the enclosed "
      ns1:code [ "<link>" ]
      ", "
      ns1:code [ "<join>" ]
      ", or "
      ns1:code [ "<alt>" ]
      " tags."
    ]
  ]
  attribute targFunc {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" },
      xsd:token { pattern = "[^\p{C}\p{Z}]+" },
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }*
    }
  }?
tei_att.segLike.attributes =
  tei_att.metrical.attributes,
  tei_att.datcat.attributes,
  tei_att.fragmentable.attributes,
  tei_att.segLike.attribute.function
tei_att.segLike.attribute.function =
  
  ## (function) characterizes the function of the segment.
  attribute function {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.sortable.attributes = tei_att.sortable.attribute.sortKey
tei_att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.edition.attributes =
  tei_att.edition.attribute.ed, tei_att.edition.attribute.edRef
tei_att.edition.attribute.ed =
  
  ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute ed {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.spanning.attributes = tei_att.spanning.attribute.spanTo
tei_att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element bearing this attribute.
  attribute spanTo {
    xsd:anyURI { pattern = "\S+" }
  }?
sch:pattern [
  id =
    "myTEI-att.spanning-spanTo-spanTo-points-to-following-constraint-rule-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "         "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "         "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.styleDef.attributes =
  tei_att.styleDef.attribute.scheme,
  tei_att.styleDef.attribute.schemeVersion
tei_att.styleDef.attribute.scheme =
  
  ## identifies the language used to describe the rendition.
  attribute scheme {
    
    ## Cascading Stylesheet Language
    "css"
    | 
      ## Extensible Stylesheet Language Formatting Objects
      "xslfo"
    | 
      ## Informal free text description
      "free"
    | 
      ## A user-defined rendition description language
      "other"
  }?
tei_att.styleDef.attribute.schemeVersion =
  [
    a:documentation [
      "supplies a version number for the style language provided in "
      ns1:code [ "@scheme" ]
      "."
    ]
  ]
  attribute schemeVersion {
    xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
  }?
sch:pattern [
  id =
    "myTEI-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint-rule-9"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.timed.attributes =
  tei_att.timed.attribute.start, tei_att.timed.attribute.end
tei_att.timed.attribute.start =
  
  ## indicates the location within a temporal alignment at which this element begins.
  attribute start {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.timed.attribute.end =
  
  ## indicates the location within a temporal alignment at which this element ends.
  attribute end {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.transcriptional.attributes =
  tei_att.editLike.attributes,
  tei_att.written.attributes,
  tei_att.transcriptional.attribute.status,
  tei_att.transcriptional.attribute.cause,
  tei_att.transcriptional.attribute.seq
tei_att.transcriptional.attribute.status =
  
  ## indicates the effect of the intervention, for example in the case of a deletion, strikeouts which include too much or too little text, or in the case of an addition, an insertion which duplicates some of the text already present.
  ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ]
  attribute status {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.transcriptional.attribute.cause =
  
  ## documents the presumed cause for the intervention.
  attribute cause {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.
  attribute seq { xsd:nonNegativeInteger }?
tei_att.citing.attributes =
  tei_att.citing.attribute.unit,
  tei_att.citing.attribute.from,
  tei_att.citing.attribute.to
tei_att.citing.attribute.unit =
  
  ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume, entry.
  ## Suggested values include: 1] volume (volume); 2] issue; 3] page (page); 4] line; 5] chapter (chapter); 6] part; 7] column; 8] entry
  attribute unit {
    
    ## (volume) the element contains a volume number.
    "volume"
    | 
      ## the element contains an issue number, or volume and issue numbers.
      "issue"
    | 
      ## (page) the element contains a page number or page range.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## (chapter) the element contains a chapter indication (number and/or title)
      "chapter"
    | 
      ## the element identifies a part of a book or collection.
      "part"
    | 
      ## the element identifies a column.
      "column"
    | 
      ## the element identifies an entry number or label in a list of entries.
      "entry"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.citing.attribute.from =
  [
    a:documentation [
      "specifies the starting point of the range of units indicated by the "
      ns1:code [ "@unit" ]
      " attribute."
    ]
  ]
  attribute from {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.citing.attribute.to =
  [
    a:documentation [
      "specifies the end-point of the range of units indicated by the "
      ns1:code [ "@unit" ]
      " attribute."
    ]
  ]
  attribute to {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_model.nameLike.agent = tei_name
tei_model.nameLike.agent_alternation = tei_name
tei_model.nameLike.agent_sequence = tei_name
tei_model.nameLike.agent_sequenceOptional = tei_name?
tei_model.nameLike.agent_sequenceOptionalRepeatable = tei_name*
tei_model.nameLike.agent_sequenceRepeatable = tei_name+
tei_model.segLike =
  tei_s | tei_cl | tei_phr | tei_w | tei_m | tei_c | tei_pc | tei_seg
tei_model.segLike_alternation =
  tei_s | tei_cl | tei_phr | tei_w | tei_m | tei_c | tei_pc | tei_seg
tei_model.segLike_sequence =
  tei_s, tei_cl, tei_phr, tei_w, tei_m, tei_c, tei_pc, tei_seg
tei_model.segLike_sequenceOptional =
  tei_s?, tei_cl?, tei_phr?, tei_w?, tei_m?, tei_c?, tei_pc?, tei_seg?
tei_model.segLike_sequenceOptionalRepeatable =
  tei_s*, tei_cl*, tei_phr*, tei_w*, tei_m*, tei_c*, tei_pc*, tei_seg*
tei_model.segLike_sequenceRepeatable =
  tei_s+, tei_cl+, tei_phr+, tei_w+, tei_m+, tei_c+, tei_pc+, tei_seg+
tei_model.hiLike = tei_hi | tei_q
tei_model.hiLike_alternation = tei_hi | tei_q
tei_model.hiLike_sequence = tei_hi, tei_q
tei_model.hiLike_sequenceOptional = tei_hi?, tei_q?
tei_model.hiLike_sequenceOptionalRepeatable = tei_hi*, tei_q*
tei_model.hiLike_sequenceRepeatable = tei_hi+, tei_q+
tei_model.emphLike =
  tei_foreign
  | tei_emph
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
  | tei_code
  | tei_ident
tei_model.emphLike_alternation =
  tei_foreign
  | tei_emph
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
  | tei_code
  | tei_ident
tei_model.emphLike_sequence =
  tei_foreign,
  tei_emph,
  tei_distinct,
  tei_mentioned,
  tei_soCalled,
  tei_gloss,
  tei_term,
  tei_title,
  tei_code,
  tei_ident
tei_model.emphLike_sequenceOptional =
  tei_foreign?,
  tei_emph?,
  tei_distinct?,
  tei_mentioned?,
  tei_soCalled?,
  tei_gloss?,
  tei_term?,
  tei_title?,
  tei_code?,
  tei_ident?
tei_model.emphLike_sequenceOptionalRepeatable =
  tei_foreign*,
  tei_emph*,
  tei_distinct*,
  tei_mentioned*,
  tei_soCalled*,
  tei_gloss*,
  tei_term*,
  tei_title*,
  tei_code*,
  tei_ident*
tei_model.emphLike_sequenceRepeatable =
  tei_foreign+,
  tei_emph+,
  tei_distinct+,
  tei_mentioned+,
  tei_soCalled+,
  tei_gloss+,
  tei_term+,
  tei_title+,
  tei_code+,
  tei_ident+
tei_model.highlighted = tei_model.hiLike | tei_model.emphLike
tei_model.highlighted_alternation =
  tei_model.hiLike_alternation | tei_model.emphLike_alternation
tei_model.highlighted_sequence =
  tei_model.hiLike_sequence, tei_model.emphLike_sequence
tei_model.highlighted_sequenceOptional =
  tei_model.hiLike_sequenceOptional?,
  tei_model.emphLike_sequenceOptional?
tei_model.highlighted_sequenceOptionalRepeatable =
  tei_model.hiLike_sequenceOptionalRepeatable*,
  tei_model.emphLike_sequenceOptionalRepeatable*
tei_model.highlighted_sequenceRepeatable =
  tei_model.hiLike_sequenceRepeatable+,
  tei_model.emphLike_sequenceRepeatable+
tei_model.dateLike = tei_date | tei_time
tei_model.dateLike_alternation = tei_date | tei_time
tei_model.dateLike_sequence = tei_date, tei_time
tei_model.dateLike_sequenceOptional = tei_date?, tei_time?
tei_model.dateLike_sequenceOptionalRepeatable = tei_date*, tei_time*
tei_model.dateLike_sequenceRepeatable = tei_date+, tei_time+
tei_model.measureLike =
  tei_num | tei_measure | tei_measureGrp | tei_unit
tei_model.measureLike_alternation =
  tei_num | tei_measure | tei_measureGrp | tei_unit
tei_model.measureLike_sequence =
  tei_num, tei_measure, tei_measureGrp, tei_unit
tei_model.measureLike_sequenceOptional =
  tei_num?, tei_measure?, tei_measureGrp?, tei_unit?
tei_model.measureLike_sequenceOptionalRepeatable =
  tei_num*, tei_measure*, tei_measureGrp*, tei_unit*
tei_model.measureLike_sequenceRepeatable =
  tei_num+, tei_measure+, tei_measureGrp+, tei_unit+
tei_model.egLike = tei_eg | tei_egXML
tei_model.egLike_alternation = tei_eg | tei_egXML
tei_model.egLike_sequence = tei_eg, tei_egXML
tei_model.egLike_sequenceOptional = tei_eg?, tei_egXML?
tei_model.egLike_sequenceOptionalRepeatable = tei_eg*, tei_egXML*
tei_model.egLike_sequenceRepeatable = tei_eg+, tei_egXML+
tei_model.graphicLike =
  tei_media | tei_graphic | tei_binaryObject | tei_formula
tei_model.graphicLike_alternation =
  tei_media | tei_graphic | tei_binaryObject | tei_formula
tei_model.graphicLike_sequence =
  tei_media, tei_graphic, tei_binaryObject, tei_formula
tei_model.graphicLike_sequenceOptional =
  tei_media?, tei_graphic?, tei_binaryObject?, tei_formula?
tei_model.graphicLike_sequenceOptionalRepeatable =
  tei_media*, tei_graphic*, tei_binaryObject*, tei_formula*
tei_model.graphicLike_sequenceRepeatable =
  tei_media+, tei_graphic+, tei_binaryObject+, tei_formula+
tei_model.offsetLike = notAllowed
tei_model.offsetLike_alternation = notAllowed
tei_model.offsetLike_sequence = empty
tei_model.offsetLike_sequenceOptional = empty
tei_model.offsetLike_sequenceOptionalRepeatable = empty
tei_model.offsetLike_sequenceRepeatable = notAllowed
tei_model.pPart.msdesc = notAllowed
tei_model.pPart.msdesc_alternation = notAllowed
tei_model.pPart.msdesc_sequence = empty
tei_model.pPart.msdesc_sequenceOptional = empty
tei_model.pPart.msdesc_sequenceOptionalRepeatable = empty
tei_model.pPart.msdesc_sequenceRepeatable = notAllowed
tei_model.pPart.editorial =
  tei_choice | tei_abbr | tei_expan | tei_ex | tei_am | tei_subst
tei_model.pPart.editorial_alternation =
  tei_choice | tei_abbr | tei_expan | tei_ex | tei_am | tei_subst
tei_model.pPart.editorial_sequence =
  tei_choice, tei_abbr, tei_expan, tei_ex, tei_am, tei_subst
tei_model.pPart.editorial_sequenceOptional =
  tei_choice?, tei_abbr?, tei_expan?, tei_ex?, tei_am?, tei_subst?
tei_model.pPart.editorial_sequenceOptionalRepeatable =
  tei_choice*, tei_abbr*, tei_expan*, tei_ex*, tei_am*, tei_subst*
tei_model.pPart.editorial_sequenceRepeatable =
  tei_choice+, tei_abbr+, tei_expan+, tei_ex+, tei_am+, tei_subst+
tei_model.pPart.transcriptional =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_damage
  | tei_handShift
  | tei_restore
  | tei_supplied
  | tei_surplus
  | tei_secl
  | tei_mod
  | tei_redo
  | tei_retrace
  | tei_undo
tei_model.pPart.transcriptional_alternation =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_damage
  | tei_handShift
  | tei_restore
  | tei_supplied
  | tei_surplus
  | tei_secl
  | tei_mod
  | tei_redo
  | tei_retrace
  | tei_undo
tei_model.pPart.transcriptional_sequence =
  tei_sic,
  tei_corr,
  tei_reg,
  tei_orig,
  tei_add,
  tei_del,
  tei_unclear,
  tei_damage,
  tei_handShift,
  tei_restore,
  tei_supplied,
  tei_surplus,
  tei_secl,
  tei_mod,
  tei_redo,
  tei_retrace,
  tei_undo
tei_model.pPart.transcriptional_sequenceOptional =
  tei_sic?,
  tei_corr?,
  tei_reg?,
  tei_orig?,
  tei_add?,
  tei_del?,
  tei_unclear?,
  tei_damage?,
  tei_handShift?,
  tei_restore?,
  tei_supplied?,
  tei_surplus?,
  tei_secl?,
  tei_mod?,
  tei_redo?,
  tei_retrace?,
  tei_undo?
tei_model.pPart.transcriptional_sequenceOptionalRepeatable =
  tei_sic*,
  tei_corr*,
  tei_reg*,
  tei_orig*,
  tei_add*,
  tei_del*,
  tei_unclear*,
  tei_damage*,
  tei_handShift*,
  tei_restore*,
  tei_supplied*,
  tei_surplus*,
  tei_secl*,
  tei_mod*,
  tei_redo*,
  tei_retrace*,
  tei_undo*
tei_model.pPart.transcriptional_sequenceRepeatable =
  tei_sic+,
  tei_corr+,
  tei_reg+,
  tei_orig+,
  tei_add+,
  tei_del+,
  tei_unclear+,
  tei_damage+,
  tei_handShift+,
  tei_restore+,
  tei_supplied+,
  tei_surplus+,
  tei_secl+,
  tei_mod+,
  tei_redo+,
  tei_retrace+,
  tei_undo+
tei_model.pPart.edit =
  tei_model.pPart.editorial | tei_model.pPart.transcriptional
tei_model.pPart.edit_alternation =
  tei_model.pPart.editorial_alternation
  | tei_model.pPart.transcriptional_alternation
tei_model.pPart.edit_sequence =
  tei_model.pPart.editorial_sequence,
  tei_model.pPart.transcriptional_sequence
tei_model.pPart.edit_sequenceOptional =
  tei_model.pPart.editorial_sequenceOptional?,
  tei_model.pPart.transcriptional_sequenceOptional?
tei_model.pPart.edit_sequenceOptionalRepeatable =
  tei_model.pPart.editorial_sequenceOptionalRepeatable*,
  tei_model.pPart.transcriptional_sequenceOptionalRepeatable*
tei_model.pPart.edit_sequenceRepeatable =
  tei_model.pPart.editorial_sequenceRepeatable+,
  tei_model.pPart.transcriptional_sequenceRepeatable+
tei_model.linePart =
  tei_model.hiLike
  | tei_choice
  | tei_add
  | tei_del
  | tei_unclear
  | tei_w
  | tei_c
  | tei_pc
  | tei_seg
  | tei_zone
  | tei_path
  | tei_damage
  | tei_handShift
  | tei_restore
  | tei_line
  | tei_mod
  | tei_redo
  | tei_retrace
  | tei_undo
tei_model.ptrLike = tei_ptr | tei_ref | tei_listRef
tei_model.ptrLike_alternation = tei_ptr | tei_ref | tei_listRef
tei_model.ptrLike_sequence = tei_ptr, tei_ref, tei_listRef
tei_model.ptrLike_sequenceOptional = tei_ptr?, tei_ref?, tei_listRef?
tei_model.ptrLike_sequenceOptionalRepeatable =
  tei_ptr*, tei_ref*, tei_listRef*
tei_model.ptrLike_sequenceRepeatable = tei_ptr+, tei_ref+, tei_listRef+
tei_model.lPart = tei_caesura | tei_rhyme
tei_model.lPart_alternation = tei_caesura | tei_rhyme
tei_model.lPart_sequence = tei_caesura, tei_rhyme
tei_model.lPart_sequenceOptional = tei_caesura?, tei_rhyme?
tei_model.lPart_sequenceOptionalRepeatable = tei_caesura*, tei_rhyme*
tei_model.lPart_sequenceRepeatable = tei_caesura+, tei_rhyme+
tei_model.global.meta =
  tei_index
  | tei_span
  | tei_spanGrp
  | tei_interp
  | tei_interpGrp
  | tei_fs
  | tei_fLib
  | tei_fvLib
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
  | tei_substJoin
  | tei_listTranspose
tei_model.global.meta_alternation =
  tei_index
  | tei_span
  | tei_spanGrp
  | tei_interp
  | tei_interpGrp
  | tei_fs
  | tei_fLib
  | tei_fvLib
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
  | tei_substJoin
  | tei_listTranspose
tei_model.global.meta_sequence =
  tei_index,
  tei_span,
  tei_spanGrp,
  tei_interp,
  tei_interpGrp,
  tei_fs,
  tei_fLib,
  tei_fvLib,
  tei_link,
  tei_linkGrp,
  tei_timeline,
  tei_join,
  tei_joinGrp,
  tei_alt,
  tei_altGrp,
  tei_substJoin,
  tei_listTranspose
tei_model.global.meta_sequenceOptional =
  tei_index?,
  tei_span?,
  tei_spanGrp?,
  tei_interp?,
  tei_interpGrp?,
  tei_fs?,
  tei_fLib?,
  tei_fvLib?,
  tei_link?,
  tei_linkGrp?,
  tei_timeline?,
  tei_join?,
  tei_joinGrp?,
  tei_alt?,
  tei_altGrp?,
  tei_substJoin?,
  tei_listTranspose?
tei_model.global.meta_sequenceOptionalRepeatable =
  tei_index*,
  tei_span*,
  tei_spanGrp*,
  tei_interp*,
  tei_interpGrp*,
  tei_fs*,
  tei_fLib*,
  tei_fvLib*,
  tei_link*,
  tei_linkGrp*,
  tei_timeline*,
  tei_join*,
  tei_joinGrp*,
  tei_alt*,
  tei_altGrp*,
  tei_substJoin*,
  tei_listTranspose*
tei_model.global.meta_sequenceRepeatable =
  tei_index+,
  tei_span+,
  tei_spanGrp+,
  tei_interp+,
  tei_interpGrp+,
  tei_fs+,
  tei_fLib+,
  tei_fvLib+,
  tei_link+,
  tei_linkGrp+,
  tei_timeline+,
  tei_join+,
  tei_joinGrp+,
  tei_alt+,
  tei_altGrp+,
  tei_substJoin+,
  tei_listTranspose+
tei_model.milestoneLike =
  tei_milestone
  | tei_gb
  | tei_pb
  | tei_lb
  | tei_cb
  | tei_anchor
  | tei_fw
tei_model.milestoneLike_alternation =
  tei_milestone
  | tei_gb
  | tei_pb
  | tei_lb
  | tei_cb
  | tei_anchor
  | tei_fw
tei_model.milestoneLike_sequence =
  tei_milestone, tei_gb, tei_pb, tei_lb, tei_cb, tei_anchor, tei_fw
tei_model.milestoneLike_sequenceOptional =
  tei_milestone?,
  tei_gb?,
  tei_pb?,
  tei_lb?,
  tei_cb?,
  tei_anchor?,
  tei_fw?
tei_model.milestoneLike_sequenceOptionalRepeatable =
  tei_milestone*,
  tei_gb*,
  tei_pb*,
  tei_lb*,
  tei_cb*,
  tei_anchor*,
  tei_fw*
tei_model.milestoneLike_sequenceRepeatable =
  tei_milestone+,
  tei_gb+,
  tei_pb+,
  tei_lb+,
  tei_cb+,
  tei_anchor+,
  tei_fw+
tei_model.gLike = tei_g
tei_model.oddDecl =
  tei_moduleSpec
  | tei_specGrp
  | tei_specGrpRef
  | tei_elementSpec
  | tei_classSpec
  | tei_dataSpec
  | tei_macroSpec
  | tei_outputRendition
  | tei_constraintSpec
tei_model.oddDecl_alternation =
  tei_moduleSpec
  | tei_specGrp
  | tei_specGrpRef
  | tei_elementSpec
  | tei_classSpec
  | tei_dataSpec
  | tei_macroSpec
  | tei_outputRendition
  | tei_constraintSpec
tei_model.oddDecl_sequence =
  tei_moduleSpec,
  tei_specGrp,
  tei_specGrpRef,
  tei_elementSpec,
  tei_classSpec,
  tei_dataSpec,
  tei_macroSpec,
  tei_outputRendition,
  tei_constraintSpec
tei_model.oddDecl_sequenceOptional =
  tei_moduleSpec?,
  tei_specGrp?,
  tei_specGrpRef?,
  tei_elementSpec?,
  tei_classSpec?,
  tei_dataSpec?,
  tei_macroSpec?,
  tei_outputRendition?,
  tei_constraintSpec?
tei_model.oddDecl_sequenceOptionalRepeatable =
  tei_moduleSpec*,
  tei_specGrp*,
  tei_specGrpRef*,
  tei_elementSpec*,
  tei_classSpec*,
  tei_dataSpec*,
  tei_macroSpec*,
  tei_outputRendition*,
  tei_constraintSpec*
tei_model.oddDecl_sequenceRepeatable =
  tei_moduleSpec+,
  tei_specGrp+,
  tei_specGrpRef+,
  tei_elementSpec+,
  tei_classSpec+,
  tei_dataSpec+,
  tei_macroSpec+,
  tei_outputRendition+,
  tei_constraintSpec+
tei_model.oddRef =
  tei_classRef
  | tei_elementRef
  | tei_macroRef
  | tei_moduleRef
  | tei_dataRef
tei_model.phrase.xml = tei_att | tei_gi | tei_tag | tei_val
tei_model.phrase.xml_alternation = tei_att | tei_gi | tei_tag | tei_val
tei_model.phrase.xml_sequence = tei_att, tei_gi, tei_tag, tei_val
tei_model.phrase.xml_sequenceOptional =
  tei_att?, tei_gi?, tei_tag?, tei_val?
tei_model.phrase.xml_sequenceOptionalRepeatable =
  tei_att*, tei_gi*, tei_tag*, tei_val*
tei_model.phrase.xml_sequenceRepeatable =
  tei_att+, tei_gi+, tei_tag+, tei_val+
tei_model.specDescLike = tei_specList | tei_specDesc
tei_model.specDescLike_alternation = tei_specList | tei_specDesc
tei_model.specDescLike_sequence = tei_specList, tei_specDesc
tei_model.specDescLike_sequenceOptional = tei_specList?, tei_specDesc?
tei_model.specDescLike_sequenceOptionalRepeatable =
  tei_specList*, tei_specDesc*
tei_model.specDescLike_sequenceRepeatable = tei_specList+, tei_specDesc+
tei_model.biblLike =
  tei_bibl | tei_biblStruct | tei_listBibl | tei_biblFull
tei_model.biblLike_alternation =
  tei_bibl | tei_biblStruct | tei_listBibl | tei_biblFull
tei_model.biblLike_sequence =
  tei_bibl, tei_biblStruct, tei_listBibl, tei_biblFull
tei_model.biblLike_sequenceOptional =
  tei_bibl?, tei_biblStruct?, tei_listBibl?, tei_biblFull?
tei_model.biblLike_sequenceOptionalRepeatable =
  tei_bibl*, tei_biblStruct*, tei_listBibl*, tei_biblFull*
tei_model.biblLike_sequenceRepeatable =
  tei_bibl+, tei_biblStruct+, tei_listBibl+, tei_biblFull+
tei_model.headLike = tei_head
tei_model.headLike_alternation = tei_head
tei_model.headLike_sequence = tei_head
tei_model.headLike_sequenceOptional = tei_head?
tei_model.headLike_sequenceOptionalRepeatable = tei_head*
tei_model.headLike_sequenceRepeatable = tei_head+
tei_model.labelLike = tei_desc | tei_label
tei_model.labelLike_alternation = tei_desc | tei_label
tei_model.labelLike_sequence = tei_desc, tei_label
tei_model.labelLike_sequenceOptional = tei_desc?, tei_label?
tei_model.labelLike_sequenceOptionalRepeatable = tei_desc*, tei_label*
tei_model.labelLike_sequenceRepeatable = tei_desc+, tei_label+
tei_model.listLike = tei_list | tei_table | tei_listApp | tei_listWit
tei_model.listLike_alternation =
  tei_list | tei_table | tei_listApp | tei_listWit
tei_model.listLike_sequence =
  tei_list, tei_table, tei_listApp, tei_listWit
tei_model.listLike_sequenceOptional =
  tei_list?, tei_table?, tei_listApp?, tei_listWit?
tei_model.listLike_sequenceOptionalRepeatable =
  tei_list*, tei_table*, tei_listApp*, tei_listWit*
tei_model.listLike_sequenceRepeatable =
  tei_list+, tei_table+, tei_listApp+, tei_listWit+
tei_model.noteLike = tei_note | tei_noteGrp
tei_model.noteLike_alternation = tei_note | tei_noteGrp
tei_model.noteLike_sequence = tei_note, tei_noteGrp
tei_model.noteLike_sequenceOptional = tei_note?, tei_noteGrp?
tei_model.noteLike_sequenceOptionalRepeatable = tei_note*, tei_noteGrp*
tei_model.noteLike_sequenceRepeatable = tei_note+, tei_noteGrp+
tei_model.lLike = tei_l
tei_model.lLike_alternation = tei_l
tei_model.lLike_sequence = tei_l
tei_model.lLike_sequenceOptional = tei_l?
tei_model.lLike_sequenceOptionalRepeatable = tei_l*
tei_model.lLike_sequenceRepeatable = tei_l+
tei_model.pLike = tei_p | tei_ab
tei_model.pLike_alternation = tei_p | tei_ab
tei_model.pLike_sequence = tei_p, tei_ab
tei_model.pLike_sequenceOptional = tei_p?, tei_ab?
tei_model.pLike_sequenceOptionalRepeatable = tei_p*, tei_ab*
tei_model.pLike_sequenceRepeatable = tei_p+, tei_ab+
tei_model.stageLike = tei_stage
tei_model.stageLike_alternation = tei_stage
tei_model.stageLike_sequence = tei_stage
tei_model.stageLike_sequenceOptional = tei_stage?
tei_model.stageLike_sequenceOptionalRepeatable = tei_stage*
tei_model.stageLike_sequenceRepeatable = tei_stage+
tei_model.featureVal.complex =
  tei_fs | tei_vColl | tei_vNot | tei_vMerge
tei_model.featureVal.single =
  tei_binary
  | tei_symbol
  | tei_numeric
  | tei_string
  | tei_vLabel
  | tei_default
  | tei_vAlt
tei_model.entryPart =
  tei_superEntry
  | tei_hom
  | tei_sense
  | tei_form
  | tei_orth
  | tei_pron
  | tei_hyph
  | tei_syll
  | tei_gramGrp
  | tei_pos
  | tei_subc
  | tei_colloc
  | tei_def
  | tei_etym
  | tei_usg
  | tei_lbl
  | tei_xr
  | tei_re
tei_model.entryPart.top =
  tei_model.biblLike
  | tei_cit
  | tei_entry
  | tei_dictScrap
  | tei_form
  | tei_gramGrp
  | tei_def
  | tei_etym
  | tei_usg
  | tei_lbl
  | tei_xr
  | tei_re
tei_model.global.edit =
  tei_gap
  | tei_ellipsis
  | tei_app
  | tei_witDetail
  | tei_addSpan
  | tei_damageSpan
  | tei_delSpan
  | tei_space
tei_model.global.edit_alternation =
  tei_gap
  | tei_ellipsis
  | tei_app
  | tei_witDetail
  | tei_addSpan
  | tei_damageSpan
  | tei_delSpan
  | tei_space
tei_model.global.edit_sequence =
  tei_gap,
  tei_ellipsis,
  tei_app,
  tei_witDetail,
  tei_addSpan,
  tei_damageSpan,
  tei_delSpan,
  tei_space
tei_model.global.edit_sequenceOptional =
  tei_gap?,
  tei_ellipsis?,
  tei_app?,
  tei_witDetail?,
  tei_addSpan?,
  tei_damageSpan?,
  tei_delSpan?,
  tei_space?
tei_model.global.edit_sequenceOptionalRepeatable =
  tei_gap*,
  tei_ellipsis*,
  tei_app*,
  tei_witDetail*,
  tei_addSpan*,
  tei_damageSpan*,
  tei_delSpan*,
  tei_space*
tei_model.global.edit_sequenceRepeatable =
  tei_gap+,
  tei_ellipsis+,
  tei_app+,
  tei_witDetail+,
  tei_addSpan+,
  tei_damageSpan+,
  tei_delSpan+,
  tei_space+
tei_model.divPart = tei_model.lLike | tei_model.pLike | tei_lg | tei_sp
tei_model.personLike = notAllowed
tei_model.placeNamePart = notAllowed
tei_model.placeNamePart_alternation = notAllowed
tei_model.placeNamePart_sequence = empty
tei_model.placeNamePart_sequenceOptional = empty
tei_model.placeNamePart_sequenceOptionalRepeatable = empty
tei_model.placeNamePart_sequenceRepeatable = notAllowed
tei_model.placeStateLike = tei_model.placeNamePart
tei_model.placeStateLike_alternation =
  tei_model.placeNamePart_alternation
tei_model.placeStateLike_sequence = tei_model.placeNamePart_sequence
tei_model.placeStateLike_sequenceOptional =
  tei_model.placeNamePart_sequenceOptional?
tei_model.placeStateLike_sequenceOptionalRepeatable =
  tei_model.placeNamePart_sequenceOptionalRepeatable*
tei_model.placeStateLike_sequenceRepeatable =
  tei_model.placeNamePart_sequenceRepeatable+
tei_model.publicationStmtPart.agency =
  tei_publisher | tei_distributor | tei_authority
tei_model.publicationStmtPart.detail =
  tei_model.ptrLike
  | tei_address
  | tei_date
  | tei_pubPlace
  | tei_idno
  | tei_availability
tei_model.availabilityPart = tei_licence
tei_model.certLike = notAllowed
tei_model.descLike = tei_desc
tei_model.identEquiv = tei_gloss | tei_equiv
tei_model.identSynonyms = tei_model.identEquiv | tei_altIdent
tei_model.quoteLike = tei_quote | tei_cit
tei_model.quoteLike_alternation = tei_quote | tei_cit
tei_model.quoteLike_sequence = tei_quote, tei_cit
tei_model.quoteLike_sequenceOptional = tei_quote?, tei_cit?
tei_model.quoteLike_sequenceOptionalRepeatable = tei_quote*, tei_cit*
tei_model.quoteLike_sequenceRepeatable = tei_quote+, tei_cit+
tei_model.attributable =
  tei_model.quoteLike | tei_said | tei_floatingText
tei_model.attributable_alternation =
  tei_model.quoteLike_alternation | tei_said | tei_floatingText
tei_model.attributable_sequence =
  tei_model.quoteLike_sequence, tei_said, tei_floatingText
tei_model.attributable_sequenceOptional =
  tei_model.quoteLike_sequenceOptional?, tei_said?, tei_floatingText?
tei_model.attributable_sequenceOptionalRepeatable =
  tei_model.quoteLike_sequenceOptionalRepeatable*,
  tei_said*,
  tei_floatingText*
tei_model.attributable_sequenceRepeatable =
  tei_model.quoteLike_sequenceRepeatable+, tei_said+, tei_floatingText+
tei_model.respLike =
  tei_author
  | tei_editor
  | tei_respStmt
  | tei_meeting
  | tei_sponsor
  | tei_funder
  | tei_principal
tei_model.divWrapper =
  tei_meeting
  | tei_byline
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_salute
  | tei_docAuthor
  | tei_docDate
tei_model.divTopPart = tei_model.headLike | tei_opener | tei_signed
tei_model.divTop = tei_model.divWrapper | tei_model.divTopPart
tei_model.frontPart.drama = notAllowed
tei_model.pLike.front =
  tei_head
  | tei_byline
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.divBottomPart =
  tei_trailer | tei_closer | tei_signed | tei_postscript
tei_model.divBottom = tei_model.divWrapper | tei_model.divBottomPart
tei_model.titlepagePart =
  tei_graphic
  | tei_binaryObject
  | tei_byline
  | tei_argument
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_imprimatur
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.choicePart =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_unclear
  | tei_abbr
  | tei_expan
  | tei_seg
  | tei_ex
  | tei_am
  | tei_supplied
tei_model.imprintPart =
  tei_publisher | tei_biblScope | tei_pubPlace | tei_distributor
tei_model.catDescPart = tei_textDesc
tei_model.settingPart = tei_locale | tei_activity
tei_model.addressLike = tei_email | tei_address
tei_model.addressLike_alternation = tei_email | tei_address
tei_model.addressLike_sequence = tei_email, tei_address
tei_model.addressLike_sequenceOptional = tei_email?, tei_address?
tei_model.addressLike_sequenceOptionalRepeatable =
  tei_email*, tei_address*
tei_model.addressLike_sequenceRepeatable = tei_email+, tei_address+
tei_model.nameLike =
  tei_model.nameLike.agent
  | tei_model.offsetLike
  | tei_model.placeStateLike
  | tei_rs
  | tei_idno
  | tei_lang
tei_model.nameLike_alternation =
  tei_model.nameLike.agent_alternation
  | tei_model.offsetLike_alternation
  | tei_model.placeStateLike_alternation
  | tei_rs
  | tei_idno
  | tei_lang
tei_model.nameLike_sequence =
  tei_model.nameLike.agent_sequence,
  tei_model.offsetLike_sequence,
  tei_model.placeStateLike_sequence,
  tei_rs,
  tei_idno,
  tei_lang
tei_model.nameLike_sequenceOptional =
  tei_model.nameLike.agent_sequenceOptional?,
  tei_model.offsetLike_sequenceOptional?,
  tei_model.placeStateLike_sequenceOptional?,
  tei_rs?,
  tei_idno?,
  tei_lang?
tei_model.nameLike_sequenceOptionalRepeatable =
  tei_model.nameLike.agent_sequenceOptionalRepeatable*,
  tei_model.offsetLike_sequenceOptionalRepeatable*,
  tei_model.placeStateLike_sequenceOptionalRepeatable*,
  tei_rs*,
  tei_idno*,
  tei_lang*
tei_model.nameLike_sequenceRepeatable =
  tei_model.nameLike.agent_sequenceRepeatable+,
  tei_model.offsetLike_sequenceRepeatable+,
  tei_model.placeStateLike_sequenceRepeatable+,
  tei_rs+,
  tei_idno+,
  tei_lang+
tei_model.global =
  tei_model.global.meta
  | tei_model.milestoneLike
  | tei_model.noteLike
  | tei_model.global.edit
  | tei_notatedMusic
  | tei_figure
  | tei_metamark
tei_model.featureVal =
  tei_model.featureVal.complex | tei_model.featureVal.single
tei_model.biblPart =
  tei_model.respLike
  | tei_model.imprintPart
  | tei_series
  | tei_citedRange
  | tei_bibl
  | tei_relatedItem
  | tei_textLang
  | tei_edition
  | tei_extent
  | tei_availability
tei_model.frontPart =
  tei_model.frontPart.drama
  | tei_listBibl
  | tei_divGen
  | tei_titlePage
  | tei_schemaSpec
tei_model.addrPart =
  tei_model.nameLike
  | tei_addrLine
  | tei_street
  | tei_postCode
  | tei_postBox
tei_model.pPart.data =
  tei_model.dateLike
  | tei_model.measureLike
  | tei_model.addressLike
  | tei_model.nameLike
tei_model.pPart.data_alternation =
  tei_model.dateLike_alternation
  | tei_model.measureLike_alternation
  | tei_model.addressLike_alternation
  | tei_model.nameLike_alternation
tei_model.pPart.data_sequence =
  tei_model.dateLike_sequence,
  tei_model.measureLike_sequence,
  tei_model.addressLike_sequence,
  tei_model.nameLike_sequence
tei_model.pPart.data_sequenceOptional =
  tei_model.dateLike_sequenceOptional?,
  tei_model.measureLike_sequenceOptional?,
  tei_model.addressLike_sequenceOptional?,
  tei_model.nameLike_sequenceOptional?
tei_model.pPart.data_sequenceOptionalRepeatable =
  tei_model.dateLike_sequenceOptionalRepeatable*,
  tei_model.measureLike_sequenceOptionalRepeatable*,
  tei_model.addressLike_sequenceOptionalRepeatable*,
  tei_model.nameLike_sequenceOptionalRepeatable*
tei_model.pPart.data_sequenceRepeatable =
  tei_model.dateLike_sequenceRepeatable+,
  tei_model.measureLike_sequenceRepeatable+,
  tei_model.addressLike_sequenceRepeatable+,
  tei_model.nameLike_sequenceRepeatable+
tei_model.inter =
  tei_model.egLike
  | tei_model.oddDecl
  | tei_model.biblLike
  | tei_model.labelLike
  | tei_model.listLike
  | tei_model.stageLike
  | tei_model.attributable
tei_model.common =
  tei_model.divPart | tei_model.inter | tei_q | tei_model.entryLike
tei_model.phrase =
  tei_model.segLike
  | tei_model.highlighted
  | tei_model.graphicLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.edit
  | tei_model.ptrLike
  | tei_model.lPart
  | tei_model.phrase.xml
  | tei_model.specDescLike
  | tei_model.pPart.data
  | tei_ruby
  | tei_model.ptrLike.form
tei_model.paraPart =
  tei_model.gLike
  | tei_model.lLike
  | tei_model.global
  | tei_model.inter
  | tei_model.phrase
  | tei_lg
tei_model.limitedPhrase =
  tei_model.hiLike
  | tei_model.emphLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.editorial
  | tei_model.ptrLike
  | tei_model.phrase.xml
  | tei_model.pPart.data
tei_model.divLike = tei_div
tei_model.divGenLike = tei_divGen
tei_model.div1Like = tei_div1
tei_model.div2Like = tei_div2
tei_model.div3Like = tei_div3
tei_model.div4Like = tei_div4
tei_model.div5Like = tei_div5
tei_model.div6Like = tei_div6
tei_model.div7Like = tei_div7
tei_model.annotationLike = tei_note | tei_annotation
tei_model.annotationPart.body = tei_ptr | tei_ref | tei_note
tei_model.applicationLike = tei_application
tei_model.teiHeaderPart =
  tei_encodingDesc | tei_profileDesc | tei_xenoData
tei_model.sourceDescPart = notAllowed
tei_model.encodingDescPart =
  tei_schemaRef
  | tei_projectDesc
  | tei_samplingDecl
  | tei_editorialDecl
  | tei_tagsDecl
  | tei_styleDefDecl
  | tei_refsDecl
  | tei_listPrefixDef
  | tei_classDecl
  | tei_geoDecl
  | tei_unitDecl
  | tei_appInfo
  | tei_fsdDecl
  | tei_charDecl
  | tei_schemaSpec
  | tei_variantEncoding
  | tei_metDecl
tei_model.editorialDeclPart =
  tei_correction
  | tei_normalization
  | tei_quotation
  | tei_hyphenation
  | tei_segmentation
  | tei_stdVals
  | tei_interpretation
  | tei_punctuation
tei_model.profileDescPart =
  tei_abstract
  | tei_creation
  | tei_langUsage
  | tei_textClass
  | tei_calendarDesc
  | tei_correspDesc
  | tei_textDesc
  | tei_particDesc
  | tei_settingDesc
  | tei_handNotes
  | tei_listTranspose
tei_model.standOffPart =
  tei_model.global.meta
  | tei_model.biblLike
  | tei_model.listLike
  | tei_model.annotationLike
  | tei_listChange
  | tei_model.entryLike
  | tei_seg
  | tei_listAnnotation
  | tei_zone
tei_att.formula.attributes = tei_att.formula.attribute.formula
tei_att.formula.attribute.formula =
  [
    a:documentation [
      "A "
      ns1:code [ "@formula" ]
      " is provided to describe a mathematical calculation such as a conversion between measurement systems."
    ]
  ]
  attribute formula { text }?
tei_att.locatable.attributes = tei_att.locatable.attribute.where
tei_att.locatable.attribute.where =
  [
    a:documentation [
      "indicates one or more locations by pointing to a "
      ns1:code [ "<place>" ]
      " element or other canonical description."
    ]
  ]
  attribute where {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_model.correspActionPart =
  tei_model.dateLike
  | tei_model.addressLike
  | tei_model.nameLike
  | tei_note
  | tei_noteGrp
tei_model.correspContextPart =
  tei_model.ptrLike | tei_model.pLike | tei_note | tei_noteGrp
tei_model.correspDescPart =
  tei_note | tei_noteGrp | tei_correspAction | tei_correspContext
tei_att.partials.attributes = tei_att.partials.attribute.extent
tei_att.partials.attribute.extent =
  
  ## indicates whether the pronunciation or orthography applies to all or part of a word.
  ## Suggested values include: 1] full (full form); 2] pref (prefix); 3] suff (suffix); 4] inf (infix); 5] part (partial)
  attribute extent {
    
    ## (full form) 
    "full"
    | 
      ## (prefix) 
      "pref"
    | 
      ## (suffix) 
      "suff"
    | 
      ## (infix) 
      "inf"
    | 
      ## (partial) 
      "part"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_model.resource =
  tei_text | tei_fsdDecl | tei_standOff | tei_facsimile | tei_sourceDoc
tei_model.describedResource = tei_teiCorpus | tei_TEI
tei_att.personal.attributes =
  tei_att.naming.attributes,
  tei_att.personal.attribute.full,
  tei_att.personal.attribute.sort
tei_att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## (yes) the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
tei_att.personal.attribute.sort =
  
  ## (sort) specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
tei_model.placeLike = notAllowed
tei_att.calendarSystem.attributes =
  tei_att.calendarSystem.attribute.calendar
tei_att.calendarSystem.attribute.calendar =
  
  ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
  attribute calendar {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id = "myTEI-att.calendarSystem-calendar-calendar-constraint-rule-10"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "string-length( normalize-space(.) ) gt 0"
      " @calendar indicates one or more\x{a}" ~
      "              systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
      "              but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.milestoneUnit.attributes = tei_att.milestoneUnit.attribute.unit
tei_att.milestoneUnit.attribute.unit =
  
  ## provides a conventional name for the kind of section changing at this milestone.
  ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
  attribute unit {
    [
      a:documentation [
        "physical page breaks (synonymous with the "
        ns1:code [ "<pb>" ]
        " element)."
      ]
    ]
    "page"
    | 
      ## column breaks.
      "column"
    | [
        a:documentation [
          "line breaks (synonymous with the "
          ns1:code [ "<lb>" ]
          " element)."
        ]
      ]
      "line"
    | 
      ## any units termed book, liber, etc.
      "book"
    | 
      ## individual poems in a collection.
      "poem"
    | 
      ## cantos or other major sections of a poem.
      "canto"
    | 
      ## changes of speaker or narrator.
      "speaker"
    | 
      ## stanzas within a poem, book, or canto.
      "stanza"
    | 
      ## acts within a play.
      "act"
    | 
      ## scenes within a play or act.
      "scene"
    | 
      ## sections of any kind.
      "section"
    | 
      ## passages not present in the reference edition.
      "absent"
    | 
      ## passages present in the text, but not to be included as part of the reference.
      "unnumbered"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }
tei_p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    tei_macro.paraContent
    >> sch:pattern [
         id =
           "myTEI-p-abstractModel-structure-p-in-ab-or-p-constraint-report-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:ab or ancestor::tei:p) and not( ancestor::tei:floatingText |parent::tei:exemplum |parent::tei:item |parent::tei:note |parent::tei:q |parent::tei:quote |parent::tei:remarks |parent::tei:said |parent::tei:sp |parent::tei:stage |parent::tei:cell |parent::tei:figure )"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not occur inside other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-p-abstractModel-structure-p-in-l-or-lg-constraint-report-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not( ancestor::tei:floatingText |parent::tei:figure |parent::tei:note )"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab, unless p is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.fragmentable.attributes,
    tei_att.written.attributes,
    empty
  }
tei_foreign =
  
  ## (foreign) identifies a word or phrase as belonging to some language other than that of the surrounding text. [3.3.2.1. Foreign Words or Expressions]
  element foreign {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_emph =
  
  ## (emphasized) marks words or phrases which are stressed or emphasized for linguistic or rhetorical effect. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element emph {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element hi {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_distinct =
  
  ## identifies any word or phrase which is regarded as linguistically distinct, for example as archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage. [3.3.2.3. Other Linguistically Distinct Material]
  element distinct {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies the sublanguage or register to which the word or phrase is being assigned
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies how the phrase is distinct diachronically
    attribute time { xsd:string }?,
    
    ## specifies how the phrase is distinct diatopically
    attribute space { xsd:string }?,
    
    ## specifies how the phrase is distinct diastratically
    attribute social { xsd:string }?,
    empty
  }
tei_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. [3.3.3. Quotation]
  element said {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.ascribed.directed.attributes,
    
    ## may be used to indicate whether the quoted matter is regarded as having been vocalized or signed.
    attribute aloud {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    
    ## may be used to indicate whether the quoted matter is regarded as direct or indirect speech.
    [ a:defaultValue = "true" ]
    attribute direct {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
tei_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3. Quotation 4.3.1. Grouped Texts]
  element quote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_q =
  
  ## (quoted) contains material which is distinguished from the surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and passages that are mentioned but not used. [3.3.3. Quotation]
  element q {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.ascribed.directed.attributes,
    
    ## (type) may be used to indicate whether the offset passage is spoken or thought, or to characterize it more finely.
    ## Suggested values include: 1] spoken (spoken); 2] thought (thought); 3] written (written); 4] soCalled (so called); 5] foreign (foreign); 6] distinct (distinct); 7] term; 8] emph (emph); 9] mentioned (mentioned)
    attribute type {
      
      ## (spoken) representation of speech
      "spoken"
      | 
        ## (thought) representation of thought, e.g. internal monologue
        "thought"
      | 
        ## (written) quotation from a written source
        "written"
      | 
        ## (so called) authorial distance
        "soCalled"
      | 
        ## (foreign) foreign words
        "foreign"
      | 
        ## (distinct) linguistically distinct
        "distinct"
      | 
        ## technical term
        "term"
      | 
        ## (emph) rhetorically emphasized
        "emph"
      | 
        ## (mentioned) refering to itself, not its normal referent
        "mentioned"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3. Quotation 4.3.1. Grouped Texts 9.3.5.1. Examples]
  element cit {
    (tei_model.biblLike
     | tei_model.egLike
     | tei_model.entryPart
     | tei_model.global
     | tei_model.graphicLike
     | tei_model.ptrLike
     | tei_model.attributable
     | tei_pc
     | tei_q)+,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_mentioned =
  
  ## marks words or phrases mentioned, not used. [3.3.3. Quotation]
  element mentioned {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_soCalled =
  
  ## (so called) contains a word or phrase for which the author or narrator indicates a disclaiming of responsibility, for example by the use of scare quotes or italics. [3.3.3. Quotation]
  element soCalled {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_desc =
  
  ## (description) contains a short description of the purpose, function, or use of its parent element, or when the parent is a documentation element, describes or defines the object being documented.  [22.4.1. Description of Components]
  element desc {
    tei_macro.limitedContent
    >> sch:pattern [
         id =
           "myTEI-desc-deprecationInfo-only-in-deprecated-constraint-rule-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:desc[ @type eq 'deprecationInfo']"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "../@validUntil"
             "Information about a\x{a}" ~
             "        deprecation should only be present in a specification element\x{a}" ~
             "        that is being deprecated: that is, only an element that has a\x{a}" ~
             "        @validUntil attribute should have a child <desc\x{a}" ~
             '        type="deprecationInfo">.'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.translatable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] deprecationInfo (deprecation information)
    attribute type {
      
      ## (deprecation
      ##           information) This element describes why or how its parent element is being deprecated, typically including recommendations for alternate encoding.
      "deprecationInfo"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_gloss =
  
  ## (gloss) identifies a phrase or word used to provide a gloss or definition for some other word or phrase. [3.4.1. Terms and Glosses 22.4.1. Description of Components]
  element gloss {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.translatable.attributes,
    tei_att.typed.attributes,
    tei_att.pointing.attributes,
    tei_att.cReferencing.attributes,
    empty
  }
tei_term =
  
  ## (term) contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.4.1. Terms and Glosses]
  element term {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.canonical.attributes,
    tei_att.sortable.attributes,
    tei_att.cReferencing.attributes,
    empty
  }
tei_ruby =
  
  ## (ruby container) contains a passage of base text along with its associated ruby gloss(es). [3.4.2. Ruby Annotations]
  element ruby {
    (tei_rb, tei_rt+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_rb =
  
  ## (ruby base) contains the base text annotated by a ruby gloss. [3.4.2. Ruby Annotations]
  element rb {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_rt =
  
  ## (ruby text) contains a ruby text, an annotation closely associated with a passage of the main text. [3.4.2. Ruby Annotations]
  element rt {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.transcriptional.attributes,
    (
     ## supplies a pointer to the base being glossed by this ruby text.
     attribute target {
       xsd:anyURI { pattern = "\S+" }
     }?)
    >> sch:pattern [
         id = "myTEI-rt-target-rt-target-not-span-constraint-report-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rt/@target"
           "\x{a}" ~
           "               "
           sch:report [
             test = "../@from | ../@to"
             "When target= is\x{a}" ~
             "            present, neither from= nor to= should be."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    (
     ## points to the starting point of the span of text being glossed by this ruby text.
     attribute from {
       xsd:anyURI { pattern = "\S+" }
     }?)
    >> sch:pattern [
         id = "myTEI-rt-from-rt-from-constraint-assert-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rt/@from"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "../@to"
             "When from= is present, the to=\x{a}" ~
             "            attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    (
     ## points to the ending point of the span of text being glossed.
     attribute to {
       xsd:anyURI { pattern = "\S+" }
     }?)
    >> sch:pattern [
         id = "myTEI-rt-to-rt-to-constraint-assert-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rt/@to"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "../@from"
             "When to= is present, the from=\x{a}" ~
             "            attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_sic =
  
  ## (Latin for thus or so) contains text reproduced although apparently incorrect or inaccurate. [3.5.1. Apparent Errors]
  element sic {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text. [3.5.1. Apparent Errors]
  element corr {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_choice =
  
  ## (choice) groups a number of alternative encodings for the same point in a text. [3.5. Simple Editorial Changes]
  element choice {
    (tei_model.choicePart | tei_choice)+,
    tei_att.global.attributes,
    empty
  }
tei_reg =
  
  ## (regularization) contains a reading which has been regularized or normalized in some sense. [3.5.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element reg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized or corrected. [3.5.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element orig {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_gap =
  
  ## (gap) indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.5.3. Additions, Deletions, and Omissions]
  element gap {
    (tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attributes,
    tei_att.timed.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## (reason) gives the reason for omission
    ## Suggested values include: 1] cancelled (cancelled); 2] deleted (deleted); 3] editorial (editorial); 4] illegible (illegible); 5] inaudible (inaudible); 6] irrelevant (irrelevant); 7] sampling (sampling)
    attribute reason {
      list {
        (
         ## (cancelled) 
         "cancelled"
         | 
           ## (deleted) 
           "deleted"
         | 
           ## (editorial) for features omitted from transcription due to editorial policy
           "editorial"
         | 
           ## (illegible) 
           "illegible"
         | 
           ## (inaudible) 
           "inaudible"
         | 
           ## (irrelevant) 
           "irrelevant"
         | 
           ## (sampling) 
           "sampling"
         | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
      }
    }?,
    
    ## (agent) in the case of text omitted because of damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing (rubbing); 2] mildew (mildew); 3] smoke (smoke)
    attribute agent {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_ellipsis =
  
  ## (deliberately marked omission) indicates a purposeful marking in the source document signalling that content has been omitted, and may also supply or describe the omitted content. [3.5.3. Additions, Deletions, and Omissions]
  element ellipsis {
    (tei_metamark, tei_model.descLike?, tei_supplied?),
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    tei_att.timed.attributes,
    empty
  }
tei_add =
  
  ## (addition) contains letters, words, or phrases inserted in the source text by an author, scribe, or a previous annotator or corrector. [3.5.3. Additions, Deletions, and Omissions]
  element add {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.5.3. Additions, Deletions, and Omissions]
  element del {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_unclear =
  
  ## (unclear) contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1. Damage, Illegibility, and Supplied Text 3.5.3. Additions, Deletions, and Omissions]
  element unclear {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## indicates why the material is hard to transcribe.
    ## Suggested values include: 1] illegible (illegible); 2] inaudible (inaudible); 3] faded (faded); 4] background_noise (background noise); 5] eccentric_ductus (eccentric ductus)
    attribute reason {
      list {
        (
         ## (illegible) 
         "illegible"
         | 
           ## (inaudible) 
           "inaudible"
         | 
           ## (faded) 
           "faded"
         | 
           ## (background noise) 
           "background_noise"
         | 
           ## (eccentric ductus) indicates illegibility due to an unusual, awkward, or incompetent execution of a glyph or glyphs 
           "eccentric_ductus"
         | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
      }
    }?,
    
    ## Where the difficulty in transcription arises from damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.6.1. Referring Strings]
  element name {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-name-calendar-calendar-check-name-constraint-rule-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_rs =
  
  ## (referencing string) contains a general purpose name or referring string. [13.2.1. Personal Names 3.6.1. Referring Strings]
  element rs {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_email =
  
  ## (electronic mail address) contains an email address identifying a location to which email messages can be delivered. [3.6.2. Addresses]
  element email {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_address =
  
  ## (address) contains a postal address, for example of a publisher, an organization, or an individual. [3.6.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element address {
    (tei_model.global*, (tei_model.addrPart, tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_addrLine =
  
  ## (address line) contains one line of a postal address. [3.6.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element addrLine {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_street =
  
  ## contains a full street address including any name or number identifying a building as well as the name of the street or route on which it is located. [3.6.2. Addresses]
  element street {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_postCode =
  
  ## (postal code) contains a numerical or alphanumeric code used as part of a postal address to simplify sorting or delivery of mail. [3.6.2. Addresses]
  element postCode { text, tei_att.global.attributes, empty }
tei_postBox =
  
  ## (postal box or post office box) contains a number or other identifier for some postal delivery point other than a street address. [3.6.2. Addresses]
  element postBox { text, tei_att.global.attributes, empty }
tei_num =
  
  ## (number) contains a number, written in any form. [3.6.3. Numbers and
  ## Measures]
  element num {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.ranging.attributes,
    
    ## indicates the type of numeric value.
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## absolute number, e.g. 21, 21.5
      "cardinal"
      | 
        ## ordinal number, e.g. 21st
        "ordinal"
      | 
        ## fraction, e.g. one half or three-quarters
        "fraction"
      | 
        ## a percentage
        "percentage"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## supplies the value of the number in standard form.
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
tei_measure =
  
  ## (measure) contains a word or phrase referring to some quantity of an object or commodity, usually comprising a number, a unit, and a commodity name. [3.6.3. Numbers and
  ## Measures]
  element measure {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.measurement.attributes,
    tei_att.ranging.attributes,
    
    ## specifies the type of measurement in any convenient typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_measureGrp =
  
  ## (measure group) contains a group of dimensional specifications which relate to the same object, for example the height and width of a manuscript page. [10.3.4. Dimensions]
  element measureGrp {
    (text | tei_model.gLike | tei_model.measureLike)*,
    tei_att.global.attributes,
    tei_att.measurement.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_unit =
  
  ## contains a symbol, a word or a phrase referring to a unit of measurement in any kind of formal or informal system. [3.6.3. Numbers and
  ## Measures]
  element unit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.measurement.attributes,
    empty
  }
tei_date =
  
  ## (date) contains a date in any format. [3.6.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.12.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.4. Dates]
  element date {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    tei_att.calendarSystem.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_time =
  
  ## (time) contains a phrase defining a time of day in any format. [3.6.4. Dates and Times]
  element time {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.calendarSystem.attributes,
    tei_att.canonical.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_abbr =
  
  ## (abbreviation) contains an abbreviation of any sort. [3.6.5. Abbreviations and Their Expansions]
  element abbr {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## (type) allows the encoder to classify the abbreviation according to some convenient typology.
    ## Sample values include: 1] suspension (suspension); 2] contraction (contraction); 3] brevigraph; 4] superscription (superscription); 5] acronym (acronym); 6] title (title); 7] organization (organization); 8] geographic (geographic)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_expan =
  
  ## (expansion) contains the expansion of an abbreviation. [3.6.5. Abbreviations and Their Expansions]
  element expan {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_ptr =
  
  ## (pointer) defines a pointer to another location. [3.7. Simple Links and Cross-References 16.1. Links]
  element ptr {
    empty
    >> sch:pattern [
         id = "myTEI-ptr-ptrAtts-constraint-report-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.cReferencing.attributes,
    tei_att.declaring.attributes,
    tei_att.global.attributes,
    tei_att.internetMedia.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.7. Simple Links and Cross-References 16.1. Links]
  element ref {
    tei_macro.paraContent
    >> sch:pattern [
         id = "myTEI-ref-refAtts-constraint-report-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.cReferencing.attributes,
    tei_att.declaring.attributes,
    tei_att.global.attributes,
    tei_att.internetMedia.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_list =
  
  ## (list) contains any sequence of items organized as a list. [3.8. Lists]
  element list {
    ((tei_model.divTop | tei_model.global | tei_desc*)*,
     ((tei_item, tei_model.global*)+
      | (tei_headLabel?,
         tei_headItem?,
         (tei_label, tei_model.global*, tei_item, tei_model.global*)+)),
     (tei_model.divBottom, tei_model.global*)*)
    >> sch:pattern [
         id =
           "myTEI-list-gloss-list-must-have-labels-constraint-rule-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## (type) describes the nature of the items in the list.
    ## Suggested values include: 1] gloss (gloss); 2] index (index); 3] instructions (instructions); 4] litany (litany); 5] syllogism (syllogism)
    attribute type {
      [
        a:documentation [
          "(gloss) each list item glosses some term or concept, which is given by a "
          ns1:code [ "<label>" ]
          " element preceding the list item."
        ]
      ]
      "gloss"
      | 
        ## (index) each list item is an entry in an index such as the alphabetical topical index at the back of a print volume.
        "index"
      | 
        ## (instructions) each list item is a step in a sequence of instructions, as in a recipe.
        "instructions"
      | 
        ## (litany) each list item is one of a sequence of petitions, supplications or invocations, typically in a religious ritual.
        "litany"
      | 
        ## (syllogism) each list item is part of an argument consisting of two or more propositions and a final conclusion derived from them.
        "syllogism"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_item =
  
  ## (item) contains one component of a list. [3.8. Lists 2.6. The Revision Description]
  element item {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_label =
  
  ## (label) contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.8. Lists]
  element label {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    empty
  }
tei_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | tei_lg
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.lLike
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    empty
  }
tei_headLabel =
  
  ## (heading for list labels) contains the heading for the label or term column in a glossary list or similar structured list. [3.8. Lists]
  element headLabel {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_headItem =
  
  ## (heading for list items) contains the heading for the item or gloss column in a glossary list or similar structured list. [3.8. Lists]
  element headItem {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_note =
  
  ## (note) contains a note or annotation. [3.9.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.12.2.8. Notes and Statement of Language 9.3.5.4. Notes within Entries]
  element note {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    tei_att.anchoring.attributes,
    empty
  }
tei_noteGrp =
  
  ## (note group) contains a group of notes [3.9.1.1. Encoding Grouped Notes]
  element noteGrp {
    (tei_desc*, (tei_note | tei_noteGrp)+),
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    tei_att.anchoring.attributes,
    empty
  }
tei_index =
  
  ## (index entry) marks a location to be indexed for whatever purpose. [3.9.2. Index Entries]
  element index {
    (tei_term, tei_index?)*,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    
    ## a single word which follows the rules defining a legal XML name (see ), supplying a name to specify which index (of several) the index entry belongs to.
    attribute indexName { xsd:Name }?,
    empty
  }
tei_media =
  
  ## indicates the location of any form of external media such as an audio or video clip etc. [3.10. Graphics and Other Non-textual Components]
  element media {
    tei_model.descLike*,
    tei_att.typed.attributes,
    tei_att.global.attributes,
    tei_att.media.attribute.width,
    tei_att.media.attribute.height,
    tei_att.media.attribute.scale,
    tei_att.resourced.attributes,
    tei_att.declaring.attributes,
    tei_att.timed.attributes,
    
    ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
    attribute mimeType {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    },
    empty
  }
tei_graphic =
  
  ## (graphic) indicates the location of a graphic or illustration, either forming part of a text, or providing an image of it. [3.10. Graphics and Other Non-textual Components 11.1. Digital Facsimiles]
  element graphic {
    tei_model.descLike*,
    tei_att.global.attributes,
    tei_att.media.attributes,
    tei_att.resourced.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_binaryObject =
  
  ## provides encoded binary data representing an inline graphic, audio, video or other object. [3.10. Graphics and Other Non-textual Components]
  element binaryObject {
    text,
    tei_att.global.attributes,
    tei_att.media.attributes,
    tei_att.timed.attributes,
    tei_att.typed.attributes,
    [
      a:documentation [
        "The encoding used to encode the binary data. If not specified, this is assumed to be "
        ns1:a [ href = "http://en.wikipedia.org/wiki/Base64" "Base64" ]
        "."
      ]
    ]
    attribute encoding {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_milestone =
  
  ## (milestone) marks a boundary point separating any kind of section of a text, typically but not necessarily indicating a point at which some part of a standard reference system changes, where the change is not represented by a structural element. [3.11.3. Milestone
  ## Elements]
  element milestone {
    empty,
    tei_att.global.attributes,
    tei_att.milestoneUnit.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_gb =
  
  ## (gathering beginning) marks the beginning of a new gathering or quire in a transcribed codex. [3.11.3. Milestone
  ## Elements]
  element gb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    tei_att.edition.attributes,
    empty
  }
tei_pb =
  
  ## (page beginning) marks the beginning of a new page in a paginated document. [3.11.3. Milestone
  ## Elements]
  element pb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_lb =
  
  ## (line beginning) marks the beginning of a new (typographic) line in some edition or version of a text. [3.11.3. Milestone
  ## Elements 7.2.5. Speech Contents]
  element lb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_cb =
  
  ## (column beginning) marks the beginning of a new column of a text on a multi-column page. [3.11.3. Milestone
  ## Elements]
  element cb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_analytic =
  
  ## (analytic level) contains bibliographic elements describing an item (e.g. an article or poem) published within a monograph or journal and not as an independent publication. [3.12.2.1. Analytic, Monographic, and Series Levels]
  element analytic {
    (tei_author
     | tei_editor
     | tei_respStmt
     | tei_title
     | tei_model.ptrLike
     | tei_date
     | tei_textLang
     | tei_idno
     | tei_availability)*,
    tei_att.global.attributes,
    empty
  }
tei_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.12.2.1. Analytic, Monographic, and Series Levels]
  element monogr {
    ((((tei_author | tei_editor | tei_meeting | tei_respStmt),
       (tei_author | tei_editor | tei_meeting | tei_respStmt)*,
       tei_title+,
       (tei_model.ptrLike
        | tei_idno
        | tei_textLang
        | tei_editor
        | tei_respStmt)*)
      | ((tei_title | tei_model.ptrLike | tei_idno)+,
         (tei_textLang
          | tei_author
          | tei_editor
          | tei_meeting
          | tei_respStmt)*)
      | (tei_authority, tei_idno))?,
     tei_availability*,
     tei_model.noteLike*,
     (tei_edition,
      (tei_idno
       | tei_model.ptrLike
       | tei_editor
       | tei_sponsor
       | tei_funder
       | tei_respStmt)*)*,
     tei_imprint,
     (tei_imprint | tei_extent | tei_biblScope)*),
    tei_att.global.attributes,
    empty
  }
tei_series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has appeared. [3.12.2.1. Analytic, Monographic, and Series Levels]
  element series {
    (text
     | tei_model.gLike
     | tei_title
     | tei_model.ptrLike
     | tei_editor
     | tei_respStmt
     | tei_biblScope
     | tei_idno
     | tei_textLang
     | tei_model.global
     | tei_availability)*,
    tei_att.global.attributes,
    empty
  }
tei_author =
  
  ## (author) in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-author-calendar-calendar-check-author-constraint-rule-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.12.2.2. Titles, Authors, and Editors]
  element editor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-editor-calendar-calendar-check-editor-constraint-rule-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    (((tei_resp+, tei_model.nameLike.agent+)
      | (tei_model.nameLike.agent+, tei_resp+)),
     tei_note*),
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-resp-calendar-calendar-check-resp-constraint-rule-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_title =
  
  ## (title) contains a title for any kind of work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub (subordinate); 3] alt (alternate); 4] short; 5] desc (descriptive)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-title-calendar-calendar-check-title-constraint-rule-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
tei_meeting =
  
  ## contains the formalized descriptive title for a meeting or conference, for use in a bibliographic description for an item derived from such a meeting, or as a heading or preamble to publications emanating from it. [3.12.2.2. Titles, Authors, and Editors]
  element meeting {
    tei_macro.limitedContent,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.canonical.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-meeting-calendar-calendar-check-meeting-constraint-rule-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element imprint {
    ((tei_classCode | tei_catRef)*,
     ((tei_model.imprintPart | tei_model.dateLike),
      tei_respStmt*,
      tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_publisher =
  
  ## (publisher) provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.12.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.12.2.5. Scopes and Ranges in Bibliographic Citations]
  element biblScope {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.citing.attributes,
    empty
  }
tei_citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units [3.12.2.5. Scopes and Ranges in Bibliographic Citations]
  element citedRange {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.citing.attributes,
    empty
  }
tei_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element bibl {
    (text
     | tei_model.gLike
     | tei_model.highlighted
     | tei_model.pPart.data
     | tei_model.pPart.edit
     | tei_model.segLike
     | tei_model.ptrLike
     | tei_model.biblPart
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    tei_att.sortable.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblStruct {
    (tei_analytic*,
     (tei_monogr, tei_series*)+,
     (tei_model.noteLike
      | tei_model.ptrLike
      | tei_relatedItem
      | tei_citedRange)*),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    tei_att.sortable.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element listBibl {
    (tei_model.headLike*,
     tei_desc*,
     (tei_model.milestoneLike)*,
     (tei_model.biblLike+, (tei_model.milestoneLike)*)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_relatedItem =
  
  ## contains or references some other bibliographic item which is related to the present one in some specified manner, for example as a constituent or alternative version of it. [3.12.2.7. Related Items]
  element relatedItem {
    ((tei_model.biblLike | tei_model.ptrLike)?)
    >> sch:pattern [
         id = "myTEI-relatedItem-targetorcontent1-constraint-report-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and count( child::* ) > 0"
             "\x{a}" ~
             "If the @target attribute on "
             sch:name [ ]
             " is used, the\x{a}" ~
             "relatedItem element must be empty"
           ]
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target or child::*"
             "A relatedItem element should have either a 'target' attribute\x{a}" ~
             "        or a child element to indicate the related bibliographic item"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## points to the related bibliographic element by means of an absolute or relative URI reference
    attribute target {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element l {
    ((text
      | tei_model.gLike
      | tei_model.phrase
      | tei_model.inter
      | tei_model.global)*)
    >> sch:pattern [
         id =
           "myTEI-l-abstractModel-structure-l-in-l-constraint-report-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain lines or lg elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.metrical.attributes,
    tei_att.enjamb.attributes,
    tei_att.fragmentable.attributes,
    empty
  }
tei_lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element lg {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.lLike
      | tei_model.stageLike
      | tei_model.labelLike
      | tei_model.pPart.transcriptional
      | tei_lg),
     (tei_model.lLike
      | tei_model.stageLike
      | tei_model.labelLike
      | tei_model.pPart.transcriptional
      | tei_model.global
      | tei_lg)*,
     (tei_model.divBottom, tei_model.global*)*)
    >> sch:pattern [
         id = "myTEI-lg-atleast1oflggapl-constraint-assert-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg, or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-lg-abstractModel-structure-lg-in-l-constraint-report-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain line groups.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_sp =
  
  ## (speech) contains an individual speech in a performance text, or a passage presented as such in a prose or verse text. [3.13.2. Core Tags for Drama 3.13. Passages of Verse or Drama 7.2.2. Speeches and Speakers]
  element sp {
    (tei_model.global*,
     (tei_speaker, tei_model.global*)?,
     ((tei_lg
       | tei_model.lLike
       | tei_model.pLike
       | tei_model.listLike
       | tei_model.stageLike
       | tei_model.attributable),
      (tei_model.global* | tei_q))+),
    tei_att.global.attributes,
    tei_att.ascribed.directed.attributes,
    empty
  }
tei_speaker =
  
  ## contains a specialized form of heading or label, giving the name of one or more speakers in a dramatic text or fragment. [3.13.2. Core Tags for Drama]
  element speaker {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or fragment. [3.13.2. Core Tags for Drama 3.13. Passages of Verse or Drama 7.2.4. Stage Directions]
  element stage {
    tei_macro.specialPara,
    tei_att.ascribed.directed.attributes,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    
    ## indicates the kind of stage direction.
    ## Suggested values include: 1] setting; 2] entrance; 3] exit; 4] business; 5] novelistic; 6] delivery; 7] modifier; 8] location; 9] mixed
    attribute type {
      list {
        (
         ## describes a setting.
         "setting"
         | 
           ## describes an entrance.
           "entrance"
         | 
           ## describes an exit.
           "exit"
         | 
           ## describes stage business.
           "business"
         | 
           ## is a narrative, motivating stage direction.
           "novelistic"
         | 
           ## describes how a character speaks.
           "delivery"
         | 
           ## gives some detail about a character.
           "modifier"
         | 
           ## describes a location.
           "location"
         | 
           ## more than one of the above
           "mixed"
         | xsd:token { pattern = "[^\p{C}\p{Z}]+" })*
      }
    }?,
    empty
  }
tei_teiCorpus =
  [
    a:documentation [
      "(TEI corpus) contains the whole of a TEI encoded corpus, comprising a single corpus header and one or more "
      ns1:code [ "<TEI>" ]
      " elements, each containing a single text header and a text. [4. Default Text Structure 15.1. Varieties of Composite Text]"
    ]
  ]
  element teiCorpus {
    (tei_teiHeader, tei_model.resource*, tei_model.describedResource+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## (version) specifies the version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_divGen =
  
  ## (automatically generated text division) indicates the location at which a textual division generated automatically by a text-processing application is to appear. [3.9.2. Index Entries]
  element divGen {
    tei_model.headLike*,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies what type of generated text division (e.g. index, table of contents, etc.) is to appear.
    ## Sample values include: 1] index; 2] toc; 3] figlist; 4] tablist
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_textLang =
  
  ## (text language) describes the languages and writing systems identified within the bibliographic work being described, rather than its description. [3.12.2.4. Imprint, Size of a Document, and Reprint Information 10.6.6. Languages and Writing Systems]
  element textLang {
    tei_macro.specialPara,
    tei_att.global.attributes,
    
    ## (main language) supplies a code which identifies the chief language used in the bibliographic work.
    attribute mainLang {
      xsd:language
      | (
         ##
         "")
    }?,
    
    ## (other languages) one or more codes identifying any other languages used in the bibliographic work.
    attribute otherLangs {
      list {
        (xsd:language
         | (
            ##
            ""))*
      }
    }?,
    empty
  }
tei_att.citeStructurePart.attributes =
  tei_att.citeStructurePart.attribute.use
tei_att.citeStructurePart.attribute.use =
  [
    a:documentation [
      "(use) supplies an XPath selection pattern using the syntax defined in . The XPath pattern is relative to the context given in "
      ns1:code [ "@match" ]
      ", which will either be a sibling attribute in the case of `<citeStructure>` or on the parent `<citeStructure>` in the case of `<citeData>`."
    ]
  ]
  attribute use { text }
tei_att.patternReplacement.attributes =
  tei_att.patternReplacement.attribute.matchPattern,
  tei_att.patternReplacement.attribute.replacementPattern
tei_att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { xsd:token }
tei_att.patternReplacement.attribute.replacementPattern =
  [
    a:documentation [
      "specifies a replacement pattern, that is, the skeleton of a relative or absolute URI containing references to groups in the "
      ns1:code [ "@matchPattern" ]
      " which, once subpattern substitution has been performed, complete the URI."
    ]
  ]
  attribute replacementPattern { text }
tei_teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (tei_fileDesc, tei_model.teiHeaderPart*, tei_revisionDesc?),
    tei_att.global.attributes,
    empty
  }
tei_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((tei_titleStmt,
      tei_editionStmt?,
      tei_extent?,
      tei_publicationStmt,
      tei_seriesStmt*,
      tei_notesStmt?),
     tei_sourceDesc+),
    tei_att.global.attributes,
    empty
  }
tei_titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (tei_title+, tei_model.respLike*), tei_att.global.attributes, empty
  }
tei_sponsor =
  
  ## (sponsor) specifies the name of a sponsoring organization or institution. [2.2.1. The Title Statement]
  element sponsor {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-sponsor-calendar-calendar-check-sponsor-constraint-rule-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the funding of a project or text. [2.2.1. The Title Statement]
  element funder {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-funder-calendar-calendar-check-funder-constraint-rule-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_principal =
  
  ## (principal researcher) supplies the name of the principal researcher responsible for the creation of an electronic text. [2.2.1. The Title Statement]
  element principal {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-principal-calendar-calendar-check-principal-constraint-rule-21"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [2.2.2. The Edition Statement 2.2. The File Description]
  element editionStmt {
    (tei_model.pLike+ | (tei_edition, tei_model.respLike*)),
    tei_att.global.attributes,
    empty
  }
tei_edition =
  
  ## (edition) describes the particularities of one edition of a text. [2.2.2. The Edition Statement]
  element edition {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_extent =
  
  ## (extent) describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3. Type and Extent of File 2.2. The File Description 3.12.2.4. Imprint, Size of a Document, and Reprint Information 10.7.1. Object Description]
  element extent {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((tei_model.publicationStmtPart.agency,
      tei_model.publicationStmtPart.detail*)+
     | tei_model.pLike+),
    tei_att.global.attributes,
    empty
  }
tei_distributor =
  
  ## (distributor) supplies the name of a person or other agency responsible for the distribution of a text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element distributor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. Publication, Distribution, Licensing, etc.]
  element authority {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [13.3.1. Basic Principles 2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | tei_model.gLike | tei_idno)*,
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
    attribute type {
      [
        a:documentation [
          "International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the "
          ns1:a [
            href = "https://www.isbn-international.org"
            " International ISBN Agency."
          ]
          "\x{a}" ~
          "                  "
        ]
      ]
      "ISBN"
      | 
        ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
        "ISSN"
      | 
        ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
        "DOI"
      | [
          a:documentation [
            "Uniform Resource Identifier: a string of characters to uniquely identify a resource, following the syntax of "
            ns1:a [
              href = "https://datatracker.ietf.org/doc/html/rfc3986"
              "RFC 3986"
            ]
            "."
          ]
        ]
        "URI"
      | 
        ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
        "VIAF"
      | 
        ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
        "ESTC"
      | 
        ## OCLC control number (record number) for the union catalog record in WorldCat, a union catalog for member libraries in the Online Computer Library Center global cooperative.
        "OCLC"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-idno-calendar-calendar-check-idno-constraint-rule-22"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_availability =
  
  ## (availability) supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (tei_model.availabilityPart | tei_model.pLike)+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (status) supplies a code identifying the current availability of the text.
    attribute status {
      
      ## (free) the text is freely available.
      "free"
      | 
        ## (unknown) the status of the text is unknown.
        "unknown"
      | 
        ## (restricted) the text is not freely available.
        "restricted"
    }?,
    empty
  }
tei_licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-licence-calendar-calendar-check-licence-constraint-rule-23"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which a publication belongs. [2.2.5. The Series Statement 2.2. The File Description]
  element seriesStmt {
    (tei_model.pLike+
     | (tei_title+,
        (tei_editor | tei_respStmt)*,
        (tei_idno | tei_biblScope)*)),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded in other parts of the bibliographic description. [2.2.6. The Notes Statement 2.2. The File Description]
  element notesStmt {
    (tei_model.noteLike | tei_relatedItem)+,
    tei_att.global.attributes,
    empty
  }
tei_sourceDesc =
  
  ## (source description) describes the source(s) from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (tei_model.pLike+
     | (tei_model.biblLike
        | tei_model.sourceDescPart
        | tei_model.listLike)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file description are present. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2. The File Description 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblFull {
    (((tei_titleStmt,
       tei_editionStmt?,
       tei_extent?,
       tei_publicationStmt,
       tei_seriesStmt*,
       tei_notesStmt?),
      tei_sourceDesc*)
     | (tei_fileDesc, tei_profileDesc)),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (tei_model.encodingDescPart | tei_model.pLike)+,
    tei_att.global.attributes,
    empty
  }
tei_schemaRef =
  
  ## (schema reference) describes or points to a related customization or schema file [2.3.10. The Schema Specification]
  element schemaRef {
    tei_model.descLike?,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.resourced.attributes,
    
    ## the identifier used for the customization or schema
    attribute key { xsd:NCName }?,
    empty
  }
tei_projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element projectDesc {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used in selecting texts, or parts of a text, for inclusion in the resource. [2.3.2. The Sampling Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element samplingDecl {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element editorialDecl {
    (tei_model.pLike | tei_model.editorialDeclPart)+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element correction {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text.
    attribute status {
      
      ## the text has been thoroughly checked and proofread.
      "high"
      | 
        ## the text has been checked at least once.
        "medium"
      | 
        ## the text has not been checked.
        "low"
      | 
        ## the correction status of the text is unknown.
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
tei_normalization =
  
  ## (normalization) indicates the extent of normalization or regularization of the original source carried out in converting it to electronic form. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element normalization {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## indicates the method adopted to indicate normalizations within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalization made silently
      "silent"
      | 
        ## normalization represented using markup
        "markup"
    }?,
    empty
  }
tei_quotation =
  
  ## (quotation) specifies editorial practice adopted with respect to quotation marks in the original. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element quotation {
    (tei_model.pLike*)
    >> sch:pattern [
         id = "myTEI-quotation-quotationContents-constraint-report-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:quotation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@marks) and not (tei:p)"
             "\x{a}" ~
             "On "
             sch:name [ ]
             ", either the @marks attribute should be used, or a paragraph of description provided"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (quotation marks) indicates whether or not quotation marks have been retained as content within the text.
    attribute marks {
      
      ## no quotation marks have been retained
      "none"
      | 
        ## some quotation marks have been retained
        "some"
      | 
        ## all quotation marks have been retained
        "all"
    }?,
    empty
  }
tei_hyphenation =
  
  ## (hyphenation) summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element hyphenation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases.
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
        "none"
    }?,
    empty
  }
tei_segmentation =
  
  ## (segmentation) describes the principles according to which the text has been segmented, for example into sentences, tone-units, graphemic strata, etc. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element segmentation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_stdVals =
  
  ## (standard values) specifies the format used when standardized date or number values are supplied. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element stdVals {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_interpretation =
  
  ## (interpretation) describes the scope of any analytic or interpretive information added to the text in addition to the transcription. [2.3.3. The Editorial Practices Declaration]
  element interpretation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_punctuation =
  
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [2.3.3. The Editorial Practices Declaration 3.2. Treatment of Punctuation]
  element punctuation {
    tei_model.pLike*,
    tei_att.declarable.attributes,
    tei_att.global.attributes,
    
    ## indicates whether or not punctation marks have been retained as content within the text.
    attribute marks {
      
      ## no punctuation marks have been retained
      "none"
      | 
        ## some punctuation marks have been retained
        "some"
      | 
        ## all punctuation marks have been retained
        "all"
    }?,
    
    ## indicates the positioning of punctuation marks that are associated with marked up text as being encoded within the element surrounding the text or immediately before or after it.
    attribute placement {
      
      ## punctuation marks found at the start or end of a marked up text component are included within its surrounding element;
      "internal"
      | 
        ## punctuation marks found at the start or end of a marked up text component appear immediately before or after the surrounding element
        "external"
    }?,
    empty
  }
tei_tagsDecl =
  
  ## (tagging declaration) provides detailed information about the tagging applied to a document. [2.3.4. The Tagging Declaration 2.3. The Encoding Description]
  element tagsDecl {
    (tei_rendition*, tei_namespace*),
    tei_att.global.attributes,
    [
      a:documentation [
        "indicates whether the element types listed exhaustively include all those found within "
        ns1:code [ "<text>" ]
        ", or represent only a subset."
      ]
    ]
    attribute partial { xsd:boolean }?,
    empty
  }
tei_tagUsage =
  
  ## (element usage) documents the usage of a specific element within a specified document. [2.3.4. The Tagging Declaration]
  element tagUsage {
    tei_macro.limitedContent,
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    [
      a:documentation [
        "(generic identifier) specifies the name (generic identifier) of the element indicated by the tag, within the namespace indicated by the parent "
        ns1:code [ "<namespace>" ]
        " element."
      ]
    ]
    attribute gi { xsd:Name },
    
    ## specifies the number of occurrences of this element within the text.
    attribute occurs { xsd:nonNegativeInteger }?,
    [
      a:documentation [
        "(with unique identifier) specifies the number of occurrences of this element within the text which bear a distinct value for the global "
        ns1:code [ "@xml:id" ]
        " attribute."
      ]
    ]
    attribute withId { xsd:nonNegativeInteger }?,
    empty
  }
tei_namespace =
  
  ## (namespace) supplies the formal name of the namespace to which the elements documented by its children belong. [2.3.4. The Tagging Declaration]
  element namespace {
    tei_tagUsage+,
    tei_att.global.attributes,
    
    ## specifies the full formal name of the namespace concerned.
    attribute name {
      xsd:anyURI { pattern = "\S+" }?
    },
    empty
  }
tei_rendition =
  
  ## (rendition) supplies information about the rendition or appearance of one or more elements in the source text. [2.3.4. The Tagging Declaration]
  element rendition {
    tei_macro.limitedContent,
    tei_att.global.attributes,
    tei_att.styleDef.attributes,
    
    ## where CSS is used, provides a way of defining pseudo-elements, that is, styling rules applicable to specific sub-portions of an element.
    ## Sample values include: 1] first-line; 2] first-letter; 3] before; 4] after
    attribute scope {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    [
      a:documentation [
        "contains a selector or series of selectors specifying the elements to which the contained style description applies, expressed in the language specified in the "
        ns1:code [ "@scheme" ]
        " attribute."
      ]
    ]
    attribute selector { xsd:string }?,
    empty
  }
tei_styleDefDecl =
  
  ## (style definition language declaration) specifies the name of the formal language in which style or renditional information is supplied elsewhere in the document. The specific version of the scheme may also be supplied. [2.3.5. The Default Style Definition Language Declaration]
  element styleDefDecl {
    tei_model.pLike*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.styleDef.attributes,
    empty
  }
tei_refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this text. [2.3.6.3. Milestone Method 2.3. The Encoding Description 2.3.6. The Reference System Declaration]
  element refsDecl {
    (tei_model.pLike+
     | tei_citeStructure+
     | tei_cRefPattern+
     | tei_refState+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_citeStructure =
  
  ## (citation structure) declares a structure and method for citing the current document. [3.11.4. Declaring Reference Systems 16.2.5.4. Citation Structures]
  element citeStructure {
    (tei_citeData*, tei_citeStructure*, tei_model.descLike*),
    tei_att.global.attributes,
    tei_att.citeStructurePart.attributes,
    
    ## (delimiter) supplies a delimiting string preceding the structural component.
    attribute delim {
      xsd:string { pattern = ".+" }
    }?,
    [
      a:documentation [
        "(match) supplies an XPath selection pattern using the syntax defined in  which identifies a set of nodes which are citable structural components. The expression may be absolute (beginning with `/`) or relative. "
        ns1:code [ "@match" ]
        " on a "
        ns1:code [ "<citeStructure>" ]
        " without a "
        ns1:code [ "<citeStructure>" ]
        " parent must be an absolute XPath. If it is relative, its context is set by the "
        ns1:code [ "@match" ]
        " of the parent "
        ns1:code [ "<citeStructure>" ]
        "."
      ]
    ]
    attribute match { text }
    >> sch:pattern [
         id =
           "myTEI-citeStructure-match-citestructure-outer-match-constraint-rule-24"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:citeStructure[not(parent::tei:citeStructure)]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "starts-with(@match,'/')"
             "An XPath in @match on the outer "
             sch:name [ ]
             " must start with '/'."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-citeStructure-match-citestructure-inner-match-constraint-rule-25"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:citeStructure[parent::tei:citeStructure]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "not(starts-with(@match,'/'))"
             "An XPath in @match must not start with '/' except on the outer "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    [
      a:documentation [
        "(unit) describes the structural unit indicated by the "
        ns1:code [ "<citeStructure>" ]
        ".\x{a}" ~
        "Sample values include: 1] book; 2] chapter; 3] entry; 4] poem; 5] letter; 6] line; 7] section; 8] verse; 9] volume"
      ]
    ]
    attribute unit {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_citeData =
  
  ## (citation data) specifies how information may be extracted from citation structures. [3.11.4. Declaring Reference Systems 16.2.5.4. Citation Structures]
  element citeData {
    empty,
    tei_att.global.attributes,
    tei_att.citeStructurePart.attributes,
    
    ## (property) A URI indicating a property definition.
    attribute property {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_cRefPattern =
  
  ## (canonical reference pattern) specifies an expression and replacement pattern for transforming a canonical reference into a URI. [2.3.6.3. Milestone Method 2.3.6. The Reference System Declaration 2.3.6.2. Search-and-Replace Method]
  element cRefPattern {
    tei_model.pLike*,
    tei_att.global.attributes,
    tei_att.patternReplacement.attributes,
    empty
  }
tei_prefixDef =
  
  ## (prefix definition) defines a prefixing scheme used in teidata.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element prefixDef {
    tei_model.pLike*,
    tei_att.global.attributes,
    tei_att.patternReplacement.attributes,
    
    ## supplies a name which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
    attribute ident {
      xsd:token { pattern = "[a-z][a-z0-9\+\.\-]*" }
    },
    empty
  }
tei_listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in teidata.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element listPrefixDef {
    (tei_desc*, (tei_prefixDef | tei_listPrefixDef)+),
    tei_att.global.attributes,
    empty
  }
tei_refState =
  
  ## (reference state) specifies one component of a canonical reference defined by the milestone method. [2.3.6.3. Milestone Method 2.3.6. The Reference System Declaration]
  element refState {
    empty,
    tei_att.global.attributes,
    tei_att.milestoneUnit.attributes,
    tei_att.edition.attributes,
    
    ## specifies the fixed length of the reference component.
    attribute length { xsd:nonNegativeInteger }?,
    
    ## (delimiter) supplies a delimiting string following the reference component.
    attribute delim { xsd:string }?,
    empty
  }
tei_classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory codes used elsewhere in the text. [2.3.7. The Classification Declaration 2.3. The Encoding Description]
  element classDecl { tei_taxonomy+, tei_att.global.attributes, empty }
tei_taxonomy =
  
  ## (taxonomy) defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. [2.3.7. The Classification Declaration]
  element taxonomy {
    (((tei_category | tei_taxonomy)+
      | ((tei_model.descLike | tei_equiv | tei_gloss)+,
         (tei_category | tei_taxonomy)*))
     | (tei_model.biblLike, (tei_category | tei_taxonomy)*)),
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    empty
  }
tei_category =
  
  ## (category) contains an individual descriptive category, possibly nested within a superordinate category, within a user-defined taxonomy. [2.3.7. The Classification Declaration]
  element category {
    ((tei_catDesc+ | (tei_model.descLike | tei_equiv | tei_gloss)*),
     tei_category*),
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    empty
  }
tei_catDesc =
  [
    a:documentation [
      "(category description) describes some category within a taxonomy or text typology, either in the form of a brief prose description or in terms of the situational parameters used by the TEI formal "
      ns1:code [ "<textDesc>" ]
      ". [2.3.7. The Classification Declaration]"
    ]
  ]
  element catDesc {
    (text | tei_model.limitedPhrase | tei_model.catDescPart)*,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_geoDecl =
  [
    a:documentation [
      "(geographic coordinates declaration) documents the notation and the datum used for geographic coordinates expressed as content of the "
      ns1:code [ "<geo>" ]
      " element elsewhere within the document. [2.3.8. The Geographic Coordinates Declaration]"
    ]
  ]
  element geoDecl {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## supplies a commonly used code name for the datum employed.
    ## Suggested values include: 1] WGS84 (World Geodetic System); 2] MGRS (Military Grid Reference System); 3] OSGB36 (ordnance survey great britain); 4] ED50 (European Datum coordinate system)
    [ a:defaultValue = "WGS84" ]
    attribute datum {
      
      ## (World Geodetic System) a pair of numbers to be interpreted as latitude followed by longitude according to the World Geodetic System.
      "WGS84"
      | 
        ## (Military Grid Reference System) the values supplied are geospatial entity object codes, based on
        "MGRS"
      | 
        ## (ordnance survey great britain) the value supplied is to be interpreted as a British National Grid Reference.
        "OSGB36"
      | 
        ## (European Datum coordinate system) the value supplied is to be interpreted as latitude followed by longitude according to the European Datum coordinate system.
        "ED50"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_unitDecl =
  
  ## (unit declarations) provides information about units of measurement that are not members of the International System of Units. [2.3.9. The Unit Declaration]
  element unitDecl {
    tei_unitDef+,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    tei_att.global.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-unitDecl-calendar-calendar-check-unitDecl-constraint-rule-26"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_unitDef =
  
  ## (unit definition) contains descriptive information related to a specific unit of measurement. [2.3.9. The Unit Declaration]
  element unitDef {
    (tei_model.labelLike
     | tei_model.placeNamePart?
     | tei_conversion?
     | tei_unit?)+,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.canonical.attributes,
    tei_att.typed.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-unitDef-calendar-calendar-check-unitDef-constraint-rule-27"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_conversion =
  
  ## defines how to calculate one unit of measure in terms of another. [2.3.9. The Unit Declaration]
  element conversion {
    empty,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.formula.attributes,
    tei_att.locatable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-conversion-calendar-calendar-check-conversion-constraint-rule-28"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    [
      a:documentation [
        "indicates a source unit of measure that is to be converted into another unit indicated in "
        ns1:code [ "@toUnit" ]
        "."
      ]
    ]
    attribute fromUnit {
      xsd:anyURI { pattern = "\S+" }
    },
    [
      a:documentation [
        "the target unit of measurement for a conversion from a source unit referenced in "
        ns1:code [ "@fromUnit" ]
        "."
      ]
    ]
    attribute toUnit {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_appInfo =
  
  ## (application information) records information about an application which has edited the TEI file. [2.3.11. The Application Information Element]
  element appInfo {
    tei_model.applicationLike+, tei_att.global.attributes, empty
  }
tei_application =
  
  ## provides information about an application which has acted upon the document. [2.3.11. The Application Information Element]
  element application {
    (tei_model.labelLike+, (tei_model.ptrLike* | tei_model.pLike*)),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-application-calendar-calendar-check-application-constraint-rule-29"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## supplies an identifier for the application, independent of its version number or display name.
    attribute ident { xsd:Name },
    
    ## supplies a version number for the application, independent of its identifier or display name.
    attribute version {
      xsd:token {
        pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}"
      }
    },
    empty
  }
tei_profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4. The Profile Description 2.1.1. The TEI Header and Its Components]
  element profileDesc {
    tei_model.profileDescPart*, tei_att.global.attributes, empty
  }
tei_handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript. [10.7.2. Writing, Decoration, and Other Notations]
  element handNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    empty
  }
tei_abstract =
  
  ## contains a summary or formal abstract prefixed to an existing source document by the encoder. [2.4.4. Abstracts]
  element abstract {
    (tei_model.pLike | tei_model.listLike | tei_listBibl)+,
    tei_att.global.attributes,
    empty
  }
tei_creation =
  
  ## (creation) contains information about the creation of a text. [2.4.1. Creation 2.4. The Profile Description]
  element creation {
    (text | tei_model.limitedPhrase | tei_listChange)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-creation-calendar-calendar-check-creation-constraint-rule-30"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 15.3.2. Declarable Elements]
  element langUsage {
    (tei_model.pLike+ | tei_language+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_language =
  
  ## (language) characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    [
      a:documentation [
        "(identifier) Supplies a language code constructed as defined in "
        ns1:a [ href = "https://tools.ietf.org/html/bcp47" "BCP 47" ]
        " which is used to identify the language documented by this element, and which may be referenced by the global "
        ns1:code [ "@xml:lang" ]
        " attribute."
      ]
    ]
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    
    ## specifies the approximate percentage of the text which uses this language.
    attribute usage { xsd:nonNegativeInteger }?,
    empty
  }
tei_textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard classification scheme, thesaurus, etc. [2.4.3. The Text Classification]
  element textClass {
    (tei_classCode | tei_catRef | tei_keywords)*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_keywords =
  
  ## (keywords) contains a list of keywords or phrases identifying the topic or nature of a text. [2.4.3. The Text Classification]
  element keywords {
    (tei_term+ | tei_list),
    tei_att.global.attributes,
    [
      a:documentation [
        "identifies the controlled vocabulary within which the set of keywords concerned is defined, for example by a "
        ns1:code [ "<taxonomy>" ]
        " element, or by some other resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_classCode =
  
  ## (classification code) contains the classification code used for this text in some standard classification system. [2.4.3. The Text Classification]
  element classCode {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    [
      a:documentation [
        "identifies the classification system in use, as defined by, e.g. a "
        ns1:code [ "<taxonomy>" ]
        " element, or some other resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_catRef =
  
  ## (category reference) specifies one or more defined categories within some taxonomy or text typology. [2.4.3. The Text Classification]
  element catRef {
    empty,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    [
      a:documentation [
        "identifies the classification scheme within which the set of categories concerned is defined, for example by a "
        ns1:code [ "<taxonomy>" ]
        " element, or by some other resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_calendarDesc =
  
  ## (calendar description) contains a description of the calendar system used in any dating expression found in the text. [2.4. The Profile Description 2.4.5. Calendar Description]
  element calendarDesc {
    tei_calendar+, tei_att.global.attributes, empty
  }
tei_calendar =
  
  ## (calendar) describes a calendar or dating system used in a dating formula in the text. [2.4.5. Calendar Description]
  element calendar {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_correspDesc =
  
  ## (correspondence description) contains a description of the actions related to one act of correspondence. [2.4.6. Correspondence Description]
  element correspDesc {
    (tei_model.correspDescPart+ | tei_model.pLike+),
    tei_att.declarable.attributes,
    tei_att.canonical.attributes,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_correspAction =
  
  ## (correspondence action) contains a structured description of the place, the name of a person/organization and the date related to the sending/receiving of a message or any other action related to the correspondence. [2.4.6. Correspondence Description]
  element correspAction {
    (tei_model.correspActionPart+ | tei_model.pLike+),
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.sortable.attributes,
    
    ## describes the nature of the action.
    ## Suggested values include: 1] sent; 2] received; 3] transmitted; 4] redirected; 5] forwarded
    attribute type {
      
      ## information concerning the sending or dispatch of a message.
      "sent"
      | 
        ## information concerning the receipt of a message.
        "received"
      | 
        ## information concerning the transmission of a message, i.e. between the dispatch and the next receipt, redirect or forwarding.
        "transmitted"
      | 
        ## information concerning the redirection of an unread message.
        "redirected"
      | 
        ## information concerning the forwarding of a message.
        "forwarded"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_correspContext =
  
  ## (correspondence context) provides references to preceding or following correspondence related to this piece of correspondence. [2.4.6. Correspondence Description]
  element correspContext {
    tei_model.correspContextPart+, tei_att.global.attributes, empty
  }
tei_xenoData =
  
  ## (non-TEI metadata) provides a container element into which metadata in non-TEI formats may be placed. [2.5. Non-TEI Metadata]
  element xenoData {
    (text | anyElement_xenoData_1),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (tei_list+ | tei_listChange+ | tei_change+),
    tei_att.global.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_change =
  
  ## (change) documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    tei_macro.specialPara,
    tei_att.ascribed.attributes,
    tei_att.datable.attributes,
    tei_att.docStatus.attributes,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    (
     ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
     attribute calendar {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?)
    >> sch:pattern [
         id =
           "myTEI-change-calendar-calendar-check-change-constraint-rule-31"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length( normalize-space(.) ) gt 0"
             " @calendar indicates one or more\x{a}" ~
             "                        systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
             "                        but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## (target) points to one or more elements that belong to this change.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text. [2.6. The Revision Description 11.7. Identifying Changes and Revisions]
  element listChange {
    (tei_desc*, (tei_listChange | tei_change)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    [
      a:defaultValue = "true"
      a:documentation [
        "indicates whether the ordering of its child "
        ns1:code [ "<change>" ]
        " elements is to be considered significant or not"
      ]
    ]
    attribute ordered { xsd:boolean }?,
    empty
  }
tei_TEI =
  [
    a:documentation [
      "(TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resource class. Multiple "
      ns1:code [ "<TEI>" ]
      " elements may be combined within a "
      ns1:code [ "<TEI>" ]
      " (or "
      ns1:code [ "<teiCorpus>" ]
      ") element. [4. Default Text Structure 15.1. Varieties of Composite Text]"
    ]
  ]
  element TEI {
    (tei_teiHeader,
     ((tei_model.resource+, tei_TEI*) | tei_TEI+))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ]
    >> sch:ns [
         prefix = "rna"
         uri = "http://relaxng.org/ns/compatibility/annotations/1.0"
       ]
    >> sch:ns [
         prefix = "sch"
         uri = "http://purl.oclc.org/dsdl/schematron"
       ]
    >> sch:ns [
         prefix = "sch1x"
         uri = "http://www.ascc.net/xml/schematron"
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## specifies the version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_text =
  
  ## (text) contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (tei_model.global*,
     (tei_model.divTop, (tei_model.global | tei_model.divTop)*)?,
     (tei_model.divGenLike,
      (tei_model.global | tei_model.divGenLike)*)?,
     ((tei_model.divLike, (tei_model.global | tei_model.divGenLike)*)+
      | (tei_model.div1Like,
         (tei_model.global | tei_model.divGenLike)*)+
      | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
         ((tei_model.divLike,
           (tei_model.global | tei_model.divGenLike)*)+
          | (tei_model.div1Like,
             (tei_model.global | tei_model.divGenLike)*)+)?)),
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_group =
  
  ## (group) contains the body of a composite text, grouping together a sequence of distinct texts (or groups of such texts) which are regarded as a unit for some purpose, for example the collected works of an author, a sequence of prose essays, etc. [4. Default Text Structure 4.3.1. Grouped Texts 15.1. Varieties of Composite Text]
  element group {
    ((tei_model.divTop | tei_model.global)*,
     ((tei_text | tei_group),
      (tei_text | tei_group | tei_model.global)*),
     tei_model.divBottom*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_floatingText =
  
  ## (floating text) contains a single text of any kind, whether unitary or composite, which interrupts the text containing it at any point and after which the surrounding text resumes. [4.3.2. Floating Texts]
  element floatingText {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.divLike | tei_model.divGenLike), tei_model.global*)+
       | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
          ((tei_model.divLike | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?)
    >> sch:pattern [
         id =
           "myTEI-div-abstractModel-structure-div-in-l-or-lg-constraint-report-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-div-abstractModel-structure-div-in-ab-or-p-constraint-report-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: p and ab may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    tei_att.written.attributes,
    empty
  }
tei_div1 =
  
  ## (level-1 text division) contains a first-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div1 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div2Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
          ((tei_model.div2Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div2 =
  
  ## (level-2 text division) contains a second-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div2 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div3Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
          ((tei_model.div3Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div3 =
  
  ## (level-3 text division) contains a third-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div3 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div4Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
          ((tei_model.div4Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div4 =
  
  ## (level-4 text division) contains a fourth-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div4 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div5Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
          ((tei_model.div5Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div5 =
  
  ## (level-5 text division) contains a fifth-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div5 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div6Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
          ((tei_model.div6Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div6 =
  
  ## (level-6 text division) contains a sixth-level subdivision of the front, body, or back of a text. [4.1.2. Numbered Divisions]
  element div6 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div7Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
          ((tei_model.div7Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div7 =
  
  ## (level-7 text division) contains the smallest possible subdivision of the front, body or back of a text, larger than a paragraph. [4.1.2. Numbered Divisions]
  element div7 {
    ((tei_model.divTop | tei_model.global)*,
     (((tei_schemaSpec | tei_model.common), tei_model.global*)+,
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text. [4.2.4. Content of Textual Divisions 4.2. Elements Common to All Divisions]
  element trailer {
    (text
     | tei_lg
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.lLike
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    empty
  }
tei_byline =
  
  ## (byline) contains the primary statement of responsibility given for a work on its title page or at the head or end of the work. [4.2.2. Openers and Closers 4.5. Front Matter]
  element byline {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_docAuthor
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_dateline =
  
  ## (dateline) contains a brief description of the place, date, time, etc. of production of a letter, newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. [4.2.2. Openers and Closers]
  element dateline {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.global
     | tei_docDate)*,
    tei_att.global.attributes,
    empty
  }
tei_argument =
  
  ## (argument) contains a formal list or prose description of the topics addressed by a subdivision of a text. [4.2. Elements Common to All Divisions 4.6. Title Pages]
  element argument {
    ((tei_model.global | tei_model.headLike)*,
     (tei_model.common, tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_epigraph =
  
  ## (epigraph) contains a quotation, anonymous or attributed, appearing at the start or end of a section or on a title page. [4.2.3. Arguments, Epigraphs, and Postscripts 4.2. Elements Common to All Divisions 4.6. Title Pages]
  element epigraph {
    (tei_model.common | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_opener =
  
  ## (opener) groups together dateline, byline, salutation, and similar phrases appearing as a preliminary group at the start of a division, especially of a letter. [4.2. Elements Common to All Divisions]
  element opener {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_argument
     | tei_byline
     | tei_dateline
     | tei_epigraph
     | tei_salute
     | tei_signed
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_closer =
  
  ## (closer) groups together salutations, datelines, and similar phrases appearing as a final group at the end of a division, especially of a letter. [4.2.2. Openers and Closers 4.2. Elements Common to All Divisions]
  element closer {
    (text
     | tei_model.gLike
     | tei_signed
     | tei_dateline
     | tei_salute
     | tei_model.phrase
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other division of a text, or the salutation in the closing of a letter, preface, etc. [4.2.2. Openers and Closers]
  element salute {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_signed =
  
  ## (signature) contains the closing salutation, etc., appended to a foreword, dedicatory epistle, or other division of a text. [4.2.2. Openers and Closers]
  element signed {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_postscript =
  
  ## contains a postscript, e.g. to a letter. [4.2. Elements Common to All Divisions]
  element postscript {
    ((tei_model.global | tei_model.divTopPart)*,
     tei_model.common,
     (tei_model.global | tei_model.common)*,
     (tei_model.divBottomPart, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_titlePage =
  
  ## (title page) contains the title page of a text, appearing within the front or back matter. [4.6. Title Pages]
  element titlePage {
    (tei_model.global*,
     tei_model.titlepagePart,
     (tei_model.titlepagePart | tei_model.global)*),
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## classifies the title page according to any convenient typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_docTitle =
  
  ## (document title) contains the title of a document, including all its constituents, as given on a title page. [4.6. Title Pages]
  element docTitle {
    (tei_model.global*, (tei_titlePart, tei_model.global*)+),
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_titlePart =
  
  ## (title part) contains a subsection or division of the title of a work, as indicated on a title page. [4.6. Title Pages]
  element titlePart {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## (type) specifies the role of this subdivision of the title.
    ## Suggested values include: 1] main (main); 2] sub (subordinate); 3] alt (alternate); 4] short (short); 5] desc (descriptive)
    [ a:defaultValue = "main" ]
    attribute type {
      
      ## (main) main title of the work
      "main"
      | 
        ## (subordinate) subtitle of the work
        "sub"
      | 
        ## (alternate) alternative title of the work
        "alt"
      | 
        ## (short) abbreviated form of title
        "short"
      | 
        ## (descriptive) descriptive paraphrase of the work
        "desc"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_docAuthor =
  
  ## (document author) contains the name of the author of the document, as given on the title page (often but not always contained in a byline). [4.6. Title Pages]
  element docAuthor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_imprimatur =
  
  ## (imprimatur) contains a formal statement authorizing the publication of a work, sometimes required to appear on a title page or its verso. [4.6. Title Pages]
  element imprimatur {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_docEdition =
  
  ## (document edition) contains an edition statement as presented on a title page of a document. [4.6. Title Pages]
  element docEdition {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_docImprint =
  
  ## (document imprint) contains the imprint statement (place and date of publication, publisher name), as given (usually) at the foot of a title page. [4.6. Title Pages]
  element docImprint {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_pubPlace
     | tei_docDate
     | tei_publisher
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_docDate =
  
  ## (document date) contains the date of a document, as given on a title page or in a dateline. [4.6. Title Pages]
  element docDate {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.calendarSystem.attributes,
    empty
  }
tei_front =
  
  ## (front matter) contains any prefatory matter (headers, abstracts, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6. Title Pages 4. Default Text Structure]
  element front {
    ((tei_model.frontPart
      | tei_model.pLike
      | tei_model.pLike.front
      | tei_model.global)*,
     (((tei_model.div1Like,
        (tei_model.div1Like | tei_model.frontPart | tei_model.global)*)
       | (tei_model.divLike,
          (tei_model.divLike
           | tei_model.frontPart
           | tei_model.global)*)),
      (tei_model.divBottom,
       (tei_model.divBottom | tei_model.global)*)?)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a text. [4.7. Back Matter 4. Default Text Structure]
  element back {
    ((tei_model.frontPart
      | tei_model.pLike.front
      | tei_model.pLike
      | tei_model.listLike
      | tei_model.global)*,
     ((tei_model.div1Like,
       (tei_model.frontPart | tei_model.div1Like | tei_model.global)*)
      | (tei_model.divLike,
         (tei_model.frontPart
          | tei_model.divLike
          | tei_model.global)*))?,
     (tei_model.divBottomPart,
      (tei_model.divBottomPart | tei_model.global)*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_att.lexicographic.normalized.attributes =
  tei_att.lexicographic.normalized.attribute.norm,
  tei_att.lexicographic.normalized.attribute.orig
tei_att.lexicographic.normalized.attribute.norm =
  
  ## (normalized) provides the normalized/standardized form of information present in the source text in a non-normalized form
  attribute norm { xsd:string }?
tei_att.lexicographic.normalized.attribute.orig =
  
  ## (original) gives the original string or is the empty string when the element does not appear in the source text.
  attribute orig { xsd:string }?
tei_att.linguistic.attributes =
  tei_att.lexicographic.normalized.attributes,
  tei_att.linguistic.attribute.lemma,
  tei_att.linguistic.attribute.lemmaRef,
  tei_att.linguistic.attribute.pos,
  tei_att.linguistic.attribute.msd,
  tei_att.linguistic.attribute.join
tei_att.linguistic.attribute.lemma =
  
  ## provides a lemma (base form) for the word, typically uninflected and serving both as an identifier (e.g. in dictionary contexts, as a headword), and as a basis for potential inflections.
  attribute lemma { xsd:string }?
tei_att.linguistic.attribute.lemmaRef =
  
  ## provides a pointer to a definition of the lemma for the word, for example in an online lexicon.
  attribute lemmaRef {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.linguistic.attribute.pos =
  
  ## (part of speech) indicates the part of speech assigned to a token (i.e. information on whether it is a noun, adjective, or verb), usually according to some official reference vocabulary (e.g. for German: STTS, for English: CLAWS, for Polish: NKJP, etc.).
  attribute pos { xsd:string }?
tei_att.linguistic.attribute.msd =
  [
    a:documentation [
      "(morphosyntactic description) supplies morphosyntactic information for a token, usually according to some official reference vocabulary (e.g. for German: "
      ns1:a [
        href =
          "http://www.ims.uni-stuttgart.de/forschung/ressourcen/lexika/TagSets/stts-1999.pdf"
        "STTS-large tagset"
      ]
      "; for a feature description system designed as (pragmatically) universal, see "
      ns1:a [
        href = "http://universaldependencies.org/u/feat/index.html"
        "Universal Features"
      ]
      ")."
    ]
  ]
  attribute msd { xsd:string }?
tei_att.linguistic.attribute.join =
  
  ## when present, provides information on whether the token in question is adjacent to another, and if so, on which side.
  attribute join {
    
    ## the token is not adjacent to another
    "no"
    | 
      ## there is no whitespace on the left side of the token
      "left"
    | 
      ## there is no whitespace on the right side of the token
      "right"
    | 
      ## there is no whitespace on either side of the token
      "both"
    | 
      ## the token overlaps with another; other devices (specifying the extent and the area of overlap) are needed to more precisely locate this token in the character stream
      "overlap"
  }?
tei_att.global.analytic.attributes =
  tei_att.global.analytic.attribute.ana
tei_att.global.analytic.attribute.ana =
  [
    a:documentation [
      "(analysis) indicates one or more elements containing interpretations of the element on which the "
      ns1:code [ "@ana" ]
      " attribute appears."
    ]
  ]
  attribute ana {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_s =
  
  ## (s-unit) contains a sentence-like division of a text. [17.1. Linguistic Segment Categories 8.4.1. Segmentation]
  element s {
    tei_macro.phraseSeq
    >> sch:pattern [
         id = "myTEI-s-noNestedS-constraint-report-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:s"
           "\x{a}" ~
           "               "
           sch:report [
             test = "tei:s"
             "You may not nest one s element within\x{a}" ~
             "      another: use seg instead"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_cl =
  
  ## (clause) represents a grammatical clause. [17.1. Linguistic Segment Categories]
  element cl {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_phr =
  
  ## (phrase) represents a grammatical phrase. [17.1. Linguistic Segment Categories]
  element phr {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_w =
  
  ## (word) represents a grammatical (not necessarily orthographic) word. [17.1. Linguistic Segment Categories 17.4.2. Lightweight Linguistic Annotation]
  element w {
    (text
     | tei_model.gLike
     | tei_seg
     | tei_w
     | tei_m
     | tei_c
     | tei_pc
     | tei_model.global
     | tei_model.lPart
     | tei_model.hiLike
     | tei_model.pPart.edit)*,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.linguistic.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_m =
  
  ## (morpheme) represents a grammatical morpheme. [17.1. Linguistic Segment Categories]
  element m {
    (text
     | tei_model.gLike
     | tei_model.hiLike
     | tei_seg
     | tei_m
     | tei_c
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    
    ## supplies the morpheme's base form.
    attribute baseForm {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_c =
  
  ## (character) represents a character. [17.1. Linguistic Segment Categories]
  element c {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_pc =
  
  ## (punctuation character) contains a character or string of characters regarded as constituting a single punctuation mark. [17.1.2. Below the Word Level 17.4.2. Lightweight Linguistic Annotation]
  element pc {
    (text | tei_model.gLike | tei_c | tei_model.pPart.edit)*,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.linguistic.attributes,
    
    ## indicates the extent to which this punctuation mark conventionally separates words or phrases
    attribute force {
      
      ## the punctuation mark is a word separator
      "strong"
      | 
        ## the punctuation mark is not a word separator
        "weak"
      | 
        ## the punctuation mark may or may not be a word separator
        "inter"
    }?,
    
    ## provides a name for the kind of unit delimited by this punctuation mark.
    attribute unit {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## indicates whether this punctuation mark precedes or follows the unit it delimits.
    attribute pre { xsd:boolean }?,
    empty
  }
tei_span =
  
  ## associates an interpretative annotation directly with a span of text. [17.3. Spans and Interpretations]
  element span {
    tei_macro.phraseSeq.limited
    >> sch:pattern [
         id = "myTEI-span-targetfrom-constraint-report-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@from and @target"
             "\x{a}" ~
             "Only one of the attributes @target and @from may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-span-targetto-constraint-report-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@to and @target"
             "\x{a}" ~
             "Only one of the attributes @target and @to may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-span-tonotfrom-constraint-report-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@to and not(@from)"
             "\x{a}" ~
             "If @to is supplied on "
             sch:name [ ]
             ", @from must be supplied as well"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-span-tofrom-constraint-report-21"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:span"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "contains(normalize-space(@to),' ') or contains(normalize-space(@from),' ')"
             "\x{a}" ~
             "The attributes @to and @from on "
             sch:name [ ]
             " may each contain only a single value"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    tei_att.pointing.attributes,
    [
      a:documentation [
        "gives the identifier of the node which is the starting point of the span of text being annotated; if not accompanied by a "
        ns1:code [ "@to" ]
        " attribute, gives the identifier of the node of the entire span of text being annotated."
      ]
    ]
    attribute from {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## gives the identifier of the node which is the end-point of the span of text being annotated.
    attribute to {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_spanGrp =
  
  ## (span group) collects together span tags. [17.3. Spans and Interpretations]
  element spanGrp {
    (tei_model.descLike*, tei_span*),
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    empty
  }
tei_interp =
  
  ## (interpretation) summarizes a specific interpretative annotation which can be linked to a span of text. [17.3. Spans and Interpretations]
  element interp {
    (text | tei_model.gLike | tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    empty
  }
tei_interpGrp =
  
  ## (interpretation group) collects together a set of related interpretations which share responsibility or type. [17.3. Spans and Interpretations]
  element interpGrp {
    (tei_model.descLike*, tei_interp+),
    tei_att.global.attributes,
    tei_att.interpLike.attributes,
    empty
  }
tei_textDesc =
  
  ## (text description) provides a description of a text in terms of its situational parameters. [15.2.1. The Text Description]
  element textDesc {
    (tei_channel,
     tei_constitution,
     tei_derivation,
     tei_domain,
     tei_factuality,
     tei_interaction,
     tei_preparedness,
     tei_purpose+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_particDesc =
  
  ## (participation description) describes the identifiable speakers, voices, or other participants in any kind of text or other persons named or otherwise referred to in a text, edition, or metadata. [15.2. Contextual Information]
  element particDesc {
    (tei_model.pLike+ | (tei_model.personLike)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_settingDesc =
  
  ## (setting description) describes the setting or settings within which a language interaction takes place, or other places otherwise referred to in a text, edition, or metadata. [15.2. Contextual Information 2.4. The Profile Description]
  element settingDesc {
    (tei_model.pLike+ | (tei_setting | tei_model.placeLike)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_channel =
  
  ## (primary channel) describes the medium or channel by which a text is delivered or experienced. For a written text, this might be print, manuscript, email, etc.; for a spoken one, radio, telephone, face-to-face, etc. [15.2.1. The Text Description]
  element channel {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    
    ## specifies the mode of this channel with respect to speech and writing.
    [ a:defaultValue = "x" ]
    attribute mode {
      
      ## (spoken) 
      "s"
      | 
        ## (written) 
        "w"
      | 
        ## (spoken to be written) e.g. dictation
        "sw"
      | 
        ## (written to be spoken) e.g. a script
        "ws"
      | 
        ## (mixed) 
        "m"
      | 
        ## (unknown or inapplicable) 
        "x"
    }?,
    empty
  }
tei_constitution =
  
  ## (constitution) describes the internal composition of a text or text sample, for example as fragmentary, complete, etc. [15.2.1. The Text Description]
  element constitution {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies how the text was constituted.
    [ a:defaultValue = "single" ]
    attribute type {
      
      ## a single complete text
      "single"
      | 
        ## a text made by combining several smaller items, each individually complete
        "composite"
      | 
        ## (fragments) a text made by combining several smaller, not necessarily complete, items
        "frags"
      | 
        ## composition unknown or unspecified
        "unknown"
    }?,
    empty
  }
tei_derivation =
  
  ## (derivation) describes the nature and extent of originality of this text. [15.2.1. The Text Description]
  element derivation {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the derivation of the text.
    ## Sample values include: 1] original; 2] revision; 3] translation; 4] abridgment; 5] plagiarism; 6] traditional
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_domain =
  
  ## (domain of use) describes the most important social context in which the text was realized or for which it is intended, for example private vs. public, education, religion, etc. [15.2.1. The Text Description]
  element domain {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the domain of use.
    ## Sample values include: 1] art; 2] domestic; 3] religious; 4] business; 5] education (education); 6] govt (government); 7] public
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_factuality =
  
  ## (factuality) describes the extent to which the text may be regarded as imaginative or non-imaginative, that is, as describing a fictional or a non-fictional world. [15.2.1. The Text Description]
  element factuality {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the factuality of the text.
    attribute type {
      
      ## the text is to be regarded as entirely imaginative
      "fiction"
      | 
        ## the text is to be regarded as entirely informative or factual
        "fact"
      | 
        ## the text contains a mixture of fact and fiction
        "mixed"
      | 
        ## the fiction/fact distinction is not regarded as helpful or appropriate to this text
        "inapplicable"
    }?,
    empty
  }
tei_interaction =
  
  ## (interaction) describes the extent, cardinality and nature of any interaction among those producing and experiencing the text, for example in the form of response or interjection, commentary, etc. [15.2.1. The Text Description]
  element interaction {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies the degree of interaction between active and passive participants in the text.
    attribute type {
      
      ## no interaction of any kind, e.g. a monologue
      "none"
      | 
        ## some degree of interaction, e.g. a monologue with set responses
        "partial"
      | 
        ## complete interaction, e.g. a face to face conversation
        "complete"
      | 
        ## this parameter is inappropriate or inapplicable in this case
        "inapplicable"
    }?,
    
    ## specifies the number of active participants (or addressors) producing parts of the text.
    ## Suggested values include: 1] singular; 2] plural; 3] corporate; 4] unknown
    attribute active {
      
      ## a single addressor
      "singular"
      | 
        ## many addressors
        "plural"
      | 
        ## a corporate addressor
        "corporate"
      | 
        ## number of addressors unknown or unspecifiable
        "unknown"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies the number of passive participants (or addressees) to whom a text is directed or in whose presence it is created or performed.
    ## Suggested values include: 1] self; 2] single; 3] many; 4] group; 5] world
    attribute passive {
      
      ## text is addressed to the originator e.g. a diary
      "self"
      | 
        ## text is addressed to one other person e.g. a personal letter
        "single"
      | 
        ## text is addressed to a countable number of others e.g. a conversation in which all participants are identified
        "many"
      | 
        ## text is addressed to an undefined but fixed number of participants e.g. a lecture
        "group"
      | 
        ## text is addressed to an undefined and indeterminately large number e.g. a published book
        "world"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_preparedness =
  
  ## (preparedness) describes the extent to which a text may be regarded as prepared or spontaneous. [15.2.1. The Text Description]
  element preparedness {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## a keyword characterizing the type of preparedness.
    ## Sample values include: 1] none; 2] scripted; 3] formulaic; 4] revised
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_purpose =
  
  ## characterizes a single purpose or communicative function of the text. [15.2.1. The Text Description]
  element purpose {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies a particular kind of purpose.
    ## Suggested values include: 1] persuade; 2] express; 3] inform; 4] entertain
    attribute type {
      
      ## didactic, advertising, propaganda, etc.
      "persuade"
      | 
        ## self expression, confessional, etc.
        "express"
      | 
        ## convey information, educate, etc.
        "inform"
      | 
        ## amuse, entertain, etc.
        "entertain"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies the extent to which this purpose predominates.
    attribute degree {
      
      ##
      "high"
      | 
        ##
        "medium"
      | 
        ##
        "low"
      | 
        ##
        "unknown"
    }?,
    empty
  }
tei_setting =
  
  ## describes one particular setting in which a language interaction takes place. [15.2.3. The Setting Description]
  element setting {
    (tei_model.pLike+
     | (tei_model.nameLike.agent
        | tei_model.dateLike
        | tei_model.settingPart)*),
    tei_att.global.attributes,
    tei_att.ascribed.attributes,
    empty
  }
tei_locale =
  
  ## contains a brief informal description of the kind of place concerned, for example: a room, a restaurant, a park bench, etc. [15.2.3. The Setting Description]
  element locale {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_activity =
  
  ## (activity) contains a brief informal description of what a participant in a language interaction is doing other than speaking, if anything. [15.2.3. The Setting Description]
  element activity {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_model.entryLike = tei_superEntry | tei_entry | tei_entryFree
tei_att.entryLike.attributes =
  tei_att.entryLike.attribute.type, tei_att.typed.attribute.subtype
tei_att.entryLike.attribute.type =
  
  ## indicates type of entry, in dictionaries with multiple types.
  ## Suggested values include: 1] main; 2] hom (homograph); 3] xref (cross reference); 4] affix; 5] abbr (abbreviation); 6] supplemental; 7] foreign
  [ a:defaultValue = "main" ]
  attribute type {
    
    ## a main entry (default).
    "main"
    | 
      ## (homograph) groups information relating to one homograph within an entry.
      "hom"
    | 
      ## (cross reference) a reduced entry whose only function is to point to another main entry (e.g. for forms of an irregular verb or for variant spellings: was pointing to be, or esthete to aesthete).
      "xref"
    | 
      ## an entry for a prefix, infix, or suffix.
      "affix"
    | 
      ## (abbreviation) an entry for an abbreviation.
      "abbr"
    | 
      ## a supplemental entry (for use in dictionaries which issue supplements to their main work in which they include updated information about entries).
      "supplemental"
    | 
      ## an entry for a foreign word in a monolingual dictionary.
      "foreign"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.lexicographic.attributes =
  tei_att.datcat.attributes,
  tei_att.lexicographic.normalized.attributes,
  tei_att.lexicographic.attribute.expand,
  tei_att.lexicographic.attribute.split,
  tei_att.lexicographic.attribute.value,
  tei_att.lexicographic.attribute.location,
  tei_att.lexicographic.attribute.mergedIn,
  tei_att.lexicographic.attribute.opt
tei_att.lexicographic.attribute.expand =
  
  ## (expand) gives an expanded form of information presented more concisely in the dictionary
  attribute expand { xsd:string }?
tei_att.lexicographic.attribute.split =
  
  ## (split) gives the list of split values for a merged form
  attribute split { xsd:string }?
tei_att.lexicographic.attribute.value =
  
  ## (value) gives a value which lacks any realization in the printed source text.
  attribute value { xsd:string }?
tei_att.lexicographic.attribute.location =
  [
    a:documentation [
      "(location) indicates an "
      ns1:code [ "<anchor>" ]
      " element typically elsewhere in the document, but possibly in another document, which is the original location of this component."
    ]
  ]
  attribute location {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.lexicographic.attribute.mergedIn =
  
  ## (merged into) gives a reference to another element, where the original appears as a merged form.
  attribute mergedIn {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.lexicographic.attribute.opt =
  
  ## (optional) indicates whether the element is optional or not
  [ a:defaultValue = "false" ] attribute opt { xsd:boolean }?
tei_model.morphLike =
  tei_gram
  | tei_gen
  | tei_number
  | tei_case
  | tei_per
  | tei_tns
  | tei_mood
  | tei_iType
tei_model.morphLike_alternation =
  tei_gram
  | tei_gen
  | tei_number
  | tei_case
  | tei_per
  | tei_tns
  | tei_mood
  | tei_iType
tei_model.morphLike_sequence =
  tei_gram,
  tei_gen,
  tei_number,
  tei_case,
  tei_per,
  tei_tns,
  tei_mood,
  tei_iType
tei_model.morphLike_sequenceOptional =
  tei_gram?,
  tei_gen?,
  tei_number?,
  tei_case?,
  tei_per?,
  tei_tns?,
  tei_mood?,
  tei_iType?
tei_model.morphLike_sequenceOptionalRepeatable =
  tei_gram*,
  tei_gen*,
  tei_number*,
  tei_case*,
  tei_per*,
  tei_tns*,
  tei_mood*,
  tei_iType*
tei_model.morphLike_sequenceRepeatable =
  tei_gram+,
  tei_gen+,
  tei_number+,
  tei_case+,
  tei_per+,
  tei_tns+,
  tei_mood+,
  tei_iType+
tei_model.lexicalRefinement =
  tei_gramGrp | tei_pos | tei_subc | tei_colloc | tei_usg | tei_lbl
tei_model.lexicalRefinement_alternation =
  tei_gramGrp | tei_pos | tei_subc | tei_colloc | tei_usg | tei_lbl
tei_model.lexicalRefinement_sequence =
  tei_gramGrp, tei_pos, tei_subc, tei_colloc, tei_usg, tei_lbl
tei_model.lexicalRefinement_sequenceOptional =
  tei_gramGrp?, tei_pos?, tei_subc?, tei_colloc?, tei_usg?, tei_lbl?
tei_model.lexicalRefinement_sequenceOptionalRepeatable =
  tei_gramGrp*, tei_pos*, tei_subc*, tei_colloc*, tei_usg*, tei_lbl*
tei_model.lexicalRefinement_sequenceRepeatable =
  tei_gramGrp+, tei_pos+, tei_subc+, tei_colloc+, tei_usg+, tei_lbl+
tei_model.gramPart = tei_model.morphLike | tei_model.lexicalRefinement
tei_model.formPart =
  tei_model.gramPart
  | tei_form
  | tei_orth
  | tei_pron
  | tei_hyph
  | tei_syll
  | tei_stress
tei_model.ptrLike.form = tei_oRef | tei_pRef
tei_model.ptrLike.form_alternation = tei_oRef | tei_pRef
tei_model.ptrLike.form_sequence = tei_oRef, tei_pRef
tei_model.ptrLike.form_sequenceOptional = tei_oRef?, tei_pRef?
tei_model.ptrLike.form_sequenceOptionalRepeatable = tei_oRef*, tei_pRef*
tei_model.ptrLike.form_sequenceRepeatable = tei_oRef+, tei_pRef+
tei_superEntry =
  
  ## (super entry) groups a sequence of entries within any kind of lexical resource, such as a dictionary or lexicon which function as a single unit, for example a set of homographs. [9.1. Dictionary Body and Overall Structure]
  element superEntry {
    ((tei_form?, tei_entry+) | tei_dictScrap),
    tei_att.global.attributes,
    tei_att.entryLike.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_entry =
  
  ## (entry) contains a single structured entry in any kind of lexical resource, such as a dictionary or lexicon. [9.1. Dictionary Body and Overall Structure 9.2. The Structure of Dictionary Entries]
  element entry {
    (tei_hom
     | tei_sense
     | tei_pc
     | tei_model.entryPart.top
     | tei_model.global
     | tei_model.ptrLike)+,
    tei_att.global.attributes,
    tei_att.entryLike.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_entryFree =
  
  ## (unstructured entry) contains a single unstructured entry in any kind of lexical resource, such as a dictionary or lexicon. [9.1. Dictionary Body and Overall Structure 9.2. The Structure of Dictionary Entries]
  element entryFree {
    (text
     | tei_model.gLike
     | tei_model.entryPart
     | tei_model.morphLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.entryLike.attributes,
    tei_att.lexicographic.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_hom =
  
  ## (homograph) groups information relating to one homograph within an entry. [9.2. The Structure of Dictionary Entries]
  element hom {
    (tei_sense | tei_pc | tei_model.entryPart.top | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_sense =
  
  ## groups together all information relating to one word sense in a dictionary entry, for example definitions, examples, and translation equivalents. [9.2. The Structure of Dictionary Entries]
  element sense {
    (text
     | tei_model.gLike
     | tei_sense
     | tei_model.entryPart.top
     | tei_model.phrase
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    
    ## gives the nesting depth of this sense.
    attribute level { xsd:nonNegativeInteger }?,
    empty
  }
tei_dictScrap =
  
  ## (dictionary scrap) encloses a part of a dictionary entry in which other phrase-level dictionary elements are freely combined. [9.1. Dictionary Body and Overall Structure 9.2. The Structure of Dictionary Entries]
  element dictScrap {
    (text
     | tei_model.gLike
     | tei_model.entryPart
     | tei_model.morphLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_form =
  
  ## (form information group) groups all the information on the written and spoken forms of one headword. [9.3.1. Information on Written and Spoken Forms]
  element form {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.formPart
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    
    ## classifies form as simple, compound, etc.
    ## Suggested values include: 1] simple; 2] lemma; 3] variant; 4] compound; 5] derivative; 6] inflected; 7] phrase
    attribute type {
      
      ## single free lexical item
      "simple"
      | 
        ## the headword itself
        "lemma"
      | 
        ## a variant form
        "variant"
      | 
        ## word formed from simple lexical items
        "compound"
      | 
        ## word derived from headword
        "derivative"
      | 
        ## word in other than usual dictionary form
        "inflected"
      | 
        ## multiple-word lexical item
        "phrase"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_orth =
  
  ## (orthographic form) gives the orthographic form of a dictionary headword. [9.3.1. Information on Written and Spoken Forms]
  element orth {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    tei_att.partials.attributes,
    tei_att.notated.attributes,
    
    ## gives the type of spelling.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_pron =
  
  ## (pronunciation) contains the pronunciation(s) of the word. [9.3.1. Information on Written and Spoken Forms]
  element pron {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    tei_att.notated.attributes,
    tei_att.partials.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_hyph =
  
  ## (hyphenation) contains a hyphenated form of a dictionary headword, or hyphenation information in some other form. [9.3.1. Information on Written and Spoken Forms]
  element hyph {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_syll =
  
  ## (syllabification) contains the syllabification of the headword. [9.3.1. Information on Written and Spoken Forms]
  element syll {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_stress =
  
  ## (stress) contains the stress pattern for a dictionary headword, if given separately. [9.3.1. Information on Written and Spoken Forms]
  element stress {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_gram =
  
  ## (grammatical information) within an entry in a dictionary or a terminological data file, contains grammatical information relating to a term, word, or form. [9.3.2. Grammatical Information]
  element gram {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    [
      a:documentation [
        "classifies grammatical information provided by "
        ns1:code [ "<gram>" ]
        " according to some convenient and shared typology, ideally one defined in an external reference taxonomy, such as the "
        ns1:a [
          href = "https://www.clarin.eu/content/clarin-concept-registry"
          "CLARIN Concept\x{a}" ~
          "          Registry"
        ]
        ".\x{a}" ~
        "Sample values include: 1] pos (part of speech); 2] gen (gender); 3] num (number); 4] animate; 5] proper"
      ]
    ]
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_gen =
  
  ## (gender) identifies the morphological gender of a lexical item, as given in the dictionary. [9.3.1. Information on Written and Spoken Forms]
  element gen {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_number =
  
  ## (number) indicates grammatical number associated with a form, as given in a dictionary. [9.3.1. Information on Written and Spoken Forms 9.3.2. Grammatical Information]
  element number {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_case =
  
  ## (case) contains grammatical case information given by a dictionary for a given form. [9.3.1. Information on Written and Spoken Forms]
  element case {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_per =
  
  ## (person) contains an indication of the grammatical person (1st, 2nd, 3rd, etc.) associated with a given inflected form in a dictionary. [9.3.1. Information on Written and Spoken Forms]
  element per {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_tns =
  
  ## (tense) indicates the grammatical tense associated with a given inflected form in a dictionary. [9.3.1. Information on Written and Spoken Forms]
  element tns {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_mood =
  
  ## (mood) contains information about the grammatical mood of verbs (e.g. indicative, subjunctive, imperative). [9.3.1. Information on Written and Spoken Forms]
  element mood {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_iType =
  
  ## (inflectional class) indicates the inflectional class associated with a lexical item. [9.3.1. Information on Written and Spoken Forms]
  element iType {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    
    ## indicates the type of indicator used to specify the inflection class, when it is necessary to distinguish between the usual abbreviated indications (e.g. inv) and other kinds of indicators, such as special codes referring to conjugation patterns, etc.
    ## Sample values include: 1] abbrev; 2] verbTable
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_gramGrp =
  [
    a:documentation [
      "(grammatical information group) groups morpho-syntactic information about a lexical item, e.g. "
      ns1:code [ "<pos>" ]
      ", "
      ns1:code [ "<gen>" ]
      ", "
      ns1:code [ "<number>" ]
      ", "
      ns1:code [ "<case>" ]
      ", or "
      ns1:code [ "<iType>" ]
      " (inflectional class). [9.3.2. Grammatical Information]"
    ]
  ]
  element gramGrp {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.gramPart
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_pos =
  
  ## (part of speech) indicates the part of speech assigned to a dictionary headword such as noun, verb, or adjective. [9.3.2. Grammatical Information]
  element pos {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_subc =
  
  ## (subcategorization) contains subcategorization information (transitive/intransitive, countable/non-countable, etc.) [9.3.2. Grammatical Information]
  element subc {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_colloc =
  
  ## (collocate) contains any sequence of words that co-occur with the headword with significant frequency. [9.3.2. Grammatical Information]
  element colloc {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_def =
  
  ## (definition) contains definition text in a dictionary entry. [9.3.3.1. Definitions]
  element def {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_etym =
  
  ## (etymology) encloses the etymological information in a dictionary entry. [9.3.4. Etymological Information]
  element etym {
    (text
     | tei_model.gLike
     | tei_model.global
     | tei_model.inter
     | tei_model.phrase
     | tei_def
     | tei_etym
     | tei_gramGrp
     | tei_lbl
     | tei_usg
     | tei_xr)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_lang =
  
  ## (language name) contains the name of a language mentioned in etymological or other linguistic discussion. [9.3.4. Etymological Information]
  element lang {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    empty
  }
tei_usg =
  
  ## (usage) contains usage information in a dictionary entry. [9.3.5.2. Usage Information and Other Labels]
  element usg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    
    ## classifies the usage information using any convenient typology.
    ## Sample values include: 1] geo (geographic); 2] time; 3] dom (domain); 4] register (register); 5] style; 6] plev (preference level); 7] lang (language); 8] gram (grammatical); 9] syn (synonym); 10] hyper (hypernym); 11] colloc (collocation); 12] comp (complement); 13] obj (object); 14] subj (subject); 15] verb; 16] hint
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_lbl =
  
  ## (label) contains a label for a form, example, translation, or other piece of information, e.g. abbreviation for, contraction of, literally, approximately, synonyms:, etc. [9.3.1. Information on Written and Spoken Forms 9.3.3.2. Translation Equivalents 9.3.5.3. Cross-References to Other Entries]
  element lbl {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    
    ## classifies the label using any convenient typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_xr =
  
  ## (cross-reference phrase) contains a phrase, sentence, or icon referring the reader to some other location in this or another text. [9.3.5.3. Cross-References to Other Entries]
  element xr {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_usg
     | tei_lbl
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    
    ## indicates the type of cross reference, using any convenient typology.
    ## Sample values include: 1] syn (synonym); 2] etym (etymological); 3] cf (compare or consult); 4] illus (illustration)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_re =
  
  ## (related entry) contains a dictionary entry for a lexical item related to the headword, such as a compound phrase or derived form, embedded inside a larger entry. [9.3.6. Related Entries]
  element re {
    (text
     | tei_model.gLike
     | tei_sense
     | tei_model.entryPart.top
     | tei_model.phrase
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.lexicographic.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_oRef =
  
  ## (orthographic-form reference) in a dictionary example, indicates a reference to the orthographic form(s) of the headword. [9.4. Headword and Pronunciation References]
  element oRef {
    (text | tei_model.gLike | tei_oRef)*,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.lexicographic.attributes,
    tei_att.pointing.attributes,
    tei_att.notated.attributes,
    
    ## indicates the kind of typographic modification made to the headword in the reference.
    ## Sample values include: 1] cap (capital); 2] noHyph (no hyphen)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_pRef =
  
  ## (pronunciation reference) in a dictionary example, indicates a reference to the pronunciation(s) of the headword. [9.4. Headword and Pronunciation References]
  element pRef {
    (text | tei_model.gLike | tei_pRef)*,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.lexicographic.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_att.tableDecoration.attributes =
  tei_att.tableDecoration.attribute.role,
  tei_att.tableDecoration.attribute.rows,
  tei_att.tableDecoration.attribute.cols
tei_att.tableDecoration.attribute.role =
  
  ## (role) indicates the kind of information held in this cell or in each cell of this row.
  ## Suggested values include: 1] label; 2] data
  [ a:defaultValue = "data" ]
  attribute role {
    
    ## labelling or descriptive information only.
    "label"
    | 
      ## data values.
      "data"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.tableDecoration.attribute.rows =
  
  ## (rows) indicates the number of rows occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute rows { xsd:nonNegativeInteger }?
tei_att.tableDecoration.attribute.cols =
  
  ## (columns) indicates the number of columns occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute cols { xsd:nonNegativeInteger }?
tei_table =
  
  ## (table) contains text displayed in tabular form, in rows and columns. [14.1.1. TEI Tables]
  element table {
    ((tei_model.headLike | tei_model.global)*,
     ((tei_row, tei_model.global*)+
      | (tei_model.graphicLike, tei_model.global*)+),
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## (rows) indicates the number of rows in the table.
    attribute rows { xsd:nonNegativeInteger }?,
    
    ## (columns) indicates the number of columns in each row of the table.
    attribute cols { xsd:nonNegativeInteger }?,
    empty
  }
tei_row =
  
  ## (row) contains one row of a table. [14.1.1. TEI Tables]
  element row {
    tei_cell+,
    tei_att.global.attributes,
    tei_att.tableDecoration.attributes,
    empty
  }
tei_cell =
  
  ## (cell) contains one cell of a table. [14.1.1. TEI Tables]
  element cell {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.tableDecoration.attributes,
    empty
  }
tei_formula =
  
  ## (formula) contains a mathematical or other formula. [14.2. FormulÃ¦ and Mathematical Expressions]
  element formula {
    (text | tei_model.graphicLike | tei_model.hiLike)*,
    tei_att.global.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_notatedMusic =
  
  ## encodes the presence of music notation in a text [14.3. Notated Music in Written Text]
  element notatedMusic {
    (tei_model.labelLike
     | tei_model.ptrLike
     | tei_graphic
     | tei_binaryObject
     | tei_seg)*,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_figure =
  
  ## (figure) groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. Specific Elements for Graphic Images]
  element figure {
    (tei_model.headLike
     | tei_model.common
     | tei_figDesc
     | tei_model.graphicLike
     | tei_model.global
     | tei_model.divBottom)*,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content of a graphic figure, for use when documenting an image without displaying it. [14.4. Specific Elements for Graphic Images]
  element figDesc {
    tei_macro.limitedContent, tei_att.global.attributes, empty
  }
tei_model.fsdDeclPart = tei_fsDecl | tei_fsdLink | tei_fLib | tei_fvLib
tei_fsdDecl =
  
  ## (feature system declaration) provides a feature system declaration comprising one or more feature structure declarations or feature structure declaration links. [18.11. Feature System Declaration]
  element fsdDecl {
    tei_model.fsdDeclPart+, tei_att.global.attributes, empty
  }
tei_fsDecl =
  
  ## (feature structure declaration) declares one type of feature structure. [18.11. Feature System Declaration]
  element fsDecl {
    (tei_fsDescr?, tei_fDecl+, tei_fsConstraints?),
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    
    ## gives a name for the type of feature structure being declared.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    [
      a:documentation [
        "gives the name of one or more typed feature structures from which this type inherits feature specifications and constraints; if this type includes a feature specification with the same name as that of any of those specified by this attribute, or if more than one specification of the same name is inherited, then the set of possible values is defined by unification. Similarly, the set of constraints applicable is derived by combining those specified explicitly within this element with those implied by the "
        ns1:code [ "@baseTypes" ]
        " attribute. When no "
        ns1:code [ "@baseTypes" ]
        " attribute is specified, no feature specification or constraint is inherited."
      ]
    ]
    attribute baseTypes {
      list { xsd:Name+ }
    }?,
    empty
  }
tei_fsDescr =
  
  ## (feature system description (in FSD)) describes in prose what is represented by the type of feature structure declared in the enclosing fsDecl. [18.11. Feature System Declaration]
  element fsDescr {
    tei_macro.limitedContent, tei_att.global.attributes, empty
  }
tei_fsdLink =
  
  ## (feature structure declaration link) associates the name of a typed feature structure with a feature structure declaration for it. [18.11. Feature System Declaration]
  element fsdLink {
    empty,
    tei_att.global.attributes,
    [
      a:documentation [
        "identifies the type of feature structure to be documented; this will be the value of the "
        ns1:code [ "@type" ]
        " attribute on at least one feature structure."
      ]
    ]
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    [
      a:documentation [
        "supplies a pointer to a feature structure declaration ("
        ns1:code [ "<fsDecl>" ]
        ") element within the current document or elsewhere."
      ]
    ]
    attribute target {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_fDecl =
  
  ## (feature declaration) declares a single feature, specifying its name, organization, range of allowed values, and optionally its default value. [18.11. Feature System Declaration]
  element fDecl {
    (tei_fDescr?, tei_vRange, tei_vDefault?),
    tei_att.datcat.attributes,
    tei_att.global.attributes,
    [
      a:documentation [
        "a single word which follows the rules defining a legal XML name (see ), indicating the name of the feature being declared; matches the "
        ns1:code [ "@name" ]
        " attribute of "
        ns1:code [ "<f>" ]
        " elements in the text."
      ]
    ]
    attribute name { xsd:Name },
    
    ## indicates whether or not the value of this feature may be present.
    [ a:defaultValue = "true" ] attribute optional { xsd:boolean }?,
    empty
  }
tei_fDescr =
  
  ## (feature description (in FSD)) describes in prose what is represented by the feature being declared and its values. [18.11. Feature System Declaration]
  element fDescr {
    tei_macro.limitedContent, tei_att.global.attributes, empty
  }
tei_vRange =
  [
    a:documentation [
      "(value range) defines the range of allowed values for a feature, in the form of an "
      ns1:code [ "<fs>" ]
      ", "
      ns1:code [ "<vAlt>" ]
      ", or primitive value; for the value of an "
      ns1:code [ "<f>" ]
      " to be valid, it must be subsumed by the specified range; if the "
      ns1:code [ "<f>" ]
      " contains multiple values (as sanctioned by the "
      ns1:code [ "@org" ]
      " attribute), then each value must be subsumed by the "
      ns1:code [ "<vRange>" ]
      ". [18.11. Feature System Declaration]"
    ]
  ]
  element vRange {
    tei_model.featureVal, tei_att.global.attributes, empty
  }
tei_vDefault =
  [
    a:documentation [
      "(value default) declares the default value to be supplied when a feature structure does not contain an instance of "
      ns1:code [ "<f>" ]
      " for this name; if unconditional, it is specified as one (or, depending on the value of the "
      ns1:code [ "@org" ]
      " attribute of the enclosing "
      ns1:code [ "<fDecl>" ]
      ") more "
      ns1:code [ "<fs>" ]
      " elements or primitive values; if conditional, it is specified as one or more "
      ns1:code [ "<if>" ]
      " elements; if no default is specified, or no condition matches, the value none is assumed. [18.11. Feature System Declaration]"
    ]
  ]
  element vDefault {
    (tei_model.featureVal+ | tei_if+), tei_att.global.attributes, empty
  }
tei_if =
  
  ## defines a conditional default value for a feature; the condition is specified as a feature structure, and is met if it subsumes the feature structure in the text for which a default value is sought. [18.11. Feature System Declaration]
  element if {
    ((tei_fs | tei_f), tei_then, tei_model.featureVal),
    tei_att.global.attributes,
    empty
  }
tei_then =
  [
    a:documentation [
      "separates the condition from the default in an "
      ns1:code [ "<if>" ]
      ", or the antecedent and the consequent in a "
      ns1:code [ "<cond>" ]
      " element. [18.11. Feature System Declaration]"
    ]
  ]
  element then { empty, tei_att.global.attributes, empty }
tei_fsConstraints =
  
  ## (feature-structure constraints) specifies constraints on the content of valid feature structures. [18.11. Feature System Declaration]
  element fsConstraints {
    (tei_cond | tei_bicond)*, tei_att.global.attributes, empty
  }
tei_cond =
  
  ## (conditional feature-structure constraint) defines a conditional feature-structure constraint; the consequent and the antecedent are specified as feature structures or feature-structure collections; the constraint is satisfied if both the antecedent and the consequent subsume a given feature structure, or if the antecedent does not. [18.11. Feature System Declaration]
  element cond {
    ((tei_fs | tei_f), tei_then, (tei_fs | tei_f)),
    tei_att.global.attributes,
    empty
  }
tei_bicond =
  
  ## (bi-conditional feature-structure constraint) defines a biconditional feature-structure constraint; both consequent and antecedent are specified as feature structures or groups of feature structures; the constraint is satisfied if both subsume a given feature structure, or if both do not. [18.11. Feature System Declaration]
  element bicond {
    ((tei_fs | tei_f), tei_iff, (tei_fs | tei_f)),
    tei_att.global.attributes,
    empty
  }
tei_iff =
  [
    a:documentation [
      "(if and only if) separates the condition from the consequence in a "
      ns1:code [ "<bicond>" ]
      " element. [18.11. Feature System Declaration]"
    ]
  ]
  element iff { empty, tei_att.global.attributes, empty }
tei_fs =
  
  ## (feature structure) represents a feature structure, that is, a collection of feature-value pairs organized as a structural unit. [18.2. Elementary Feature Structures and the Binary
  ## Feature Value]
  element fs {
    tei_f*,
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    
    ## specifies the type of the feature structure.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## (features) references the feature-value specifications making up this feature structure.
    attribute feats {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_f =
  
  ## (feature) represents a feature value specification, that is, the association of a name with a value of any of several different types. [18.2. Elementary Feature Structures and the Binary
  ## Feature Value]
  element f {
    (text | tei_model.featureVal),
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    
    ## a single word which follows the rules defining a legal XML name (see ), providing a name for the feature.
    attribute name { xsd:Name },
    
    ## (feature value) references any element which can be used to represent the value of a feature.
    attribute fVal {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_binary =
  
  ## (binary value) represents the value part of a feature-value specification which can contain either of exactly two possible values. [18.2. Elementary Feature Structures and the Binary
  ## Feature Value]
  element binary {
    empty,
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    
    ## supplies a binary value.
    attribute value { xsd:boolean },
    empty
  }
tei_symbol =
  
  ## (symbolic value) represents the value part of a feature-value specification which contains one of a finite list of symbols. [18.3. Other Atomic Feature Values]
  element symbol {
    empty,
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    
    ## supplies a symbolic value for the feature, one of a finite list that may be specified in a feature declaration.
    attribute value {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    empty
  }
tei_numeric =
  
  ## (numeric value) represents the value part of a feature-value specification which contains a numeric value or range. [18.3. Other Atomic Feature Values]
  element numeric {
    empty,
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    [
      a:documentation [
        "supplies a lower bound for the numeric value represented, and also (if "
        ns1:code [ "@max" ]
        " is not supplied) its upper bound."
      ]
    ]
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    },
    
    ## supplies an upper bound for the numeric value represented.
    attribute max {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    
    ## specifies whether the value represented should be truncated to give an integer value.
    attribute trunc { xsd:boolean }?,
    empty
  }
tei_string =
  
  ## (string value) represents the value part of a feature-value specification which contains a string. [18.3. Other Atomic Feature Values]
  element string {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    empty
  }
tei_vLabel =
  
  ## (value label) represents the value part of a feature-value specification which appears at more than one point in a feature structure. [18.6. Re-entrant Feature Structures]
  element vLabel {
    tei_model.featureVal?,
    tei_att.global.attributes,
    
    ## supplies a name identifying the sharing point.
    attribute name {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    empty
  }
tei_vColl =
  
  ## (collection of values) represents the value part of a feature-value specification which contains multiple values organized as a set, bag, or list. [18.7. Collections as Complex Feature Values]
  element vColl {
    (tei_fs | tei_model.featureVal.single | tei_vColl)*,
    tei_att.global.attributes,
    
    ## (organization) indicates organization of given value or values as set, bag or list.
    attribute org {
      
      ## indicates that the given values are organized as a set.
      "set"
      | 
        ## indicates that the given values are organized as a bag (multiset).
        "bag"
      | 
        ## indicates that the given values are organized as a list.
        "list"
    }?,
    empty
  }
tei_default =
  
  ## (default feature value) represents the value part of a feature-value specification which contains a defaulted value. [18.9. Default Values]
  element default { empty, tei_att.global.attributes, empty }
tei_vAlt =
  
  ## (value alternation) represents the value part of a feature-value specification which contains a set of values, only one of which can be valid. [18.8.1. Alternation]
  element vAlt {
    (tei_model.featureVal, tei_model.featureVal+),
    tei_att.global.attributes,
    empty
  }
tei_vNot =
  
  ## (value negation) represents a feature value which is the negation of its content. [18.8.2. Negation]
  element vNot {
    tei_model.featureVal, tei_att.global.attributes, empty
  }
tei_vMerge =
  [
    a:documentation [
      "(merged collection of values) represents a feature value which is the result of merging together the feature values contained by its children, using the organization specified by the "
      ns1:code [ "@org" ]
      " attribute. [18.8.3. Collection of Values]"
    ]
  ]
  element vMerge {
    tei_model.featureVal+,
    tei_att.global.attributes,
    
    ## indicates the organization of the resulting merged values as set, bag or list.
    attribute org {
      
      ## indicates that the resulting values are organized as a set.
      "set"
      | 
        ## indicates that the resulting values are organized as a bag (multiset).
        "bag"
      | 
        ## indicates that the resulting values are organized as a list.
        "list"
    }?,
    empty
  }
tei_fLib =
  [
    a:documentation [
      "(feature library) assembles a library of "
      ns1:code [ "<f>" ]
      " (feature) elements. [18.4. Feature Libraries and Feature-Value Libraries]"
    ]
  ]
  element fLib { tei_f+, tei_att.global.attributes, empty }
tei_fvLib =
  
  ## (feature-value library) assembles a library of reusable feature value elements (including complete feature structures). [18.4. Feature Libraries and Feature-Value Libraries]
  element fvLib {
    tei_model.featureVal*, tei_att.global.attributes, empty
  }
tei_att.gaijiProp.attributes =
  tei_att.gaijiProp.attribute.name,
  tei_att.gaijiProp.attribute.value,
  tei_att.gaijiProp.attribute.version
tei_att.gaijiProp.attribute.name =
  
  ## provides the name of the character or glyph property being defined.
  attribute name { xsd:NCName }
tei_att.gaijiProp.attribute.value =
  
  ## provides the value of the character or glyph property being defined.
  attribute value { xsd:string }
tei_att.gaijiProp.attribute.version =
  
  ## specifies the version number of the Unicode Standard in which this property name is defined.
  ## Suggested values include: 1] 1.0.1; 2] 1.1; 3] 2.0; 4] 2.1; 5] 3.0; 6] 3.1; 7] 3.2; 8] 4.0; 9] 4.1; 10] 5.0; 11] 5.1; 12] 5.2; 13] 6.0; 14] 6.1; 15] 6.2; 16] 6.3; 17] 7.0; 18] 8.0; 19] 9.0; 20] 10.0; 21] 11.0; 22] 12.0; 23] 12.1; 24] 13.0; 25] 14.0; 26] 15.0; 27] unassigned
  attribute version {
    
    ##
    "1.0.1"
    | 
      ##
      "1.1"
    | 
      ##
      "2.0"
    | 
      ##
      "2.1"
    | 
      ##
      "3.0"
    | 
      ##
      "3.1"
    | 
      ##
      "3.2"
    | 
      ##
      "4.0"
    | 
      ##
      "4.1"
    | 
      ##
      "5.0"
    | 
      ##
      "5.1"
    | 
      ##
      "5.2"
    | 
      ##
      "6.0"
    | 
      ##
      "6.1"
    | 
      ##
      "6.2"
    | 
      ##
      "6.3"
    | 
      ##
      "7.0"
    | 
      ##
      "8.0"
    | 
      ##
      "9.0"
    | 
      ##
      "10.0"
    | 
      ##
      "11.0"
    | 
      ##
      "12.0"
    | 
      ##
      "12.1"
    | 
      ##
      "13.0"
    | 
      ##
      "14.0"
    | 
      ##
      "15.0"
    | 
      ##
      "unassigned"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_g =
  
  ## (character or glyph) represents a glyph, or a non-standard character. [5. Characters, Glyphs, and Writing Modes]
  element g {
    text,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## points to a description of the character or glyph intended.
    attribute ref {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_charDecl =
  
  ## (character declarations) provides information about nonstandard characters and glyphs. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element charDecl {
    (tei_desc?, (tei_char | tei_glyph)+),
    tei_att.global.attributes,
    empty
  }
tei_char =
  
  ## (character) provides descriptive information about a character. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element char {
    (tei_unicodeProp
     | tei_unihanProp
     | tei_localProp
     | tei_mapping
     | tei_figure
     | tei_model.graphicLike
     | tei_model.noteLike
     | tei_model.descLike)*,
    tei_att.global.attributes,
    empty
  }
tei_glyph =
  
  ## (character glyph) provides descriptive information about a character glyph. [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element glyph {
    (tei_unicodeProp
     | tei_unihanProp
     | tei_localProp
     | tei_mapping
     | tei_figure
     | tei_model.graphicLike
     | tei_model.noteLike
     | tei_model.descLike)*,
    tei_att.global.attributes,
    empty
  }
tei_localProp =
  
  ## (locally defined property) provides a locally defined character (or glyph) property. [5.2.1. Character Properties]
  element localProp {
    empty,
    tei_att.global.attributes,
    tei_att.gaijiProp.attributes,
    empty
  }
tei_mapping =
  [
    a:documentation [
      "(character mapping) contains one or more characters which are related to the parent character or glyph in some respect, as specified by the "
      ns1:code [ "@type" ]
      " attribute. [5.2. Markup Constructs for Representation of Characters and Glyphs]"
    ]
  ]
  element mapping {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_unihanProp =
  
  ## (unihan property) holds the name and value of a normative or informative Unihan character (or glyph) property as part of its attributes. [5.2.1. Character Properties]
  element unihanProp {
    empty,
    tei_att.global.attributes,
    tei_att.gaijiProp.attribute.version,
    
    ## specifies the normalized name of a unicode han database (Unihan) property
    attribute name {
      
      ##
      "kZVariant"
      | 
        ##
        "kAccountingNumeric"
      | 
        ##
        "kBigFive"
      | 
        ##
        "kCCCII"
      | 
        ##
        "kCNS1986"
      | 
        ##
        "kCNS1992"
      | 
        ##
        "kCangjie"
      | 
        ##
        "kCantonese"
      | 
        ##
        "kCheungBauer"
      | 
        ##
        "kCheungBauerIndex"
      | 
        ##
        "kCihaiT"
      | 
        ##
        "kCompatibilityVariant"
      | 
        ##
        "kCowles"
      | 
        ##
        "kDaeJaweon"
      | 
        ##
        "kDefinition"
      | 
        ##
        "kEACC"
      | 
        ##
        "kFenn"
      | 
        ##
        "kFennIndex"
      | 
        ##
        "kFourCornerCode"
      | 
        ##
        "kFrequency"
      | 
        ##
        "kGB0"
      | 
        ##
        "kGB1"
      | 
        ##
        "kGB3"
      | 
        ##
        "kGB5"
      | 
        ##
        "kGB7"
      | 
        ##
        "kGB8"
      | 
        ##
        "kGSR"
      | 
        ##
        "kGradeLevel"
      | 
        ##
        "kHDZRadBreak"
      | 
        ##
        "kHKGlyph"
      | 
        ##
        "kHKSCS"
      | 
        ##
        "kHanYu"
      | 
        ##
        "kHangul"
      | 
        ##
        "kHanyuPinlu"
      | 
        ##
        "kHanyuPinyin"
      | 
        ##
        "kIBMJapan"
      | 
        ##
        "kIICore"
      | 
        ##
        "kIRGDaeJaweon"
      | 
        ##
        "kIRGDaiKanwaZiten"
      | 
        ##
        "kIRGHanyuDaZidian"
      | 
        ##
        "kIRGKangXi"
      | 
        ##
        "kIRG_GSource"
      | 
        ##
        "kIRG_HSource"
      | 
        ##
        "kIRG_JSource"
      | 
        ##
        "kIRG_KPSource"
      | 
        ##
        "kIRG_KSource"
      | 
        ##
        "kIRG_MSource"
      | 
        ##
        "kIRG_TSource"
      | 
        ##
        "kIRG_USource"
      | 
        ##
        "kIRG_VSource"
      | 
        ##
        "kJIS0213"
      | 
        ##
        "kJa"
      | 
        ##
        "kJapaneseKun"
      | 
        ##
        "kJapaneseOn"
      | 
        ##
        "kJinmeiyoKanji"
      | 
        ##
        "kJis0"
      | 
        ##
        "kJis1"
      | 
        ##
        "kJoyoKanji"
      | 
        ##
        "kKPS0"
      | 
        ##
        "kKPS1"
      | 
        ##
        "kKSC0"
      | 
        ##
        "kKSC1"
      | 
        ##
        "kKangXi"
      | 
        ##
        "kKarlgren"
      | 
        ##
        "kKorean"
      | 
        ##
        "kKoreanEducationHanja"
      | 
        ##
        "kKoreanName"
      | 
        ##
        "kLau"
      | 
        ##
        "kMainlandTelegraph"
      | 
        ##
        "kMandarin"
      | 
        ##
        "kMatthews"
      | 
        ##
        "kMeyerWempe"
      | 
        ##
        "kMorohashi"
      | 
        ##
        "kNelson"
      | 
        ##
        "kOtherNumeric"
      | 
        ##
        "kPhonetic"
      | 
        ##
        "kPrimaryNumeric"
      | 
        ##
        "kPseudoGB1"
      | 
        ##
        "kRSAdobe_Japan1_6"
      | 
        ##
        "kRSJapanese"
      | 
        ##
        "kRSKanWa"
      | 
        ##
        "kRSKangXi"
      | 
        ##
        "kRSKorean"
      | 
        ##
        "kRSUnicode"
      | 
        ##
        "kSBGY"
      | 
        ##
        "kSemanticVariant"
      | 
        ##
        "kSimplifiedVariant"
      | 
        ##
        "kSpecializedSemanticVariant"
      | 
        ##
        "kTGH"
      | 
        ##
        "kTaiwanTelegraph"
      | 
        ##
        "kTang"
      | 
        ##
        "kTotalStrokes"
      | 
        ##
        "kTraditionalVariant"
      | 
        ##
        "kVietnamese"
      | 
        ##
        "kXHC1983"
      | 
        ##
        "kXerox"
    },
    
    ## specifies the value of a named Unihan property
    attribute value {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    empty
  }
tei_unicodeProp =
  
  ## (unicode property) provides a Unicode property for a character (or glyph). [5.2.1. Character Properties]
  element unicodeProp {
    empty,
    tei_att.global.attributes,
    tei_att.gaijiProp.attribute.version,
    
    ## specifies the normalized name of a Unicode property.
    attribute name {
      
      ##
      "Age"
      | 
        ##
        "AHex"
      | 
        ##
        "Alpha"
      | 
        ##
        "Alphabetic"
      | 
        ##
        "ASCII_Hex_Digit"
      | 
        ##
        "bc"
      | 
        ##
        "Bidi_C"
      | 
        ##
        "Bidi_Class"
      | 
        ##
        "Bidi_Control"
      | 
        ##
        "Bidi_M"
      | 
        ##
        "Bidi_Mirrored"
      | 
        ##
        "Bidi_Mirroring_Glyph"
      | 
        ##
        "Bidi_Paired_Bracket"
      | 
        ##
        "Bidi_Paired_Bracket_Type"
      | 
        ##
        "blk"
      | 
        ##
        "Block"
      | 
        ##
        "bmg"
      | 
        ##
        "bpb"
      | 
        ##
        "bpt"
      | 
        ##
        "Canonical_Combining_Class"
      | 
        ##
        "Case_Folding"
      | 
        ##
        "Case_Ignorable"
      | 
        ##
        "Cased"
      | 
        ##
        "ccc"
      | 
        ##
        "CE"
      | 
        ##
        "cf"
      | 
        ##
        "Changes_When_Casefolded"
      | 
        ##
        "Changes_When_Casemapped"
      | 
        ##
        "Changes_When_Lowercased"
      | 
        ##
        "Changes_When_NFKC_Casefolded"
      | 
        ##
        "Changes_When_Titlecased"
      | 
        ##
        "Changes_When_Uppercased"
      | 
        ##
        "CI"
      | 
        ##
        "Comp_Ex"
      | 
        ##
        "Composition_Exclusion"
      | 
        ##
        "CWCF"
      | 
        ##
        "CWCM"
      | 
        ##
        "CWKCF"
      | 
        ##
        "CWL"
      | 
        ##
        "CWT"
      | 
        ##
        "CWU"
      | 
        ##
        "Dash"
      | 
        ##
        "Decomposition_Mapping"
      | 
        ##
        "Decomposition_Type"
      | 
        ##
        "Default_Ignorable_Code_Point"
      | 
        ##
        "Dep"
      | 
        ##
        "Deprecated"
      | 
        ##
        "DI"
      | 
        ##
        "Dia"
      | 
        ##
        "Diacritic"
      | 
        ##
        "dm"
      | 
        ##
        "dt"
      | 
        ##
        "ea"
      | 
        ##
        "East_Asian_Width"
      | 
        ##
        "EqUIdeo"
      | 
        ##
        "Equivalent_Unified_Ideograph"
      | 
        ##
        "Expands_On_NFC"
      | 
        ##
        "Expands_On_NFD"
      | 
        ##
        "Expands_On_NFKC"
      | 
        ##
        "Expands_On_NFKD"
      | 
        ##
        "Ext"
      | 
        ##
        "Extender"
      | 
        ##
        "FC_NFKC"
      | 
        ##
        "FC_NFKC_Closure"
      | 
        ##
        "Full_Composition_Exclusion"
      | 
        ##
        "gc"
      | 
        ##
        "GCB"
      | 
        ##
        "General_Category"
      | 
        ##
        "Gr_Base"
      | 
        ##
        "Gr_Ext"
      | 
        ##
        "Gr_Link"
      | 
        ##
        "Grapheme_Base"
      | 
        ##
        "Grapheme_Cluster_Break"
      | 
        ##
        "Grapheme_Extend"
      | 
        ##
        "Grapheme_Link"
      | 
        ##
        "Hangul_Syllable_Type"
      | 
        ##
        "Hex"
      | 
        ##
        "Hex_Digit"
      | 
        ##
        "hst"
      | 
        ##
        "Hyphen"
      | 
        ##
        "ID_Continue"
      | 
        ##
        "ID_Start"
      | 
        ##
        "IDC"
      | 
        ##
        "Ideo"
      | 
        ##
        "Ideographic"
      | 
        ##
        "IDS"
      | 
        ##
        "IDS_Binary_Operator"
      | 
        ##
        "IDS_Trinary_Operator"
      | 
        ##
        "IDSB"
      | 
        ##
        "IDST"
      | 
        ##
        "Indic_Positional_Category"
      | 
        ##
        "Indic_Syllabic_Category"
      | 
        ##
        "InPC"
      | 
        ##
        "InSC"
      | 
        ##
        "isc"
      | 
        ##
        "ISO_Comment"
      | 
        ##
        "Jamo_Short_Name"
      | 
        ##
        "jg"
      | 
        ##
        "Join_C"
      | 
        ##
        "Join_Control"
      | 
        ##
        "Joining_Group"
      | 
        ##
        "Joining_Type"
      | 
        ##
        "JSN"
      | 
        ##
        "jt"
      | 
        ##
        "kAccountingNumeric"
      | 
        ##
        "kCompatibilityVariant"
      | 
        ##
        "kIICore"
      | 
        ##
        "kIRG_GSource"
      | 
        ##
        "kIRG_HSource"
      | 
        ##
        "kIRG_JSource"
      | 
        ##
        "kIRG_KPSource"
      | 
        ##
        "kIRG_KSource"
      | 
        ##
        "kIRG_MSource"
      | 
        ##
        "kIRG_TSource"
      | 
        ##
        "kIRG_USource"
      | 
        ##
        "kIRG_VSource"
      | 
        ##
        "kOtherNumeric"
      | 
        ##
        "kPrimaryNumeric"
      | 
        ##
        "kRSUnicode"
      | 
        ##
        "lb"
      | 
        ##
        "lc"
      | 
        ##
        "Line_Break"
      | 
        ##
        "LOE"
      | 
        ##
        "Logical_Order_Exception"
      | 
        ##
        "Lower"
      | 
        ##
        "Lowercase"
      | 
        ##
        "Lowercase_Mapping"
      | 
        ##
        "Math"
      | 
        ##
        "na"
      | 
        ##
        "na1"
      | 
        ##
        "Name"
      | 
        ##
        "Name_Alias"
      | 
        ##
        "NChar"
      | 
        ##
        "NFC_QC"
      | 
        ##
        "NFC_Quick_Check"
      | 
        ##
        "NFD_QC"
      | 
        ##
        "NFD_Quick_Check"
      | 
        ##
        "NFKC_Casefold"
      | 
        ##
        "NFKC_CF"
      | 
        ##
        "NFKC_QC"
      | 
        ##
        "NFKC_Quick_Check"
      | 
        ##
        "NFKD_QC"
      | 
        ##
        "NFKD_Quick_Check"
      | 
        ##
        "Noncharacter_Code_Point"
      | 
        ##
        "nt"
      | 
        ##
        "Numeric_Type"
      | 
        ##
        "Numeric_Value"
      | 
        ##
        "nv"
      | 
        ##
        "OAlpha"
      | 
        ##
        "ODI"
      | 
        ##
        "OGr_Ext"
      | 
        ##
        "OIDC"
      | 
        ##
        "OIDS"
      | 
        ##
        "OLower"
      | 
        ##
        "OMath"
      | 
        ##
        "Other_Alphabetic"
      | 
        ##
        "Other_Default_Ignorable_Code_Point"
      | 
        ##
        "Other_Grapheme_Extend"
      | 
        ##
        "Other_ID_Continue"
      | 
        ##
        "Other_ID_Start"
      | 
        ##
        "Other_Lowercase"
      | 
        ##
        "Other_Math"
      | 
        ##
        "Other_Uppercase"
      | 
        ##
        "OUpper"
      | 
        ##
        "Pat_Syn"
      | 
        ##
        "Pat_WS"
      | 
        ##
        "Pattern_Syntax"
      | 
        ##
        "Pattern_White_Space"
      | 
        ##
        "PCM"
      | 
        ##
        "Prepended_Concatenation_Mark"
      | 
        ##
        "QMark"
      | 
        ##
        "Quotation_Mark"
      | 
        ##
        "Radical"
      | 
        ##
        "Regional_Indicator"
      | 
        ##
        "RI"
      | 
        ##
        "SB"
      | 
        ##
        "sc"
      | 
        ##
        "scf"
      | 
        ##
        "Script"
      | 
        ##
        "Script_Extensions"
      | 
        ##
        "scx"
      | 
        ##
        "SD"
      | 
        ##
        "Sentence_Break"
      | 
        ##
        "Sentence_Terminal"
      | 
        ##
        "Simple_Case_Folding"
      | 
        ##
        "Simple_Lowercase_Mapping"
      | 
        ##
        "Simple_Titlecase_Mapping"
      | 
        ##
        "Simple_Uppercase_Mapping"
      | 
        ##
        "slc"
      | 
        ##
        "Soft_Dotted"
      | 
        ##
        "stc"
      | 
        ##
        "STerm"
      | 
        ##
        "suc"
      | 
        ##
        "tc"
      | 
        ##
        "Term"
      | 
        ##
        "Terminal_Punctuation"
      | 
        ##
        "Titlecase_Mapping"
      | 
        ##
        "uc"
      | 
        ##
        "UIdeo"
      | 
        ##
        "Unicode_1_Name"
      | 
        ##
        "Unified_Ideograph"
      | 
        ##
        "Upper"
      | 
        ##
        "Uppercase"
      | 
        ##
        "Uppercase_Mapping"
      | 
        ##
        "Variation_Selector"
      | 
        ##
        "Vertical_Orientation"
      | 
        ##
        "vo"
      | 
        ##
        "VS"
      | 
        ##
        "WB"
      | 
        ##
        "White_Space"
      | 
        ##
        "Word_Break"
      | 
        ##
        "WSpace"
      | 
        ##
        "XID_Continue"
      | 
        ##
        "XID_Start"
      | 
        ##
        "XIDC"
      | 
        ##
        "XIDS"
      | 
        ##
        "XO_NFC"
      | 
        ##
        "XO_NFD"
      | 
        ##
        "XO_NFKC"
      | 
        ##
        "XO_NFKD"
    },
    
    ## specifies the value of a named Unicode property.
    attribute value { xsd:string },
    empty
  }
tei_att.global.linking.attributes =
  tei_att.global.linking.attribute.corresp,
  tei_att.global.linking.attribute.synch,
  tei_att.global.linking.attribute.sameAs,
  tei_att.global.linking.attribute.copyOf,
  tei_att.global.linking.attribute.next,
  tei_att.global.linking.attribute.prev,
  tei_att.global.linking.attribute.exclude,
  tei_att.global.linking.attribute.select
tei_att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current element.
  attribute synch {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current element.
  attribute sameAs {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a copy.
  attribute copyOf {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which the current element is part.
  attribute next {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation with the current element.
  attribute exclude {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is selected, the ambiguity or uncertainty is marked as resolved. If more than one alternant is selected, the degree of ambiguity or uncertainty is marked as reduced by the number of alternants not selected.
  attribute select {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_link =
  
  ## (link) defines an association or hypertextual link among elements or passages, of some type not more precisely specifiable by other elements. [16.1. Links]
  element link {
    empty
    >> sch:pattern [
         id = "myTEI-link-linkTargets3-constraint-assert-31"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:link"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(normalize-space(@target),' ')"
             "You must supply at least two values for @target or  on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_linkGrp =
  
  ## (link group) defines a collection of associations or hypertextual links. [16.1. Links]
  element linkGrp {
    (tei_model.descLike*, (tei_link | tei_ptr)+),
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    empty
  }
tei_ab =
  
  ## (anonymous block) contains any component-level unit of text, acting as a container for phrase or inter level elements analogous to, but without the same constraints as, a paragraph. [16.3. Blocks, Segments, and Anchors]
  element ab {
    tei_macro.abContent
    >> sch:pattern [
         id =
           "myTEI-ab-abstractModel-structure-ab-in-l-or-lg-constraint-report-22"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not( ancestor::tei:floatingText |parent::tei:figure |parent::tei:note )"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level divisions such as p or ab, unless ab is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    tei_att.fragmentable.attributes,
    tei_att.written.attributes,
    empty
  }
tei_anchor =
  
  ## (anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element. [8.4.2. Synchronization and Overlap 16.5. Correspondence and Alignment]
  element anchor {
    empty, tei_att.global.attributes, tei_att.typed.attributes, empty
  }
tei_seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_when =
  
  ## indicates a point in time either relative to other elements in the same timeline tag, or absolutely. [16.4.2. Placing Synchronous Events in Time]
  element when {
    empty,
    tei_att.global.attributes,
    
    ## supplies an absolute value for the time.
    attribute absolute {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    [
      a:documentation [
        "specifies the unit of time in which the "
        ns1:code [ "@interval" ]
        " value is expressed, if this is not inherited from the parent "
        ns1:code [ "<timeline>" ]
        ".\x{a}" ~
        "Suggested values include: 1] d (days); 2] h (hours); 3] min (minutes); 4] s (seconds); 5] ms (milliseconds)"
      ]
    ]
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies a time interval either as a number or as one of the keywords defined by the datatype teidata.interval
    attribute interval {
      xsd:float
      | (
         ##
         "regular"
         | 
           ##
           "irregular"
         | 
           ##
           "unknown")
    }?,
    [
      a:documentation [
        "identifies the reference point for determining the time of the current "
        ns1:code [ "<when>" ]
        " element, which is obtained by adding the interval to the time of the reference point."
      ]
    ]
    attribute since {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_timeline =
  
  ## (timeline) provides a set of ordered points in time which can be linked to elements of a spoken text to create a temporal alignment of that text. [16.4.2. Placing Synchronous Events in Time]
  element timeline {
    tei_when+,
    tei_att.global.attributes,
    
    ## designates the origin of the timeline, i.e. the time at which it begins.
    attribute origin {
      xsd:anyURI { pattern = "\S+" }
    }?,
    [
      a:documentation [
        "specifies the unit of time corresponding to the "
        ns1:code [ "@interval" ]
        " value of the timeline or of its constituent points in time.\x{a}" ~
        "Suggested values include: 1] d (days); 2] h (hours); 3] min (minutes); 4] s (seconds); 5] ms (milliseconds)"
      ]
    ]
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies a time interval either as a positive integral value or using one of a set of predefined codes.
    attribute interval {
      xsd:float
      | (
         ##
         "regular"
         | 
           ##
           "irregular"
         | 
           ##
           "unknown")
    }?,
    empty
  }
tei_join =
  
  ## (join) identifies a possibly fragmented segment of text, by pointing at the possibly discontiguous elements which compose it. [16.7. Aggregation]
  element join {
    ((tei_model.descLike | tei_model.certLike)*)
    >> sch:pattern [
         id = "myTEI-join-joinTargets3-constraint-assert-32"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "\x{a}" ~
             "You must supply at least two values for @target on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    
    ## specifies the name of an element which this aggregation may be understood to represent.
    attribute result { xsd:Name }?,
    
    ## indicates whether the targets to be joined include the entire element indicated (the entire subtree including its root), or just the children of the target (the branches of the subtree).
    [ a:defaultValue = "root" ]
    attribute scope {
      [
        a:documentation [
          "the rooted subtrees indicated by the "
          ns1:code [ "@target" ]
          " attribute are joined, each subtree become a child of the virtual element created by the join"
        ]
      ]
      "root"
      | [
          a:documentation [
            "the children of the subtrees indicated by the "
            ns1:code [ "@target" ]
            " attribute become the children of the virtual element (i.e. the roots of the subtrees are discarded)"
          ]
        ]
        "branches"
    }?,
    empty
  }
tei_joinGrp =
  [
    a:documentation [
      "(join group) groups a collection of "
      ns1:code [ "<join>" ]
      " elements and possibly pointers. [16.7. Aggregation]"
    ]
  ]
  element joinGrp {
    ((tei_equiv | tei_gloss | tei_model.descLike)*,
     (tei_join | tei_ptr)+),
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    [
      a:documentation [
        "supplies the default value for the "
        ns1:code [ "@result" ]
        " on each "
        ns1:code [ "<join>" ]
        " included within the group."
      ]
    ]
    attribute result { xsd:Name }?,
    empty
  }
tei_alt =
  
  ## (alternation) identifies an alternation or a set of choices among elements or passages. [16.8. Alternation]
  element alt {
    empty,
    tei_att.global.attributes,
    tei_att.pointing.attribute.targetLang,
    tei_att.pointing.attribute.evaluate,
    tei_att.typed.attributes,
    
    ## specifies the destination of the reference by supplying one or more URI References
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" },
        xsd:anyURI { pattern = "\S+" },
        xsd:anyURI { pattern = "\S+" }*
      }
    }?,
    
    ## states whether the alternations gathered in this collection are exclusive or inclusive.
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that at most one of the alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that one or more of the alternatives occur.
        "incl"
    }?,
    [
      a:documentation [
        "If "
        ns1:code [ "@mode" ]
        " is excl, each weight states the probability that the corresponding alternative occurs. If "
        ns1:code [ "@mode" ]
        " is incl each weight states the probability that the corresponding alternative occurs given that at least one of the other alternatives occurs."
      ]
    ]
    attribute weights {
      list { xsd:double, xsd:double, xsd:double* }
    }?,
    empty
  }
tei_altGrp =
  [
    a:documentation [
      "(alternation group) groups a collection of "
      ns1:code [ "<alt>" ]
      " elements and possibly pointers. [16.8. Alternation]"
    ]
  ]
  element altGrp {
    (tei_model.descLike*, (tei_alt | tei_ptr)*),
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    
    ## states whether the alternations gathered in this collection are exclusive or inclusive.
    [ a:defaultValue = "excl" ]
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that at most one of the alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that one or more of the alternatives occur.
        "incl"
    }?,
    empty
  }
tei_standOff =
  
  ## Functions as a container element for linked data, contextual information, and stand-off annotations embedded in a TEI document. [16.10. The standOff Container]
  element standOff {
    (tei_model.standOffPart+)
    >> sch:pattern [
         id =
           "myTEI-standOff-nested_standOff_should_be_typed-constraint-assert-33"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:standOff"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@type or not(ancestor::tei:standOff)"
             "This\x{a}" ~
             "      "
             sch:name [ ]
             " element must have a @type attribute, since it is\x{a}" ~
             "      nested inside a "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_listAnnotation =
  [
    a:documentation [
      "contains a list of annotations, typically encoded as "
      ns1:code [ "<annotation>" ]
      ", "
      ns1:code [ "<annotationBlock>" ]
      ", or "
      ns1:code [ "<note>" ]
      ", possibly organized with nested "
      ns1:code [ "<listAnnotation>" ]
      " elements. [16.10. The standOff Container]"
    ]
  ]
  element listAnnotation {
    (tei_model.headLike*,
     tei_model.labelLike*,
     (tei_model.annotationLike | tei_listAnnotation)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_annotation =
  [
    a:documentation [
      "represents an annotation following the "
      ns1:a [
        href = "#WADM"
        "Web\x{a}" ~
        "      Annotation Data Model"
      ]
      ". [16.10. The standOff Container]"
    ]
  ]
  element annotation {
    (tei_respStmt*,
     tei_revisionDesc*,
     tei_licence*,
     tei_model.annotationPart.body*),
    tei_att.global.attribute.n,
    tei_att.global.attribute.xmllang,
    tei_att.global.attribute.xmlbase,
    tei_att.global.attribute.xmlspace,
    tei_att.global.rendition.attribute.rend,
    tei_att.global.rendition.attribute.style,
    tei_att.global.rendition.attribute.rendition,
    tei_att.global.linking.attribute.corresp,
    tei_att.global.linking.attribute.synch,
    tei_att.global.linking.attribute.sameAs,
    tei_att.global.linking.attribute.copyOf,
    tei_att.global.linking.attribute.next,
    tei_att.global.linking.attribute.prev,
    tei_att.global.linking.attribute.exclude,
    tei_att.global.linking.attribute.select,
    tei_att.global.analytic.attribute.ana,
    tei_att.global.facs.attribute.facs,
    tei_att.global.change.attribute.change,
    tei_att.global.responsibility.attribute.cert,
    tei_att.global.responsibility.attribute.resp,
    tei_att.global.source.attribute.source,
    tei_att.pointing.attribute.targetLang,
    tei_att.pointing.attribute.evaluate,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    
    ## specifies the destination of the reference by supplying one or more URI References
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    },
    
    ##
    attribute motivation {
      list {
        (
         ## intent is to assess the target resource in some way, rather than simply make a comment about it
         "assessing"
         | 
           ## intent is to create a bookmark to the target or part thereof
           "bookmarking"
         | 
           ## intent is to classify the target in some way
           "classifying"
         | 
           ## intent is to comment about the target
           "commenting"
         | 
           ## intent is to describe the target, rather than (for example) comment on it
           "describing"
         | 
           ## intent is to request an edit or a change to the target resource
           "editing"
         | 
           ## intent is to highlight the target resource or a segment thereof
           "highlighting"
         | 
           ## intent is to assign an identity to the target
           "identifying"
         | 
           ## intent is to link to a resource related to the target
           "linking"
         | 
           ## intent is to assign some value or quality to the target
           "moderating"
         | 
           ## intent is to ask a question about the target
           "questioning"
         | 
           ## intent is to reply to a previous statement, either an annotation or another resource
           "replying"
         | 
           ## intent is to associate a tag with the target
           "tagging")+
      }
    }?,
    empty
  }
tei_att.translatable.attributes =
  tei_att.translatable.attribute.versionDate
tei_att.translatable.attribute.versionDate =
  
  ## specifies the date on which the source text was extracted and sent to the translator
  attribute versionDate {
    xsd:date { pattern = "(19[789][0-9]|[2-9][0-9]{3}).*" }
    | xsd:dateTime { pattern = "(19[789][0-9]|[2-9][0-9]{3}).*" }
  }?
tei_att.predicate.attributes = tei_att.predicate.attribute.predicate
tei_att.predicate.attribute.predicate =
  
  ## the condition under which the element bearing this attribute applies, given as an XPath predicate expression.
  attribute predicate { text }?
tei_att.repeatable.attributes =
  tei_att.repeatable.attribute.minOccurs,
  tei_att.repeatable.attribute.maxOccurs
tei_att.repeatable.attribute.minOccurs =
  
  ## (minimum number of occurences) indicates the smallest number of times this component may occur.
  [ a:defaultValue = "1" ]
  attribute minOccurs { xsd:nonNegativeInteger }?
tei_att.repeatable.attribute.maxOccurs =
  
  ## (maximum number of occurences) indicates the largest number of times this component may occur.
  [ a:defaultValue = "1" ]
  attribute maxOccurs {
    xsd:nonNegativeInteger
    | (
       ##
       "unbounded")
  }?
sch:pattern [
  id = "myTEI-att.repeatable-MINandMAXoccurs-constraint-rule-32"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "*[ @minOccurs and @maxOccurs ]"
    "\x{a}" ~
    "         "
    sch:let [ name = "min" value = "@minOccurs cast as xs:integer" ]
    "\x{a}" ~
    "         "
    sch:let [
      name = "max"
      value =
        "if ( normalize-space( @maxOccurs ) eq 'unbounded') then -1 else @maxOccurs cast as xs:integer"
    ]
    "\x{a}" ~
    "         "
    sch:assert [
      test = "$max eq -1 or $max ge $min"
      "@maxOccurs should be greater than or equal to @minOccurs"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "      "
  sch:rule [
    context = "*[ @minOccurs and not( @maxOccurs ) ]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@minOccurs cast as xs:integer lt 2"
      "When @maxOccurs is not specified, @minOccurs must be 0 or 1"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_model.contentPart =
  tei_classRef
  | tei_elementRef
  | tei_macroRef
  | tei_sequence
  | tei_alternate
  | tei_dataRef
  | tei_textNode
  | tei_anyElement
  | tei_empty
tei_att.combinable.attributes =
  tei_att.deprecated.attributes, tei_att.combinable.attribute.mode
tei_att.combinable.attribute.mode =
  
  ## specifies the effect of this declaration on its parent object.
  [ a:defaultValue = "add" ]
  attribute mode {
    
    ## this declaration is part of the current definitions.
    "add"
    | 
      ## the object with the same identifier (and namespace in the case of an element or attribute) as the current one is no longer part of the current definitions
      "delete"
    | 
      ## this declaration changes the object of the same identifier (and namespace in the case of an element or attribute) in the current definition
      "change"
    | 
      ## this declaration replaces the object with the same identifier (and namespace in the case of an element or attribute) in the current definition.
      "replace"
  }?
tei_att.identified.attributes =
  tei_att.combinable.attributes,
  tei_att.identified.attribute.ident,
  tei_att.identified.attribute.predeclare,
  tei_att.identified.attribute.module
tei_att.identified.attribute.ident =
  
  ## supplies the identifier by which this element may be referenced.
  attribute ident { xsd:Name }
tei_att.identified.attribute.predeclare =
  
  ## says whether this object should be predeclared in the tei infrastructure module.
  [ a:defaultValue = "false" ] attribute predeclare { xsd:boolean }?
tei_att.identified.attribute.module =
  
  ## supplies a name for the module in which this object is to be declared.
  attribute module { xsd:NCName }?
sch:pattern [
  id = "myTEI-att.identified-spec-in-module-constraint-rule-34"
  "\x{a}" ~
  "      "
  sch:rule [
    context =
      "tei:elementSpec[@module]|tei:classSpec[@module]|tei:macroSpec[@module]"
    "\x{a}" ~
    "         "
    sch:assert [
      test =
        "(not(ancestor::tei:schemaSpec | ancestor::tei:TEI | ancestor::tei:teiCorpus)) or (not(@module) or (not(//tei:moduleSpec) and not(//tei:moduleRef)) or (//tei:moduleSpec[@ident = current()/@module]) or (//tei:moduleRef[@key = current()/@module]))"
      "\x{a}" ~
      "        Specification "
      sch:value-of [ select = "@ident" ]
      ': the value of the module attribute ("'
      sch:value-of [ select = "@module" ]
      '") \x{a}' ~
      "should correspond to an existing module, via a moduleSpec or\x{a}" ~
      "      moduleRef"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.deprecated.attributes = tei_att.deprecated.attribute.validUntil
tei_att.deprecated.attribute.validUntil =
  
  ## provides a date before which the construct being defined will not be removed.
  attribute validUntil { xsd:date }?
sch:pattern [
  id =
    "myTEI-att.deprecated-validUntil-deprecation-two-month-warning-constraint-rule-35"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@validUntil]"
    "\x{a}" ~
    "         "
    sch:let [
      name = "advance_warning_period"
      value = "current-date() + xs:dayTimeDuration('P60D')"
    ]
    "\x{a}" ~
    "         "
    sch:let [
      name = "me_phrase"
      value =
        "if (@ident) then concat('The ', @ident ) else concat('This ', local-name(.), ' of ', ancestor::tei:*[@ident][1]/@ident )"
    ]
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@validUntil cast as xs:date ge current-date()"
      "\x{a}" ~
      "            "
      sch:value-of [
        select =
          "concat( $me_phrase, ' construct is outdated (as of ', @validUntil, '); ODD processors may ignore it, and its use is no longer supported' )"
      ]
      "\x{a}" ~
      "         "
    ]
    "\x{a}" ~
    "         "
    sch:assert [
      role = "warning"
      test = "@validUntil cast as xs:date ge $advance_warning_period"
      "\x{a}" ~
      "            "
      sch:value-of [
        select =
          "concat( $me_phrase, ' construct becomes outdated on ', @validUntil )"
      ]
      "\x{a}" ~
      "         "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "myTEI-att.deprecated-validUntil-deprecation-should-be-explained-constraint-rule-36"
  "\x{a}" ~
  "      "
  sch:rule [
    context =
      "tei:*[@validUntil][ not( self::tei:valDesc | self::tei:valList | self::tei:defaultVal | self::tei:remarks )]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "child::tei:desc[ @type eq 'deprecationInfo']"
      "\x{a}" ~
      "              A deprecated construct should include, whenever possible, an explanation, but this "
      sch:value-of [ select = "name(.)" ]
      ' does not have a child <desc type="deprecationInfo">'
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.namespaceable.attributes = tei_att.namespaceable.attribute.ns
tei_att.namespaceable.attribute.ns =
  
  ## (namespace) specifies the namespace to which the element(s) being specified belongs.
  [ a:defaultValue = "http://www.tei-c.org/ns/1.0" ]
  attribute ns {
    xsd:anyURI { pattern = "\S+" }?
  }?
tei_att =
  
  ## (attribute) contains the name of an attribute appearing within running text. [22. Documentation Elements]
  element att {
    xsd:Name,
    tei_att.global.attributes,
    
    ## (scheme) supplies an identifier for the scheme in which this name is defined.
    ## Sample values include: 1] TEI (Text Encoding Initiative); 2] DBK (Docbook); 3] XX (unknown); 4] imaginary (imaginary); 5] XHTML (XHTML); 6] XML (XML); 7] XI (XI)
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_code =
  
  ## contains literal code from some formal language such as a programming language. [22.1.1. Phrase Level Terms]
  element code {
    text,
    tei_att.global.attributes,
    
    ## (formal language) a name identifying the formal language in which the code is expressed
    attribute lang {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_eg =
  
  ## (example) contains any kind of illustrative example. [22.5. Element Specifications 22.5.3. Attribute List Specification]
  element eg { tei_macro.phraseSeq, tei_att.global.attributes, empty }
tei_egXML =
  [
    a:documentation [
      "(example of XML) a single XML fragment demonstrating the use of some XML, such as elements, attributes, or processing instructions, etc., in which the "
      ns1:code [ "<egXML>" ]
      " element functions as the root element. [22.1.1. Phrase Level Terms]"
    ]
  ]
  element teix:egXML {
    (text | anyElement_egXML_2)*,
    tei_att.global.attributes,
    
    ## indicates the intended validity of the example with respect to a schema.
    [ a:defaultValue = "true" ]
    attribute valid {
      
      ## the example is intended to be fully valid, assuming that its root element, or a provided root element, could have been used as a possible root element in the schema concerned.
      "true"
      | 
        ## the example could be transformed into a valid document by inserting any number of valid attributes and child elements anywhere within it; or it is valid against a version of the schema concerned in which the provision of character data, list, element, or attribute values has been made optional.
        "feasible"
      | 
        ## the example is not intended to be valid, and contains deliberate errors.
        "false"
    }?,
    empty
  }
tei_gi =
  
  ## (element name) contains the name (generic identifier) of an element. [22. Documentation Elements 22.5. Element Specifications]
  element gi {
    xsd:Name,
    tei_att.global.attributes,
    
    ## supplies the name of the scheme in which this name is defined.
    ## Sample values include: 1] TEI; 2] DBK (docbook); 3] XX (unknown); 4] Schematron; 5] HTML
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_ident =
  [
    a:documentation [
      "(identifier) contains an identifier or name for an object of some kind in a formal language. "
      ns1:code [ "<ident>" ]
      " is used for tokens such as variable names, class names, type names, function names etc. in formal programming languages. [22.1.1. Phrase Level Terms]"
    ]
  ]
  element ident {
    text, tei_att.global.attributes, tei_att.typed.attributes, empty
  }
tei_tag =
  
  ## (tag) contains text of a complete start- or end-tag, possibly including attribute specifications, but excluding the opening and closing markup delimiter characters. [22. Documentation Elements]
  element tag {
    text,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## indicates the type of XML tag intended
    attribute type {
      
      ## a start-tag, with delimiters < and > is intended
      "start"
      | 
        ## an end-tag, with delimiters </ and > is intended
        "end"
      | 
        ## an empty tag, with delimiters < and /> is intended
        "empty"
      | 
        ## a pi (processing instruction), with delimiters <? and ?> is intended
        "pi"
      | 
        ## a comment, with delimiters <!-- and --> is intended
        "comment"
      | 
        ## a marked-section, with delimiters <[CDATA[ and ]]> is intended
        "ms"
    }?,
    
    ## supplies the name of the schema in which this tag is defined.
    ## Sample values include: 1] TEI (text encoding initiative); 2] DBK (docbook); 3] XX (unknown); 4] Schematron; 5] HTML
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_val =
  
  ## (value) contains a single attribute value. [22. Documentation Elements 22.5.3. Attribute List Specification]
  element val { text, tei_att.global.attributes, empty }
tei_specList =
  
  ## (specification list) marks where a list of descriptions is to be inserted into the prose documentation. [22.1.2. Element and Attribute Descriptions]
  element specList { tei_specDesc+, tei_att.global.attributes, empty }
tei_specDesc =
  
  ## (specification description) indicates that a description of the specified element, class, or macro should be included at this point within a document. [22.1.2. Element and Attribute Descriptions]
  element specDesc {
    empty,
    tei_att.global.attributes,
    
    ## (identifier) supplies the identifier of the documentary element or class for which a description is to be obtained.
    attribute key { xsd:Name },
    
    ## (attributes) supplies attribute names for which descriptions should additionally be obtained.
    attribute atts {
      list { xsd:Name* }
    }?,
    empty
  }
tei_classRef =
  
  ## points to the specification for an attribute or model class which is to be included in a schema [22.6. Class Specifications]
  element classRef {
    empty,
    tei_att.global.attributes,
    tei_att.repeatable.attributes,
    
    ## the identifier used for the required class within the source indicated.
    attribute key { xsd:NCName },
    
    ## indicates how references to this class within a content model should be interpreted.
    attribute expand {
      
      ## any one member of the class may appear
      "alternation"
      | 
        ## a single occurrence of all members of the class may appear in sequence
        "sequence"
      | 
        ## a single occurrence of one or more members of the class may appear in sequence 
        "sequenceOptional"
      | 
        ## one or more occurrences of one or more members of the class may appear in sequence. 
        "sequenceOptionalRepeatable"
      | 
        ## one or more occurrences of all members of the class may appear in sequence
        "sequenceRepeatable"
    }?,
    (
     ## supplies a list of class members which are to be included in the schema being defined.
     attribute include {
       list { xsd:NCName* }
     }?
     | 
       ## supplies a list of class members which are to be excluded from the schema being defined.
       attribute except {
         list { xsd:NCName* }
       }?),
    empty
  }
tei_elementRef =
  
  ## points to the specification for some element which is to be included in a schema [22.2. Modules and Schemas]
  element elementRef {
    empty,
    tei_att.global.attributes,
    tei_att.repeatable.attributes,
    
    ## the identifier used for the required element within the source indicated.
    attribute key { xsd:NCName },
    empty
  }
tei_macroRef =
  
  ## points to the specification for some pattern which is to be included in a schema [22.7. Macro Specifications]
  element macroRef {
    empty,
    tei_att.global.attributes,
    
    ## the identifier used for the required pattern within the source indicated.
    attribute key { xsd:NCName },
    empty
  }
tei_moduleRef =
  
  ## (module reference) references a module which is to be incorporated into a schema. [22.2. Modules and Schemas]
  element moduleRef {
    (tei_content?)
    >> sch:pattern [
         id = "myTEI-moduleRef-modref-constraint-rule-37"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:moduleRef"
           "\x{a}" ~
           "               "
           sch:report [
             test = "* and @key"
             "\x{a}" ~
             "Child elements of "
             sch:name [ ]
             " are only allowed when an external module is being loaded\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    (
     ## specifies a default prefix which will be prepended to all patterns from the imported module
     attribute prefix { xsd:NCName? }?)
    >> sch:pattern [
         id =
           "myTEI-moduleRef-prefix-not-same-prefix-constraint-rule-38"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:moduleRef"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "//*[ not( generate-id(.) eq generate-id( current() ) ) ]/@prefix = @prefix"
             "The prefix attribute\x{a}" ~
             "	    of "
             sch:name [ ]
             " should not match that of any other\x{a}" ~
             "	    element (it would defeat the purpose)"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-moduleRef-prefix-not-except-and-include-constraint-rule-39"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:moduleRef"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@except and @include"
             "It is an error to supply both the @include and @except attributes"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    (
     ## supplies a list of the elements which are to be copied from the specified module into the schema being defined.
     attribute include {
       list { xsd:NCName* }
     }?
     | 
       ## supplies a list of the elements which are not to be copied from the specified module into the schema being defined.
       attribute except {
         list { xsd:NCName* }
       }?),
    (
     ## the name of a TEI module
     attribute key { xsd:NCName }?
     | 
       ## (uniform resource locator) refers to a non-TEI module of RELAX NG code by external location
       attribute url {
         xsd:anyURI { pattern = "\S+" }
       }?),
    empty
  }
tei_moduleSpec =
  
  ## (module specification) documents the structure, content, and purpose of a single module, i.e. a named and externally visible group of declarations. [22.2. Modules and Schemas]
  element moduleSpec {
    ((tei_model.identEquiv | tei_idno | tei_model.descLike)*,
     tei_exemplum*,
     tei_remarks?,
     tei_listRef*),
    tei_att.global.attributes,
    tei_att.identified.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_schemaSpec =
  
  ## (schema specification) generates a TEI-conformant schema and documentation for it. [2.3. The Encoding Description 22.2. Modules and Schemas 23.5.1. Making a Unified ODD]
  element schemaSpec {
    ((tei_model.identEquiv | tei_model.descLike)*,
     (tei_model.oddRef | tei_model.oddDecl | tei_listRef)*),
    tei_att.global.attributes,
    tei_att.identified.attributes,
    tei_att.namespaceable.attributes,
    tei_att.docStatus.attributes,
    
    ## specifies entry points to the schema, i.e. which patterns may be used as the root of documents conforming to it.
    [ a:defaultValue = "TEI" ]
    attribute start {
      list { xsd:Name+ }
    }?,
    
    ## specifies a default prefix which will be prepended to all patterns relating to TEI elements, unless otherwise stated.
    attribute prefix { xsd:NCName? }?,
    
    ## (target language) specifies which language to use when creating the objects in a schema if names for elements or attributes are available in more than one language
    attribute targetLang {
      xsd:language
      | (
         ##
         "")
    }?,
    
    ## (documentation language) specifies which languages to use when creating documentation if the description for an element, attribute, class or macro is available in more than one language
    attribute docLang {
      list {
        (xsd:language
         | (
            ##
            ""))+
      }
    }?,
    
    ## (default namespace
    ##       exclusions) provides a list of namespaces and/or prefixed element names to be excluded by default from anyName in RELAX NG schemas
    [ a:defaultValue = "http://www.tei-c.org/ns/1.0 teix:egXML" ]
    attribute defaultExceptions {
      list {
        (xsd:anyURI { pattern = "[^/\s]+:\S*" }
         | xsd:Name { pattern = ".+:.+" })+
      }
    }?,
    empty
  }
tei_specGrp =
  
  ## (specification group) contains any convenient grouping of specifications for use within the current module. [22.2. Modules and Schemas]
  element specGrp {
    (tei_model.oddDecl
     | tei_model.oddRef
     | tei_model.divPart
     | tei_listRef)*,
    tei_att.global.attributes,
    empty
  }
tei_specGrpRef =
  [
    a:documentation [
      "(reference to a specification group) indicates that the declarations contained by the "
      ns1:code [ "<specGrp>" ]
      " referenced should be inserted at this point. [22.2. Modules and Schemas]"
    ]
  ]
  element specGrpRef {
    empty,
    tei_att.global.attributes,
    
    ## points at the specification group which logically belongs here.
    attribute target {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_elementSpec =
  
  ## (element specification) documents the structure, content, and purpose of a single element type. [22.5. Element Specifications 22. Documentation Elements]
  element elementSpec {
    ((tei_model.identSynonyms | tei_model.descLike)*,
     tei_classes?,
     tei_content?,
     tei_valList?,
     tei_constraintSpec*,
     tei_attList?,
     (tei_model | tei_modelGrp | tei_modelSequence)*,
     tei_exemplum*,
     tei_remarks*,
     tei_listRef*)
    >> sch:pattern [
         id =
           "myTEI-elementSpec-child-constraint-based-on-mode-constraint-rule-40"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:elementSpec[ @mode eq 'delete' ]"
           "\x{a}" ~
           "               "
           sch:report [
             test = "child::*"
             'This elementSpec element has a mode= of "delete" even though it has child elements. Change the mode= to "add", "change", or "replace", or remove the child elements.'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:elementSpec[ @mode = ('add','change','replace') ]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::* | (@* except (@mode, @ident))"
             'This elementSpec element has a mode= of "'
             sch:value-of [ select = "@mode" ]
             '", but does not have any child elements or schema-changing attributes. Specify child elements, use validUntil=, predeclare=, ns=, or prefix=, or change the mode= to "delete".'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.identified.attributes,
    tei_att.namespaceable.attributes,
    
    ## specifies a default prefix which will be prepended to all patterns relating to the element, unless otherwise stated.
    attribute prefix { xsd:NCName? }?,
    empty
  }
tei_classSpec =
  
  ## (class specification) contains reference information for a TEI element class; that is a group of elements which appear together in content models, or which share some common attribute, or both. [22.3. Specification Elements 22.6. Class Specifications]
  element classSpec {
    ((tei_model.identSynonyms | tei_model.descLike)*,
     tei_classes?,
     tei_constraintSpec*,
     tei_attList?,
     tei_exemplum*,
     tei_remarks*,
     tei_listRef*),
    tei_att.global.attributes,
    tei_att.identified.attributes,
    tei_att.typed.attribute.subtype,
    
    ## indicates whether this is a model class or an attribute class
    attribute type {
      
      ## (content model) members of this class appear in the same content models
      "model"
      | 
        ## (attributes) members of this class share common attributes
        "atts"
    },
    
    ## indicates which alternation and sequence instantiations of a model class may be referenced. By default, all variations are permitted.
    attribute generate {
      list {
        (
         ## members of the class are alternatives
         "alternation"
         | 
           ## members of the class are to be provided in sequence
           "sequence"
         | 
           ## members of the class may be provided, in sequence, but are optional
           "sequenceOptional"
         | 
           ## members of the class may be provided one or more times, in sequence, but are optional.
           "sequenceOptionalRepeatable"
         | 
           ## members of the class may be provided one or more times, in sequence
           "sequenceRepeatable"),
        (
         ## members of the class are alternatives
         "alternation"
         | 
           ## members of the class are to be provided in sequence
           "sequence"
         | 
           ## members of the class may be provided, in sequence, but are optional
           "sequenceOptional"
         | 
           ## members of the class may be provided one or more times, in sequence, but are optional.
           "sequenceOptionalRepeatable"
         | 
           ## members of the class may be provided one or more times, in sequence
           "sequenceRepeatable")?,
        (
         ## members of the class are alternatives
         "alternation"
         | 
           ## members of the class are to be provided in sequence
           "sequence"
         | 
           ## members of the class may be provided, in sequence, but are optional
           "sequenceOptional"
         | 
           ## members of the class may be provided one or more times, in sequence, but are optional.
           "sequenceOptionalRepeatable"
         | 
           ## members of the class may be provided one or more times, in sequence
           "sequenceRepeatable")?,
        (
         ## members of the class are alternatives
         "alternation"
         | 
           ## members of the class are to be provided in sequence
           "sequence"
         | 
           ## members of the class may be provided, in sequence, but are optional
           "sequenceOptional"
         | 
           ## members of the class may be provided one or more times, in sequence, but are optional.
           "sequenceOptionalRepeatable"
         | 
           ## members of the class may be provided one or more times, in sequence
           "sequenceRepeatable")?,
        (
         ## members of the class are alternatives
         "alternation"
         | 
           ## members of the class are to be provided in sequence
           "sequence"
         | 
           ## members of the class may be provided, in sequence, but are optional
           "sequenceOptional"
         | 
           ## members of the class may be provided one or more times, in sequence, but are optional.
           "sequenceOptionalRepeatable"
         | 
           ## members of the class may be provided one or more times, in sequence
           "sequenceRepeatable")?
      }
    }?,
    empty
  }
tei_dataSpec =
  
  ## (datatype specification) documents a datatype. [22.3. Specification Elements 22.7. Macro Specifications]
  element dataSpec {
    ((tei_model.identSynonyms | tei_model.descLike)*,
     (tei_content | tei_valList)?,
     tei_constraintSpec*,
     tei_exemplum*,
     tei_remarks*,
     tei_listRef*)
    >> sch:pattern [
         id =
           "myTEI-dataSpec-no_elements_in_data_content-constraint-rule-42"
         "\x{a}" ~
         "            "
         sch:rule [
           role = "warn"
           context = "tei:dataSpec/tei:content"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               ".//tei:anyElement | .//tei:classRef | .//tei:elementRef"
             "\x{a}" ~
             "          A datatype specification should not refer to an element or a class.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.identified.attributes,
    empty
  }
tei_macroSpec =
  
  ## (macro specification) documents the function and implementation of a pattern. [22.3. Specification Elements 22.7. Macro Specifications]
  element macroSpec {
    ((tei_model.identSynonyms | tei_model.descLike)*,
     (tei_content | tei_valList)?,
     tei_constraintSpec*,
     tei_exemplum*,
     tei_remarks*,
     tei_listRef*),
    tei_att.global.attributes,
    tei_att.identified.attributes,
    empty
  }
tei_remarks =
  
  ## (remarks) contains any commentary or discussion about the usage of an element, attribute, class, or entity not otherwise documented within the containing element. [22.5. Element Specifications 22.5.3. Attribute List Specification 22.6. Class Specifications 22.7. Macro Specifications]
  element remarks {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.combinable.attributes,
    tei_att.translatable.attributes,
    
    ## specifies the remark concerned.
    attribute ident { xsd:string }?,
    empty
  }
tei_listRef =
  
  ## (list of references) supplies a list of significant references in the current document or elsewhere.
  element listRef {
    (tei_desc*, tei_model.ptrLike+)
    >> sch:pattern [
         id = "myTEI-listRef-TagDocsNestinglistRef-constraint-rule-43"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "( tei:classSpec | tei:dataSpec | tei:elementSpec | tei:macroSpec | tei:moduleSpec | tei:schemaSpec | tei:specGrp )/tei:listRef"
           "\x{a}" ~
           "               "
           sch:report [
             test = "tei:listRef"
             "In the context of tagset documentation, the listRef element must not self-nest."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-listRef-TagDocslistRefChildren-constraint-rule-44"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "( tei:classSpec | tei:dataSpec | tei:elementSpec | tei:macroSpec | tei:moduleSpec | tei:schemaSpec | tei:specGrp )/tei:listRef/tei:ptr | ( tei:classSpec | tei:dataSpec | tei:elementSpec | tei:macroSpec | tei:moduleSpec | tei:schemaSpec | tei:specGrp )/tei:listRef/tei:ref"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target and not( matches( @target,'\s') )"
             "In the context of tagset documentation, each ptr or ref element inside a listRef must have a target attribute with only 1 pointer as its value."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_exemplum =
  
  ## (exemplum) groups an example demonstrating the use of an element along with optional paragraphs of commentary. [22.5. Element Specifications]
  element exemplum {
    (tei_model.pLike*, (tei_egXML | tei_eg), tei_model.pLike*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.translatable.attributes,
    empty
  }
tei_classes =
  
  ## (classes) specifies all the classes of which the documented element or class is a member or subclass. [22.5. Element Specifications 22.6. Class Specifications]
  element classes {
    tei_memberOf*,
    tei_att.global.attributes,
    
    ## specifies the effect of this declaration on its parent module.
    [ a:defaultValue = "replace" ]
    attribute mode {
      
      ## this declaration changes the declaration of the same name in the current definition
      "change"
      | 
        ## this declaration replaces the declaration of the same name in the current definition
        "replace"
    }?,
    empty
  }
tei_memberOf =
  
  ## specifies class membership of the documented element or class. [22.4.3. Classification of Components]
  element memberOf {
    tei_macro.xtext,
    tei_att.global.attributes,
    
    ## specifies the identifier for a class of which the documented element or class is a member or subclass
    attribute key { xsd:Name }?,
    
    ## specifies the effect of this declaration on its parent module.
    [ a:defaultValue = "add" ]
    attribute mode {
      
      ## this declaration is added to the current definitions
      "add"
      | 
        ## this declaration and all of its children are removed from the current setup
        "delete"
    }?,
    
    ## supplies the maximum number of times the element can occur in elements which use this model class in their content model
    attribute max {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    
    ## supplies the minumum number of times the element must occur in elements which use this model class in their content model
    attribute min {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
tei_equiv =
  
  ## (equivalent) specifies a component which is considered equivalent to the parent element, either by co-reference, or by external link. [3.4.1. Terms and Glosses 22.4.1. Description of Components]
  element equiv {
    empty,
    tei_att.global.attributes,
    tei_att.internetMedia.attributes,
    tei_att.predicate.attributes,
    
    ## a single word which follows the rules defining a legal XML name (see ), naming the underlying concept of which the parent is a representation.
    attribute name { xsd:Name }?,
    
    ## (uniform resource identifier) references the underlying concept of which the parent is a representation by means of some external identifier
    attribute uri {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## references an external script which contains a method to transform instances of this element to canonical TEI
    attribute filter {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_altIdent =
  
  ## (alternate identifier) supplies the recommended XML name for an element, class, attribute, etc. in some language. [3.4.1. Terms and Glosses 22.4.1. Description of Components]
  element altIdent {
    xsd:NCName,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_model =
  
  ## describes the processing intended for a specified element. [22.5.4.1. The TEI processing model]
  element model {
    ((tei_model.identEquiv | tei_model.descLike)*,
     tei_param*,
     tei_outputRendition*)
    >> sch:pattern [
         id = "myTEI-model-no_dup_default_models-constraint-rule-45"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:model[ not( parent::tei:modelSequence ) ][ not( @predicate ) ]"
           "\x{a}" ~
           "               "
           sch:let [
             name = "output"
             value = "normalize-space( @output )"
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "following-sibling::tei:model [ not( @predicate )] [ normalize-space( @output ) eq $output ]"
             "\x{a}" ~
             "          There are 2 (or more) 'model' elements in this '"
             sch:value-of [ select = "local-name(..)" ]
             "'\x{a}" ~
             "          that have no predicate, but are targeted to the same output\x{a}" ~
             '          ("'
             sch:value-of [
               select = "( $output, parent::modelGrp/@output, 'all')[1]"
             ]
             '")'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-model-no_dup_models-constraint-rule-46"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:model[ not( parent::tei:modelSequence ) ][ @predicate ]"
           "\x{a}" ~
           "               "
           sch:let [
             name = "predicate"
             value = "normalize-space( @predicate )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "output"
             value = "normalize-space( @output )"
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "following-sibling::tei:model [ normalize-space( @predicate ) eq $predicate ] [ normalize-space( @output ) eq $output ]"
             "\x{a}" ~
             "          There are 2 (or more) 'model' elements in this\x{a}" ~
             "          '"
             sch:value-of [ select = "local-name(..)" ]
             "' that have\x{a}" ~
             "          the same predicate, and are targeted to the same output\x{a}" ~
             '          ("'
             sch:value-of [
               select = "( $output, parent::modelGrp/@output, 'all')[1]"
             ]
             '")'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.predicate.attributes,
    
    ## names the process or function which this processing model uses in order to produce output.
    ## Suggested values include: 1] alternate; 2] anchor; 3] block; 4] body; 5] break; 6] cell; 7] cit; 8] document; 9] figure; 10] glyph; 11] graphic; 12] heading; 13] index; 14] inline; 15] link; 16] list; 17] listItem; 18] metadata; 19] note; 20] omit; 21] paragraph; 22] row; 23] section; 24] table; 25] text; 26] title
    attribute behaviour {
      
      ## support display of alternative visualisations, for example by displaying the preferred content, by displaying both in parallel, or by toggling between the two.
      "alternate"
      | 
        ## create an identifiable anchor point in the output.
        "anchor"
      | 
        ## create a block structure
        "block"
      | 
        ## create the body of a document.
        "body"
      | 
        ## create a line, column, or page break according to the value of type
        "break"
      | 
        ## create a table cell
        "cell"
      | 
        ## show the content, with an indication of the source
        "cit"
      | 
        ## start a new output document
        "document"
      | 
        ## make a figure with the title as caption
        "figure"
      | 
        ## show a character by looking up reference to a chardesc at the given URI
        "glyph"
      | 
        ## if url is present, uses it to display graphic, else display a placeholder image.
        "graphic"
      | 
        ## creates a heading. 
        "heading"
      | 
        ## generate list according to type.
        "index"
      | 
        ## creates inline element out of content
        "inline"
      | 
        ## create hyperlink
        "link"
      | 
        ## create a list. 
        "list"
      | 
        ## create a list item.
        "listItem"
      | 
        ## create metadata section
        "metadata"
      | 
        ## create a note, often out of line, depending on the value of place; could be margin, footnote, endnote, inline
        "note"
      | 
        ## do nothing, do not process children
        "omit"
      | 
        ## create a paragraph out of content.
        "paragraph"
      | 
        ## create a table row
        "row"
      | 
        ## create a new section of the output document
        "section"
      | 
        ## create a table
        "table"
      | 
        ## create literal text
        "text"
      | 
        ## create document title
        "title"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    
    ## whether to obey any rendition attribute that is present.
    attribute useSourceRendition { xsd:boolean }?,
    
    ## the intended output.
    ## Sample values include: 1] web; 2] print; 3] plain
    attribute output {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## the name of a CSS class which should be associated with this element
    attribute cssClass {
      list { xsd:Name+ }
    }?,
    empty
  }
tei_modelSequence =
  [
    a:documentation [
      "any sequence of model or "
      ns1:code [ "<modelSequence>" ]
      " elements which is to be processed as a single set of actions [22.5.4.7. Model sequence]"
    ]
  ]
  element modelSequence {
    ((tei_model.identEquiv | tei_model.descLike)*,
     (tei_model, tei_model, tei_model*))
    >> sch:pattern [
         id =
           "myTEI-modelSequence-no_outputs_nor_predicates_4_my_kids-constraint-report-31"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:modelSequence"
           "\x{a}" ~
           "               "
           sch:report [
             test = "tei:model[@output]"
             role = "warning"
             "The 'model' children\x{a}" ~
             "      of a 'modelSequence' element inherit the @output attribute of the\x{a}" ~
             "      parent 'modelSequence', and thus should not have their own"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    
    ## the condition under which this model applies given as an XPath Predicate Expression
    attribute predicate { text }?,
    
    ## whether to obey any rendition attribute that is present
    attribute useSourceRendition { xsd:boolean }?,
    
    ## the intended output method
    ## Suggested values include: 1] web; 2] print; 3] plaintext
    attribute output {
      
      ## the output is intended for presentation in a web format
      "web"
      | 
        ## the output is intended for presentation in a print format
        "print"
      | 
        ## the output is intended for presentation in a plain text format
        "plaintext"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_modelGrp =
  [
    a:documentation [
      "(model group) any grouping of "
      ns1:code [ "<model>" ]
      " or "
      ns1:code [ "<modelSequence>" ]
      " elements with a common output method [22.5.4.4. Model Contexts and Outputs]"
    ]
  ]
  element modelGrp {
    ((tei_model.identEquiv | tei_model.descLike)*,
     tei_outputRendition?,
     (tei_modelSequence | tei_model)+),
    tei_att.global.attributes,
    
    ## whether to obey any rendition attribute which is present
    attribute useSourceRendition { xsd:boolean }?,
    
    ## the intended output method
    ## Suggested values include: 1] web; 2] print; 3] plaintext
    attribute output {
      
      ## the output is intended for presentation in a web format
      "web"
      | 
        ## the output is intended for presentation in a print format
        "print"
      | 
        ## the output is intended for presentation in a plain text format
        "plaintext"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_outputRendition =
  
  ## describes the rendering or appearance intended for all occurrences of an element in a specified context for a specified type of output.
  element outputRendition {
    text,
    tei_att.global.attributes,
    
    ## provides a way of defining pseudo-elements, that is, styling rules applicable to specific sub-portions of an element.
    ## Sample values include: 1] first-line; 2] first-letter; 3] before; 4] after
    attribute scope {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_paramList =
  
  ## list of parameter specifications
  element paramList { tei_paramSpec*, tei_att.global.attributes, empty }
tei_paramSpec =
  
  ## supplies specification for one parameter of a model behaviour [22.5.4.8. Defining a processing model]
  element paramSpec {
    (tei_model.identEquiv | tei_model.descLike)*,
    tei_att.global.attributes,
    tei_att.identified.attributes,
    empty
  }
tei_param =
  
  ## provides a parameter for a model behaviour by supplying its name and an XPath expression identifying the location of its content. [22.5.4.5. Behaviours and their parameters]
  element param {
    empty,
    tei_att.global.attributes,
    
    ## a name for the parameter being supplied
    ## Suggested values include: 1] alternate; 2] default; 3] height; 4] id; 5] label; 6] level; 7] link; 8] place; 9] type; 10] url; 11] width
    attribute name {
      [
        a:documentation [
          "when used with behaviour alternate, a parameter of this name supplies one of the pair of possible values; for example the regularized form rather than the original form within a "
          ns1:code [ "<choice>" ]
          " element."
        ]
      ]
      "alternate"
      | [
          a:documentation [
            "when used with behaviour alternate, a parameter of this name supplies one of the pair of possible values; for example the original form rather than the regularized form within a "
            ns1:code [ "<choice>" ]
            " element."
          ]
        ]
        "default"
      | 
        ## when used with behaviour graphic, a parameter of this name supplies a value for the height of the graphic e.g. "300px", "50%".
        "height"
      | 
        ## a parameter of this name should supply a unique identifier for the element being processed; as for example with the anchor behaviour
        "id"
      | 
        ## a parameter of this name should supply an expression to be used to label something, for example `concat('Page ', @n)` for a page break or `@n` for a footnote reference; typically used with the note or break behaviours
        "label"
      | 
        ## when used with the heading behaviour, a parameter of this name supplies a positive integer indicating the hierarchic level of a heading.
        "level"
      | 
        ## when used with the link behaviour, a parameter of this name should supply a URL to be used as the target of a link.
        "link"
      | 
        ## when used with the note behaviour, a parameter of this name should provide a string which describes the intended placement of some text; typical values include "margin", "footnote", "endnote", "inline", "bottom"
        "place"
      | 
        ## a parameter of this name can be used to categorize the specified behaviour in any way; for example the kind of break (when used with the break behaviour) or the kind of index to be generated (if used with the index behaviour) etc.
        "type"
      | 
        ## when used with behaviour graphic, a parameter of this name supplies a a URL indicating the graphic intended.
        "url"
      | 
        ## when used with behaviour graphic, a parameter of this name supplies a value for the width of the graphic e.g. "400px", "70%".
        "width"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    
    ## supplies an XPath expression which when evaluated provides the value for the parameter
    attribute value { text },
    empty
  }
tei_content =
  
  ## (content model) contains a declaration of the intended content model for the element (or other construct) being specified. [22.5. Element Specifications]
  element content {
    (tei_valList | tei_model.contentPart+ | anyElement_content_3+)
    >> sch:pattern [
         id = "myTEI-content-only_1_child_of_content-constraint-rule-47"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:content[ *[2] ]"
           "\x{a}" ~
           "               "
           sch:let [ name = "tot_kids" value = "count( * )" ]
           "\x{a}" ~
           "               "
           sch:let [ name = "tei_kids" value = "count( tei:* )" ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "rng_kids"
             value = "count( rng:* | rna:* )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part01"
             value =
               "'In the near future the <content> element will be limited to 1 and only 1 child element. '"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part02"
             value = "'This <content> element is in '"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part03"
             value =
               "if ( local-name(..) eq 'elementSpec' ) then 'an ' else 'a '"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part04"
             value = "concat( local-name(..), ' with ' )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part05"
             value =
               "if ( parent::tei:moduleRef/@key ) then 'a @key'    else ''"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part06"
             value =
               "if ( parent::tei:moduleRef/@url ) then 'a @url'    else ''"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part07"
             value =
               "if ( parent::tei:*/@ident )       then 'an @ident' else ''"
           ]
           "\x{a}" ~
           "               "
           sch:let [ name = "msg_part08" value = """' of "'""" ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part09"
             value = "../@ident | ../@key | ../@url"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msg_part10"
             value = """concat('" and has ', $tot_kids, ' children,')"""
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "msgs_1to10"
             value =
               "concat( $msg_part01, $msg_part02, $msg_part03, $msg_part04, $msg_part05, $msg_part06, $msg_part07, $msg_part08, $msg_part09, $msg_part10 )"
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "$tei_kids eq $tot_kids"
             role = "warning"
             "\x{a}" ~
             "                  "
             sch:value-of [ select = "$msgs_1to10" ]
             " which could be wrapped in a <sequence> element.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "$rng_kids eq $tot_kids"
             role = "warning"
             "\x{a}" ~
             "                  "
             sch:value-of [ select = "$msgs_1to10" ]
             " which could be wrapped in an <rng:div> element.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "               "
           sch:assert [
             test = "$tei_kids eq $tot_kids  or  $rng_kids eq $tot_kids"
             role = "warning"
             "\x{a}" ~
             "                  "
             sch:value-of [ select = "$msgs_1to10" ]
             " but those children are neither all TEI elements nor\x{a}" ~
             "        all RELAX NG elements, and thus this <content> is invalid and can not be easily rectified.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    
    ## controls whether or not pattern names generated in the corresponding RELAX NG schema source are automatically prefixed to avoid potential nameclashes.
    [ a:defaultValue = "true" ]
    attribute autoPrefix {
      [
        a:documentation [
          "Each name referenced in e.g. an "
          ns1:code [ "<rng:ref>" ]
          " element within a content model is automatically prefixed by the value of the "
          ns1:code [ "@prefix" ]
          " attribute on the current "
          ns1:code [ "<schemaSpec>" ]
          "\x{a}" ~
          "                  "
        ]
      ]
      "true"
      | [
          a:documentation [
            "No prefixes are added: any prefix required by the value of the "
            ns1:code [ "@prefix" ]
            " attribute on the current "
            ns1:code [ "<schemaSpec>" ]
            " must therefore be supplied explicitly, as appropriate."
          ]
        ]
        "false"
    }?,
    empty
  }
tei_sequence =
  
  ## indicates that the constructs referenced by its children form a sequence [22.5.1. Defining Content Models]
  element sequence {
    (tei_model.contentPart+)
    >> sch:pattern [
         id = "myTEI-sequence-sequencechilden-constraint-assert-43"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:sequence"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "count(*)>1"
             "The sequence element must have at least two child elements"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.repeatable.attributes,
    
    ## if false, indicates that component elements of a sequence may occur in any order.
    attribute preserveOrder { xsd:boolean }?,
    empty
  }
tei_alternate =
  
  ## indicates that the constructs referenced by its children form an alternation [22.5.1. Defining Content Models]
  element alternate {
    ((tei_valList | tei_model.contentPart)+)
    >> sch:pattern [
         id = "myTEI-alternate-alternatechilden-constraint-assert-44"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:alternate"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "count(*)>1"
             "The alternate element must have at least two child elements"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.repeatable.attributes,
    empty
  }
tei_constraint =
  
  ## (constraint rules) the formal rules of a constraint [22.5. Element Specifications]
  element constraint {
    (text | anyElement_constraint_4)*, tei_att.global.attributes, empty
  }
tei_constraintSpec =
  
  ## (constraint on schema) contains a formal constraint, typically expressed in a rule-based schema language, to which a construct must conform in order to be considered valid [22.5. Element Specifications]
  element constraintSpec {
    ((tei_model.identSynonyms | tei_model.descLike)*, tei_constraint?)
    >> sch:pattern [
         id =
           "myTEI-constraintSpec-empty-based-on-mode-constraint-rule-48"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:constraintSpec[ @mode eq 'delete']"
           "\x{a}" ~
           "               "
           sch:report [
             test = "child::*"
             'This constraintSpec element has a mode= of "delete" even though it has child elements. Change the mode= to "add", "change", or "replace", or remove the child elements.'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:constraintSpec[ @mode eq 'change']"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::*"
             'This constraintSpec element has a mode= of "change", but does not have any child elements. Specify child elements, or change the mode= to "delete".'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:constraintSpec[ @mode = ('add','replace') ]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::tei:constraint"
             'This constraintSpec element has a mode= of "'
             sch:value-of [ select = "@mode" ]
             """", but does not have a child 'constraint' element. Use a child 'constraint' element or change the mode= to "delete" or "change"."""
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-constraintSpec-sch_no_more-constraint-report-35"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:constraintSpec"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "tei:constraint/sch1x:* and @scheme = ('isoschematron','schematron')"
             "Rules\x{a}" ~
             "        in the Schematron 1.* language must be inside a constraintSpec\x{a}" ~
             "        with a value other than 'schematron' or 'isoschematron' on the\x{a}" ~
             "        scheme attribute"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-constraintSpec-isosch-constraint-rule-51"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:constraintSpec[ @mode = ('add','replace') or not( @mode ) ]"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "tei:constraint/sch:* and not( @scheme eq 'schematron')"
             "Rules\x{a}" ~
             "          in the ISO Schematron language must be inside a constraintSpec\x{a}" ~
             "          with the value 'schematron' on the scheme attribute"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-constraintSpec-needrules-constraint-rule-52"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:macroSpec/tei:constraintSpec[@scheme eq 'schematron']/tei:constraint"
           "\x{a}" ~
           "               "
           sch:report [
             test = "sch:assert|sch:report"
             "An ISO Schematron constraint specification for a macro should not\x{a}" ~
             "        have an 'assert' or 'report' element without a parent 'rule' element"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-constraintSpec-unique-constraintSpec-ident-constraint-rule-53"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:constraintSpec[ @mode eq 'add' or not( @mode ) ]"
           "\x{a}" ~
           "               "
           sch:let [
             name = "myIdent"
             value = "normalize-space(@ident)"
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "preceding::tei:constraintSpec[ normalize-space(@ident) eq $myIdent ]"
             "\x{a}" ~
             "        The @ident of 'constraintSpec' should be unique; this one ("
             sch:value-of [ select = "$myIdent" ]
             ") is the same as that of a previous 'constraintSpec'.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.identified.attributes,
    tei_att.typed.attribute.subtype,
    [
      a:documentation [
        "characterizes the "
        ns1:code [ "<constraintSpec>" ]
        " element in some sense; used to indicate when a "
        ns1:code [ "<constraintSpec>" ]
        " warns about a deprecated construct.\x{a}" ~
        "Suggested values include: 1] deprecationWarning"
      ]
    ]
    attribute type {
      
      ## Indicates that this constraint specification warns that some other construct in the schema is deprecated.
      "deprecationWarning"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    (
     ## supplies the name of the language in which the constraints are defined
     ## Suggested values include: 1] schematron (ISO Schematron)
     attribute scheme {
       
       ## (ISO Schematron) 
       "schematron"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
     }?)
    >> sch:pattern [
         id =
           "myTEI-constraintSpec-scheme-usage_based_on_mode-constraint-rule-54"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:constraintSpec[ @mode = ('add','replace')  or  not( @mode ) ]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@scheme"
             "The @scheme attribute of <constraintSpec> is required when the @mode is "
             sch:value-of [
               select =
                 """if (@mode) then concat('"',@mode,'"') else 'not specified'"""
             ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_attList =
  [
    a:documentation [
      "(attribute list) contains documentation for all the attributes associated with this element, as a series of "
      ns1:code [ "<attDef>" ]
      " elements. [22.5. Element Specifications 22.6. Class Specifications]"
    ]
  ]
  element attList {
    (tei_attRef | tei_attDef | tei_attList)+,
    tei_att.global.attributes,
    
    ## (organization) specifies whether only one (choice) or all (group) of the attributes in the list are available
    [ a:defaultValue = "group" ]
    attribute org {
      
      ## grouped
      "group"
      | 
        ## alternated
        "choice"
    }?,
    empty
  }
tei_attDef =
  
  ## (attribute definition) contains the definition of a single attribute. [22.5.3. Attribute List Specification]
  element attDef {
    ((tei_model.identSynonyms | tei_model.descLike)*,
     tei_datatype?,
     tei_constraintSpec*,
     tei_defaultVal?,
     (tei_valList | tei_valDesc+)?,
     tei_exemplum*,
     tei_remarks*)
    >> sch:ns [
         prefix = "teix"
         uri = "http://www.tei-c.org/ns/Examples"
       ]
    >> sch:pattern [
         id = "myTEI-attDef-attDefContents-constraint-assert-50"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:attDef"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "ancestor::teix:egXML[@valid='feasible'] or @mode eq 'change' or @mode eq 'delete' or tei:datatype or tei:valList[@type='closed']"
             "Attribute: the definition of the @"
             sch:value-of [ select = "@ident" ]
             " attribute in the "
             sch:value-of [ select = "ancestor::*[@ident][1]/@ident" ]
             "\x{a}" ~
             "                  "
             sch:value-of [ select = "' '" ]
             "\x{a}" ~
             "                  "
             sch:value-of [
               select = "local-name(ancestor::*[@ident][1])"
             ]
             " should have a closed valList or a datatype"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "myTEI-attDef-noDefault4Required-constraint-rule-55"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:attDef[@usage eq 'req']"
           "\x{a}" ~
           "               "
           sch:report [
             test = "tei:defaultVal"
             "Since the @"
             sch:value-of [ select = "@ident" ]
             ' attribute is required, it will always be specified. Thus the default value (of "'
             sch:value-of [ select = "normalize-space(tei:defaultVal)" ]
             '") will never be used. Either change the definition of the attribute so it is not required ("rec" or "opt"), or remove the defaultVal element.'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-attDef-defaultIsInClosedList-twoOrMore-constraint-rule-56"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:attDef[ tei:defaultVal and tei:valList[@type eq 'closed'] and tei:datatype[ @maxOccurs > 1 or @minOccurs > 1 or @maxOccurs = 'unbounded' ] ]"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "tokenize(normalize-space(tei:defaultVal),' ') = tei:valList/tei:valItem/@ident"
             "In the "
             sch:value-of [
               select = "local-name(ancestor::*[@ident][1])"
             ]
             " defining\x{a}" ~
             "        "
             sch:value-of [ select = "ancestor::*[@ident][1]/@ident" ]
             " the default value of the\x{a}" ~
             "        @"
             sch:value-of [ select = "@ident" ]
             " attribute is not among the closed list of possible\x{a}" ~
             "        values"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-attDef-defaultIsInClosedList-one-constraint-rule-57"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:attDef[ tei:defaultVal and tei:valList[@type eq 'closed'] and tei:datatype[ not(@maxOccurs) or ( if ( @maxOccurs castable as xs:integer ) then ( @maxOccurs cast as xs:integer eq 1 ) else false() )] ]"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "string(tei:defaultVal) = tei:valList/tei:valItem/@ident"
             "In the "
             sch:value-of [
               select = "local-name(ancestor::*[@ident][1])"
             ]
             " defining\x{a}" ~
             "        "
             sch:value-of [ select = "ancestor::*[@ident][1]/@ident" ]
             " the default value of the\x{a}" ~
             "        @"
             sch:value-of [ select = "@ident" ]
             " attribute is not among the closed list of possible\x{a}" ~
             "        values"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.identified.attributes,
    tei_att.namespaceable.attributes,
    
    ## specifies the optionality of the attribute.
    [ a:defaultValue = "opt" ]
    attribute usage {
      
      ## (required) 
      "req"
      | 
        ## (recommended ) 
        "rec"
      | 
        ## (optional ) 
        "opt"
    }?,
    empty
  }
tei_attRef =
  
  ## (attribute pointer) points to the definition of an attribute or group of attributes. [22.2. Modules and Schemas]
  element attRef {
    empty,
    tei_att.global.attributes,
    
    ## the name of the attribute class
    attribute class { xsd:Name }?,
    
    ## the name of the attribute
    attribute name { xsd:Name }?,
    empty
  }
tei_datatype =
  
  ## (datatype) specifies the declared value for an attribute, by referring to any datatype defined by the chosen schema language. [1.4.2. Datatype Specifications 22.5.3. Attribute List Specification]
  element datatype {
    (tei_dataRef | anyElement_datatype_5),
    tei_att.global.attributes,
    
    ## (minimum number of occurences) indicates the minimum number of times this datatype may occur in an instance of the attribute being defined
    [ a:defaultValue = "1" ]
    attribute minOccurs { xsd:nonNegativeInteger }?,
    
    ## (maximum number of occurences) indicates the maximum number of times this datatype may occur in an instance of the attribute being defined
    [ a:defaultValue = "1" ]
    attribute maxOccurs {
      xsd:nonNegativeInteger
      | (
         ##
         "unbounded")
    }?,
    empty
  }
tei_dataRef =
  
  ## identifies the datatype of an attribute value, either by referencing an item in an externally defined datatype library, or by pointing to a TEI-defined data specification [22.5.3.1. Datatypes]
  element dataRef {
    (tei_dataFacet*)
    >> sch:pattern [
         id = "myTEI-dataRef-restrictDataFacet-constraint-rule-58"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dataRef[tei:dataFacet]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@name"
             role = "nonfatal"
             "Data facets can only be specified for references to datatypes specified by\x{a}" ~
             "          XML Schema Part 2: Datatypes Second Edition â that is, for there to be a 'dataFacet' child there must be a @name attribute."
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "@restriction"
             role = "nonfatal"
             "Data facets and restrictions cannot both be expressed on the same data reference â that is, the @restriction attribute cannot be used when a 'dataFacet' element is present."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-dataRef-restrictAttResctrictionName-constraint-rule-59"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dataRef[@restriction]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@name"
             role = "nonfatal"
             "Restrictions can only be specified for references to datatypes specified by\x{a}" ~
             "          XML Schema Part 2: Datatypes Second Edition â that is, for there to be a @restriction attribute there must be a @name attribute, too."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    (
     ## the identifier used for this datatype specification
     attribute key { xsd:NCName }?
     | [
         a:documentation [
           "the name of a datatype in the list provided by "
           ns1:a [
             href = "#XSD2"
             "XML Schema Part 2: Datatypes Second Edition"
           ]
           "\x{a}" ~
           "                  "
         ]
       ]
       attribute name { xsd:NCName }?
     | 
       ## a pointer to a datatype defined in some datatype library
       attribute ref {
         xsd:anyURI { pattern = "\S+" }
       }?),
    
    ## supplies a string representing a regular expression providing additional constraints on the strings used to represent values of this datatype
    attribute restriction { xsd:token }?,
    empty
  }
tei_dataFacet =
  [
    a:documentation [
      "Restricts the value of the strings used to represent values of a datatype, according to "
      ns1:a [
        href = "#XSD2"
        "XML Schema Part 2: Datatypes Second Edition"
      ]
      ". [22.5.3.1. Datatypes]"
    ]
  ]
  element dataFacet {
    empty,
    tei_att.global.attributes,
    
    ## the name of the facet.
    attribute name {
      
      ##
      "length"
      | 
        ##
        "minLength"
      | 
        ##
        "maxLength"
      | 
        ##
        "pattern"
      | 
        ##
        "enumeration"
      | 
        ##
        "whiteSpace"
      | 
        ##
        "maxInclusive"
      | 
        ##
        "minInclusive"
      | 
        ##
        "maxExclusive"
      | 
        ##
        "minExclusive"
      | 
        ##
        "totalDigits"
      | 
        ##
        "fractionDigits"
    },
    
    ## the facet value.
    attribute value { xsd:string },
    empty
  }
tei_defaultVal =
  
  ## (default value) specifies the default declared value for an attribute. [22.5.3. Attribute List Specification]
  element defaultVal {
    text,
    tei_att.global.attributes,
    tei_att.combinable.attributes,
    empty
  }
tei_valDesc =
  [
    a:documentation [
      "(value description) specifies any semantic or syntactic constraint on the value that an attribute may take, additional to the information carried by the "
      ns1:code [ "<datatype>" ]
      " element. [22.5.3. Attribute List Specification]"
    ]
  ]
  element valDesc {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.translatable.attributes,
    tei_att.combinable.attributes,
    empty
  }
tei_valItem =
  
  ## documents a single value in a predefined list of values. [22.5.3. Attribute List Specification]
  element valItem {
    (tei_model.identSynonyms*,
     (tei_model.descLike+,
      (tei_model.identSynonyms, tei_model.descLike*)*,
      tei_remarks*)?,
     tei_paramList?),
    tei_att.global.attributes,
    tei_att.combinable.attributes,
    
    ## specifies the value concerned.
    attribute ident { xsd:string },
    empty
  }
tei_valList =
  [
    a:documentation [
      "(value list) contains one or more "
      ns1:code [ "<valItem>" ]
      " elements defining possible values. [22.5.3. Attribute List Specification]"
    ]
  ]
  element valList {
    tei_valItem*,
    tei_att.global.attributes,
    tei_att.combinable.attributes,
    
    ## specifies the extensibility of the list of values specified.
    [ a:defaultValue = "open" ]
    attribute type {
      
      ## only the values specified are permitted.
      "closed"
      | 
        ## (semi-open) all the values specified should be supported, but other values are legal and software should have appropriate fallback processing for them.
        "semi"
      | 
        ## the values specified are sample values only.
        "open"
    }?,
    empty
  }
tei_textNode =
  
  ## indicates the presence of a text node in a content model [22. Documentation Elements]
  element textNode { empty, tei_att.global.attributes, empty }
tei_anyElement =
  
  ## indicates the presence of any elements in a content model [22. Documentation Elements]
  element anyElement {
    empty,
    tei_att.global.attributes,
    tei_att.repeatable.attributes,
    
    ## supplies a list of namespaces to one of which the permitted elements must belong. 
    attribute require {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    
    ## supplies a list of namespaces or prefixed element names which are not permitted.
    attribute except {
      list {
        (xsd:anyURI { pattern = "[^/\s]+:\S*" }
         | xsd:Name { pattern = ".+:.+" })+
      }
    }?,
    empty
  }
tei_empty =
  
  ## indicates the presence of an empty node within a content model [22. Documentation Elements]
  element empty { empty, tei_att.global.attributes, empty }
tei_model.rdgLike = tei_rdg
tei_model.rdgPart =
  tei_wit | tei_witStart | tei_witEnd | tei_lacunaStart | tei_lacunaEnd
tei_att.rdgPart.attributes = tei_att.rdgPart.attribute.wit
tei_att.rdgPart.attribute.wit =
  
  ## (witness or witnesses) contains a space-delimited list of one or more sigla indicating the witnesses to this reading beginning or ending at this point.
  attribute wit {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.witnessed.attributes = tei_att.witnessed.attribute.wit
tei_att.witnessed.attribute.wit =
  
  ## (witness or witnesses) contains a space-delimited list of one or more pointers indicating the witnesses which attest to a given reading.
  attribute wit {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.textCritical.attributes =
  tei_att.written.attributes,
  tei_att.textCritical.attribute.type,
  tei_att.textCritical.attribute.cause,
  tei_att.textCritical.attribute.varSeq,
  tei_att.textCritical.attribute.require,
  tei_att.typed.attribute.subtype
tei_att.textCritical.attribute.type =
  
  ## classifies the reading according to some useful typology.
  ## Sample values include: 1] substantive (substantive); 2] orthographic (orthographic)
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.textCritical.attribute.cause =
  
  ## classifies the cause for the variant reading, according to any appropriate typology of possible origins.
  ## Sample values include: 1] homeoteleuton; 2] homeoarchy; 3] paleographicConfusion; 4] haplography; 5] dittography; 6] falseEmendation
  attribute cause {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.textCritical.attribute.varSeq =
  
  ## (variant sequence) provides a number indicating the position of this reading in a sequence, when there is reason to presume a sequence to the variants. 
  attribute varSeq { xsd:nonNegativeInteger }?
tei_att.textCritical.attribute.require =
  
  ## points to other readings that are required when adopting the current reading or lemma.
  attribute require {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_app =
  
  ## (apparatus entry) contains one entry in a critical apparatus, with an optional lemma and usually one or more readings or notes on the relevant passage. [12.1.1. The Apparatus Entry]
  element app {
    (tei_lem?,
     (tei_model.rdgLike
      | tei_model.noteLike
      | tei_witDetail
      | tei_wit
      | tei_rdgGrp)*),
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## classifies the variation contained in this element according to some convenient typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## identifies the beginning of the lemma in the base text.
    attribute from {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## identifies the endpoint of the lemma in the base text.
    attribute to {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## (location) indicates the location of the variation, when the location-referenced method of apparatus markup is used.
    attribute loc {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_listApp =
  
  ## (list of apparatus entries) contains a list of apparatus entries. [12.2. Linking the Apparatus to the Text]
  element listApp {
    (tei_model.headLike*, tei_desc*, (tei_app | tei_listApp)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_lem =
  
  ## (lemma) contains the lemma, or base text, of a textual variation. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element lem {
    (text
     | tei_model.divLike
     | tei_model.divPart
     | tei_titlePage
     | tei_argument
     | tei_byline
     | tei_docAuthor
     | tei_docDate
     | tei_docEdition
     | tei_docImprint
     | tei_docTitle
     | tei_epigraph
     | tei_imprimatur
     | tei_titlePart
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    tei_att.witnessed.attributes,
    empty
  }
tei_rdg =
  
  ## (reading) contains a single reading within a textual variation. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element rdg {
    (text
     | tei_model.divLike
     | tei_model.divPart
     | tei_titlePage
     | tei_argument
     | tei_byline
     | tei_docAuthor
     | tei_docDate
     | tei_docEdition
     | tei_docImprint
     | tei_docTitle
     | tei_epigraph
     | tei_imprimatur
     | tei_titlePart
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    tei_att.witnessed.attributes,
    empty
  }
tei_rdgGrp =
  
  ## (reading group) within a textual variation, groups two or more readings perceived to have a genetic relationship or other affinity. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element rdgGrp {
    (tei_lem?,
     (tei_model.rdgLike
      | tei_model.noteLike
      | tei_witDetail
      | tei_wit
      | tei_rdgGrp)*)
    >> sch:pattern [
         id = "myTEI-rdgGrp-only1lem-constraint-assert-55"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rdgGrp"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "count(tei:lem) < 2"
             "Only one <lem> element may appear within a <rdgGrp>"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    empty
  }
tei_witDetail =
  
  ## (witness detail) gives further information about a particular witness, or witnesses, to a particular reading. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element witDetail {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.global
     | tei_bibl)*,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attribute.subtype,
    
    ## describes the type of information given about the witness.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## (witnesses) indicates the sigil or sigla identifying the witness or witnesses to which the detail refers.
    attribute wit {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    },
    empty
  }
tei_wit =
  
  ## (wit) contains a list of one or more sigla of witnesses attesting a given reading, in a textual variation. [12.1.4. Witness Information]
  element wit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.rdgPart.attributes,
    empty
  }
tei_listWit =
  
  ## (witness list) lists definitions for all the witnesses referred to by a critical apparatus, optionally grouped hierarchically. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element listWit {
    (tei_model.headLike?, tei_desc*, (tei_witness | tei_listWit)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_witness =
  
  ## (witness) contains either a description of a single witness referred to within the critical apparatus, or a list of witnesses which is to be referred to by a single sigil. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element witness {
    (text | tei_model.limitedPhrase | tei_model.inter | tei_note)*,
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_witStart =
  
  ## (fragmented witness start) indicates the beginning, or resumption, of the text of a fragmentary witness. [12.1.5. Fragmentary Witnesses]
  element witStart {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_witEnd =
  
  ## (fragmented witness end) indicates the end, or suspension, of the text of a fragmentary witness. [12.1.5. Fragmentary Witnesses]
  element witEnd {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_lacunaStart =
  
  ## (lacuna start) indicates the beginning of a lacuna in the text of a mostly complete textual witness. [12.1.5. Fragmentary Witnesses]
  element lacunaStart {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_lacunaEnd =
  
  ## (lacuna end) indicates the end of a lacuna in a mostly complete textual witness. [12.1.5. Fragmentary Witnesses]
  element lacunaEnd {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_variantEncoding =
  
  ## (variant encoding) declares the method used to encode text-critical variants. [12.1.1. The Apparatus Entry]
  element variantEncoding {
    empty,
    tei_att.global.attributes,
    
    ## indicates which method is used to encode the apparatus of variants.
    attribute method {
      
      ## apparatus uses line numbers or other canonical reference scheme referenced in a base text.
      "location-referenced"
      | 
        ## apparatus indicates the precise locations of the beginning and ending of each lemma relative to a base text.
        "double-end-point"
      | 
        ## alternate readings of a passage are given in parallel in the text; no notion of a base text is necessary.
        "parallel-segmentation"
    },
    
    ## indicates whether the apparatus appears within the running text or external to it.
    attribute location {
      
      ## apparatus appears within the running text.
      "internal"
      | 
        ## apparatus appears outside the base text.
        "external"
    }
    >> sch:pattern [
         id =
           "myTEI-variantEncoding-location-variantEncodingLocation-constraint-rule-60"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:variantEncoding"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "@location eq 'external' and @method eq 'parallel-segmentation'"
             "\x{a}" ~
             '              The @location value "external" is inconsistent with the\x{a}' ~
             "              parallel-segmentation method of apparatus markup."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_att.global.facs.attributes = tei_att.global.facs.attribute.facs
tei_att.global.facs.attribute.facs =
  
  ## (facsimile) points to one or more images, portions of an image, or surfaces which correspond to the current element.
  attribute facs {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.change.attributes =
  tei_att.global.change.attribute.change
tei_att.global.change.attribute.change =
  [
    a:documentation [
      "points to one or more "
      ns1:code [ "<change>" ]
      " elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder."
    ]
  ]
  attribute change {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.coordinated.attributes =
  tei_att.coordinated.attribute.start,
  tei_att.coordinated.attribute.ulx,
  tei_att.coordinated.attribute.uly,
  tei_att.coordinated.attribute.lrx,
  tei_att.coordinated.attribute.lry,
  tei_att.coordinated.attribute.points
tei_att.coordinated.attribute.start =
  
  ## indicates the element within a transcription of the text containing at least the start of the writing represented by this zone or surface.
  attribute start {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a rectangular space.
  attribute ulx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a rectangular space.
  attribute uly {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a rectangular space.
  attribute lrx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a rectangular space.
  attribute lry {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.points =
  
  ## identifies a two dimensional area by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.
  attribute points {
    list {
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      }*
    }
  }?
tei_facsimile =
  
  ## contains a representation of some written source in the form of a set of images rather than as transcribed or encoded text. [11.1. Digital Facsimiles]
  element facsimile {
    (tei_front?,
     (tei_model.graphicLike | tei_surface | tei_surfaceGrp)+,
     tei_back?)
    >> sch:pattern [
         id =
           "myTEI-facsimile-no_facsimile_text_nodes-constraint-rule-61"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:facsimile//tei:line | tei:facsimile//tei:zone"
           "\x{a}" ~
           "               "
           sch:report [
             test = "child::text()[ normalize-space(.) ne '']"
             "\x{a}" ~
             "          A facsimile element represents a text with images, thus\x{a}" ~
             "          transcribed text should not be present within it.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_sourceDoc =
  
  ## contains a transcription or other representation of a single source document potentially forming part of a dossier gÃ©nÃ©tique or collection of sources. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element sourceDoc {
    (tei_model.global
     | tei_model.graphicLike
     | tei_surface
     | tei_surfaceGrp)+,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_surface =
  
  ## defines a written surface as a two-dimensional coordinate space, optionally grouping one or more graphic representations of that space, zones of interest within that space, and transcriptions of the writing within them. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element surface {
    ((tei_model.global | tei_model.labelLike | tei_model.graphicLike)*,
     ((tei_zone | tei_line | tei_path | tei_surface | tei_surfaceGrp),
      tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.coordinated.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    
    ## describes the method by which this surface is or was connected to the main surface
    ## Sample values include: 1] glued; 2] pinned; 3] sewn
    attribute attachment {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## indicates whether the surface is attached and folded in such a way as to provide two writing surfaces
    attribute flipping { xsd:boolean }?,
    empty
  }
tei_surfaceGrp =
  
  ## (surface group) defines any kind of useful grouping of written surfaces, for example the recto and verso of a single leaf, which the encoder wishes to treat as a single unit. [11.1. Digital Facsimiles]
  element surfaceGrp {
    (tei_model.global | tei_surface | tei_surfaceGrp)+,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_zone =
  [
    a:documentation [
      "defines any two-dimensional area within a "
      ns1:code [ "<surface>" ]
      " element. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]"
    ]
  ]
  element zone {
    (text
     | tei_model.gLike
     | tei_model.graphicLike
     | tei_model.global
     | tei_surface
     | tei_model.linePart)*,
    tei_att.global.attributes,
    tei_att.coordinated.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    [
      a:defaultValue = "0"
      a:documentation [
        "indicates the amount by which this zone has been rotated clockwise, with respect to the normal orientation of the parent "
        ns1:code [ "<surface>" ]
        " element as implied by the dimensions given in the "
        ns1:code [ "<msDesc>" ]
        " element or by the coordinates of the "
        ns1:code [ "<surface>" ]
        " itself. The orientation is expressed in arc degrees."
      ]
    ]
    attribute rotate { xsd:nonNegativeInteger }?,
    empty
  }
tei_path =
  [
    a:documentation [
      "(path) defines any line passing through two or more points within a "
      ns1:code [ "<surface>" ]
      " element. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]"
    ]
  ]
  element path {
    empty
    >> sch:pattern [
         id = "myTEI-path-pathmustnotbeclosed-constraint-rule-62"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:path[@points]"
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstPair"
             value = "tokenize( normalize-space( @points ), ' ')[1]"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastPair"
             value =
               "tokenize( normalize-space( @points ), ' ')[last()]"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstX"
             value = "xs:float( substring-before( $firstPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstY"
             value = "xs:float( substring-after( $firstPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastX"
             value = "xs:float( substring-before( $lastPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastY"
             value = "xs:float( substring-after( $lastPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "$firstX eq $lastX and $firstY eq $lastY"
             "The first and\x{a}" ~
             "          last elements of this path are the same. To specify a closed polygon, use\x{a}" ~
             "          the zone element rather than the path element. "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.coordinated.attribute.start,
    tei_att.coordinated.attribute.ulx,
    tei_att.coordinated.attribute.uly,
    tei_att.coordinated.attribute.lrx,
    tei_att.coordinated.attribute.lry,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    
    ## identifies a line within the container or bounding box specified by the parent element by means of a series of two or more pairs of numbers, each of which gives the x,y coordinates of a point on the line.
    attribute points {
      list {
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        },
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        },
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        }*
      }
    }?,
    empty
  }
tei_addSpan =
  [
    a:documentation [
      "(added span of text) marks the beginning of a longer sequence of text added by an author, scribe, annotator or corrector (see also "
      ns1:code [ "<add>" ]
      "). [11.3.1.4. Additions and Deletions]"
    ]
  ]
  element addSpan {
    empty
    >> sch:pattern [
         id =
           "myTEI-addSpan-addSpan-requires-spanTo-constraint-assert-56"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-addSpan-addSpan-requires-spanTo-fr-constraint-assert-57"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_damage =
  
  ## (damage) contains an area of damage to the text witness. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element damage {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.damaged.attributes,
    empty
  }
tei_damageSpan =
  
  ## (damaged span of text) marks the beginning of a longer sequence of text which is damaged in some way but still legible. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element damageSpan {
    empty
    >> sch:pattern [
         id =
           "myTEI-damageSpan-damageSpan-requires-spanTo-constraint-assert-58"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-damageSpan-damageSpan-requires-spanTo-fr-constraint-assert-59"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.damaged.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    empty
  }
tei_delSpan =
  
  ## (deleted span of text) marks the beginning of a longer sequence of text deleted, marked as deleted, or otherwise signaled as superfluous or spurious by an author, scribe, annotator, or corrector. [11.3.1.4. Additions and Deletions]
  element delSpan {
    empty
    >> sch:pattern [
         id =
           "myTEI-delSpan-delSpan-requires-spanTo-constraint-assert-60"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "myTEI-delSpan-delSpan-requires-spanTo-fr-constraint-assert-61"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_ex =
  
  ## (editorial expansion) contains a sequence of letters added by an editor or transcriber when expanding an abbreviation. [11.3.1.2. Abbreviation and Expansion]
  element ex {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. [11.6. Headers, Footers, and Similar Matter]
  element fw {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    
    ## classifies the material encoded according to some useful typology.
    ## Sample values include: 1] header; 2] footer; 3] pageNum (page number); 4] lineNum (line number); 5] sig (signature); 6] catch (catchword)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_handNotes =
  [
    a:documentation [
      "contains one or more "
      ns1:code [ "<handNote>" ]
      " elements documenting the different hands identified within the source texts. [11.3.2.1. Document Hands]"
    ]
  ]
  element handNotes { tei_handNote+, tei_att.global.attributes, empty }
tei_handShift =
  
  ## (handwriting shift) marks the beginning of a sequence of text written in a new hand, or the beginning of a scribal stint. [11.3.2.1. Document Hands]
  element handShift {
    empty,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    [
      a:documentation [
        "indicates a "
        ns1:code [ "<handNote>" ]
        " element describing the hand concerned."
      ]
    ]
    attribute new {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_am =
  
  ## (abbreviation marker) contains a sequence of letters or signs present in an abbreviation which are omitted or replaced in the expanded form of the abbreviation. [11.3.1.2. Abbreviation and Expansion]
  element am {
    (text | tei_model.gLike | tei_model.pPart.transcriptional)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_restore =
  
  ## (restore) indicates restoration of text to an earlier state by cancellation of an editorial or authorial marking or instruction. [11.3.1.6. Cancellation of Deletions and Other Markings]
  element restore {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_space =
  
  ## (space) indicates the location of a significant space in the text. [11.4.1. Space]
  element space {
    (tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attribute.xmlid,
    tei_att.global.attribute.n,
    tei_att.global.attribute.xmllang,
    tei_att.global.attribute.xmlbase,
    tei_att.global.attribute.xmlspace,
    tei_att.global.rendition.attribute.rend,
    tei_att.global.rendition.attribute.style,
    tei_att.global.rendition.attribute.rendition,
    tei_att.global.linking.attribute.corresp,
    tei_att.global.linking.attribute.synch,
    tei_att.global.linking.attribute.sameAs,
    tei_att.global.linking.attribute.copyOf,
    tei_att.global.linking.attribute.next,
    tei_att.global.linking.attribute.prev,
    tei_att.global.linking.attribute.exclude,
    tei_att.global.linking.attribute.select,
    tei_att.global.analytic.attribute.ana,
    tei_att.global.facs.attribute.facs,
    tei_att.global.change.attribute.change,
    tei_att.global.responsibility.attribute.cert,
    tei_att.global.source.attribute.source,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    
    ## (responsible party) (responsible party) indicates the individual responsible for identifying and measuring the space
    attribute resp {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    
    ## (dimension) indicates whether the space is horizontal or vertical.
    attribute dim {
      
      ## the space is horizontal.
      "horizontal"
      | 
        ## the space is vertical.
        "vertical"
    }?,
    empty
  }
tei_subst =
  
  ## (substitution) groups one or more deletions (or surplus text) with one or more additions when the combination is to be regarded as a single intervention in the text. [11.3.1.5. Substitutions]
  element subst {
    ((tei_add | tei_surplus | tei_del | tei_model.milestoneLike)+)
    >> sch:pattern [
         id = "myTEI-subst-substContents1-constraint-assert-62"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "child::tei:add and (child::tei:del or child::tei:surplus)"
             "\x{a}" ~
             "                  "
             sch:name [ ]
             " must have at least one child add and at least one child del or surplus"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_substJoin =
  
  ## (substitution join) identifies a series of possibly fragmented additions, deletions, or other revisions on a manuscript that combine to make up a single intervention in the text [11.3.1.5. Substitutions]
  element substJoin {
    (tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_supplied =
  
  ## (supplied) signifies text supplied by the transcriber or editor for any reason; for example because the original cannot be read due to physical damage, or because of an obvious omission by the author or scribe. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element supplied {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## one or more words indicating why the text has had to be supplied, e.g. overbinding, faded-ink, lost-folio, omitted-in-original.
    attribute reason {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_surplus =
  
  ## (surplus) marks text present in the source which the editor believes to be superfluous or redundant. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element surplus {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## one or more words indicating why this text is believed to be superfluous, e.g. repeated, interpolated etc.
    attribute reason {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_secl =
  
  ## (secluded text) Secluded. Marks text present in the source which the editor believes to be genuine but out of its original place (which is unknown). [11.3.1.7. Text Omitted from or Supplied in the Transcription]
  element secl {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## one or more words indicating why this text has been secluded, e.g. interpolated etc.
    attribute reason {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_line =
  
  ## contains the transcription of a topographic line in the source document [11.2.2. Embedded Transcription]
  element line {
    (text | tei_model.global | tei_model.gLike | tei_model.linePart)*,
    tei_att.typed.attributes,
    tei_att.global.attributes,
    tei_att.coordinated.attributes,
    tei_att.written.attributes,
    empty
  }
tei_listTranspose =
  
  ## supplies a list of transpositions, each of which is indicated at some point in a document typically by means of metamarks. [11.3.4.5. Transpositions]
  element listTranspose {
    (tei_desc*, tei_transpose+), tei_att.global.attributes, empty
  }
tei_metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. Metamarks]
  element metamark {
    tei_macro.specialPara,
    tei_att.spanning.attributes,
    tei_att.placement.attributes,
    tei_att.global.attributes,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the metamark.
    attribute function {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## identifies one or more elements to which the metamark applies.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_mod =
  
  ## represents any kind of modification identified within a single document. [11.3.4.1. Generic Modification]
  element mod {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_redo =
  
  ## indicates one or more cancelled interventions in a document which have subsequently been marked as reaffirmed or repeated. [11.3.4.4. Confirmation, Cancellation, and Reinstatement of Modifications]
  element redo {
    empty,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    
    ## points to one or more elements representing the interventions which are being reasserted.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_retrace =
  
  ## contains a sequence of writing which has been retraced, for example by over-inking, to clarify or fix it. [11.3.4.3. Fixation and Clarification]
  element retrace {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_transpose =
  
  ## describes a single textual transposition as an ordered list of at least two pointers specifying the order in which the elements indicated should be re-combined. [11.3.4.5. Transpositions]
  element transpose {
    (tei_ptr, tei_ptr, tei_ptr*), tei_att.global.attributes, empty
  }
tei_undo =
  
  ## indicates one or more marked-up interventions in a document which have subsequently been marked for cancellation. [11.3.4.4. Confirmation, Cancellation, and Reinstatement of Modifications]
  element undo {
    empty,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    
    ## points to one or more elements representing the interventions which are to be reverted or undone.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_att.metrical.attributes =
  tei_att.metrical.attribute.met,
  tei_att.metrical.attribute.real,
  tei_att.metrical.attribute.rhyme
tei_att.metrical.attribute.met =
  
  ## (metrical structure, conventional) contains a user-specified encoding for the conventional metrical structure of the element.
  attribute met { xsd:token }?
tei_att.metrical.attribute.real =
  
  ## (metrical structure, realized) contains a user-specified encoding for the actual realization of the conventional metrical structure applicable to the element.
  attribute real { xsd:token }?
tei_att.metrical.attribute.rhyme =
  
  ## (rhyme scheme) specifies the rhyme scheme applicable to a group of verse lines.
  attribute rhyme { xsd:token }?
tei_att.enjamb.attributes = tei_att.enjamb.attribute.enjamb
tei_att.enjamb.attribute.enjamb =
  
  ## (enjambement) indicates that the end of a verse line is marked by enjambement.
  ## Sample values include: 1] no; 2] yes; 3] weak; 4] strong
  attribute enjamb {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_metDecl =
  [
    a:documentation [
      "(metrical notation declaration) documents the notation employed to represent a metrical pattern when this is specified as the value of a "
      ns1:code [ "@met" ]
      ", "
      ns1:code [ "@real" ]
      ", or "
      ns1:code [ "@rhyme" ]
      " attribute on any structural element of a metrical text (e.g. "
      ns1:code [ "<lg>" ]
      ", "
      ns1:code [ "<l>" ]
      ", or "
      ns1:code [ "<seg>" ]
      "). [6.6. Metrical Notation Declaration 6.4. Rhyme and Metrical Analysis]"
    ]
  ]
  element metDecl {
    ((tei_model.pLike | tei_model.noteLike)+ | tei_metSym+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## indicates whether the notation conveys the abstract metrical form, its actual prosodic realization, or the rhyme scheme, or some combination thereof.
    [ a:defaultValue = "met real" ]
    attribute type {
      list {
        ([
           a:documentation [
             "(met attribute) declaration applies to the abstract metrical form recorded on the "
             ns1:code [ "@met" ]
             " attribute"
           ]
         ]
         "met"
         | [
             a:documentation [
               "(real attribute) declaration applies to the actual realization of the conventional metrical structure recorded on the "
               ns1:code [ "@real" ]
               " attribute"
             ]
           ]
           "real"
         | [
             a:documentation [
               "declaration applies to the rhyme scheme recorded on the "
               ns1:code [ "@rhyme" ]
               " attribute"
             ]
           ]
           "rhyme"),
        ([
           a:documentation [
             "(met attribute) declaration applies to the abstract metrical form recorded on the "
             ns1:code [ "@met" ]
             " attribute"
           ]
         ]
         "met"
         | [
             a:documentation [
               "(real attribute) declaration applies to the actual realization of the conventional metrical structure recorded on the "
               ns1:code [ "@real" ]
               " attribute"
             ]
           ]
           "real"
         | [
             a:documentation [
               "declaration applies to the rhyme scheme recorded on the "
               ns1:code [ "@rhyme" ]
               " attribute"
             ]
           ]
           "rhyme")?,
        ([
           a:documentation [
             "(met attribute) declaration applies to the abstract metrical form recorded on the "
             ns1:code [ "@met" ]
             " attribute"
           ]
         ]
         "met"
         | [
             a:documentation [
               "(real attribute) declaration applies to the actual realization of the conventional metrical structure recorded on the "
               ns1:code [ "@real" ]
               " attribute"
             ]
           ]
           "real"
         | [
             a:documentation [
               "declaration applies to the rhyme scheme recorded on the "
               ns1:code [ "@rhyme" ]
               " attribute"
             ]
           ]
           "rhyme")?
      }
    }?,
    
    ## (regular expression pattern) specifies a regular expression defining any value that is legal for this notation.
    attribute pattern { xsd:token }?,
    empty
  }
tei_metSym =
  [
    a:documentation [
      "(metrical notation symbol) documents the intended significance of a particular character or character sequence within a metrical notation, either explicitly or in terms of other "
      ns1:code [ "<metSym>" ]
      " elements in the same "
      ns1:code [ "<metDecl>" ]
      ". [6.6. Metrical Notation Declaration]"
    ]
  ]
  element metSym {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    
    ## specifies the character or character sequence being documented.
    attribute value {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    },
    [
      a:defaultValue = "true"
      a:documentation [
        "specifies whether the symbol is defined in terms of other symbols ("
        ns1:code [ "@terminal" ]
        " is set to false) or in prose ("
        ns1:code [ "@terminal" ]
        " is set to true)."
      ]
    ]
    attribute terminal { xsd:boolean }?,
    empty
  }
tei_caesura =
  
  ## marks the point at which a metrical line may be divided. [6.2. Components of the Verse Line]
  element caesura { empty, tei_att.global.attributes, empty }
tei_rhyme =
  
  ## marks the rhyming part of a metrical line. [6.5. Rhyme]
  element rhyme {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## provides a label (usually a single letter) to identify which part of a rhyme scheme this rhyming string instantiates.
    attribute label {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
start = tei_TEI | tei_teiCorpus
